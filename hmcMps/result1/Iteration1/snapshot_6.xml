<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="6">
  <HTTPTask id="22" hostname="mps-test.haomaiche.com" path="/fs/fs/fsEmploy.do?method=index" url="http://mps-test.haomaiche.com/fs/fs/fsEmploy.do?method=index" ip="10.0.3.32" port="80" connectionId="1472" origin="Primary" startTime="1238" endTime="1272">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>bWV0aG9kPWluZGV4</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="method" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>aW5kZXg=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="User-Agent" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>emgtY24=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9mcy9mcy9mc0VtcGxveS5kbz9tZXRob2Q9aW5kZXggSFRUUC8xLjENClVzZXItQWdlbnQ6IE1vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDguMDsgV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzQuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3Mjk7IE1lZGlhIENlbnRlciBQQyA2LjA7IC5ORVQ0LjBDOyAuTkVUNC4wRSkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1jbg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG1wcy10ZXN0Lmhhb21haWNoZS5jb20NCkNvb2tpZTogU0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbngvMS4xMC4y</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Location" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tc3RvcmU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMzAyIEZvdW5kDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQNCkNvbnRlbnQtTGVuZ3RoOiAwDQpMb2NhdGlvbjogaHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KRXhwaXJlczogVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQNCkNhY2hlLUNvbnRyb2w6IG5vLWNhY2hlDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPResponse>
    <HTTPTask id="23" hostname="mps-test.haomaiche.com" path="/fs/index.html" url="http://mps-test.haomaiche.com/fs/index.html" ip="10.0.3.32" port="80" connectionId="1532" origin="Redirection" startTime="1273" endTime="1337">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>emgtY24=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC9mcy9pbmRleC5odG1sIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzQuMCAoY29tcGF0aWJsZTsgTVNJRSA4LjA7IFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgVHJpZGVudC80LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEUpDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogemgtY24NCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBtcHMtdGVzdC5oYW9tYWljaGUuY29tDQpDb29raWU6IFNIQVJFSlNFU1NJT05JRD00NWY3YzBhZS0yZWFiLTQ4NGEtYTUzZi1kYjcxMjBkMWU1NWYNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Server" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>bmdpbngvMS4xMC4y</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9odG1s</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTQyNzg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAyNiBBdWcgMjAxOSAwMToyNzowOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sDQpDb250ZW50LUxlbmd0aDogMTQyNzgNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkxhc3QtTW9kaWZpZWQ6IE1vbiwgMjYgQXVnIDIwMTkgMDE6Mjc6MDggR01UDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
      <HTTPTask id="24" hostname="mps-test.haomaiche.com" path="/resources/js/easyui-1.3.2/themes/gray/easyui.css" url="http://mps-test.haomaiche.com/resources/js/easyui-1.3.2/themes/gray/easyui.css" ip="10.0.3.32" port="80" connectionId="1472" origin="HTML" ordinal="1" startTime="1306" endTime="2405">
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9yZXNvdXJjZXMvanMvZWFzeXVpLTEuMy4yL3RoZW1lcy9ncmF5L2Vhc3l1aS5jc3MgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9tcHMtdGVzdC5oYW9tYWljaGUuY29tL2ZzL2luZGV4Lmh0bWwNClVzZXItQWdlbnQ6IE1vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDguMDsgV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzQuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3Mjk7IE1lZGlhIENlbnRlciBQQyA2LjA7IC5ORVQ0LjBDOyAuTkVUNC4wRSkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1jbg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG1wcy10ZXN0Lmhhb21haWNoZS5jb20NCkNvb2tpZTogU0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dGV4dC9jc3M=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NDQzNTE=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9jc3MNCkNvbnRlbnQtTGVuZ3RoOiA0NDM1MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KTGFzdC1Nb2RpZmllZDogVHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQNCg0K</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData></ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
      </HTTPTask>
      <HTTPTask id="25" hostname="mps-test.haomaiche.com" path="/resources/js/jquery-1.7.2.js" url="http://mps-test.haomaiche.com/resources/js/jquery-1.7.2.js" ip="10.0.3.32" port="80" connectionId="1540" origin="HTML" ordinal="2" startTime="1306" endTime="2462">
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9yZXNvdXJjZXMvanMvanF1ZXJ5LTEuNy4yLmpzIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbXBzLXRlc3QuaGFvbWFpY2hlLmNvbS9mcy9pbmRleC5odG1sDQpVc2VyLUFnZW50OiBNb3ppbGxhLzQuMCAoY29tcGF0aWJsZTsgTVNJRSA4LjA7IFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgVHJpZGVudC80LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEUpDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogemgtY24NCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBtcHMtdGVzdC5oYW9tYWljaGUuY29tDQpDb29raWU6IFNIQVJFSlNFU1NJT05JRD00NWY3YzBhZS0yZWFiLTQ4NGEtYTUzZi1kYjcxMjBkMWU1NWYNCg0K</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjUyODgx</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDI1Mjg4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KTGFzdC1Nb2RpZmllZDogVHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQNCg0K</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>LyohCiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjEuNy4yCiAqIGh0dHA6Ly9qcXVlcnkuY29tLwogKgogKiBDb3B5cmlnaHQgMjAxMSwgSm9obiBSZXNpZwogKiBEdWFsIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgb3IgR1BMIFZlcnNpb24gMiBsaWNlbnNlcy4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKgogKiBJbmNsdWRlcyBTaXp6bGUuanMKICogaHR0cDovL3NpenpsZWpzLmNvbS8KICogQ29weXJpZ2h0IDIwMTEsIFRoZSBEb2pvIEZvdW5kYXRpb24KICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCwgQlNELCBhbmQgR1BMIExpY2Vuc2VzLgogKgogKiBEYXRlOiBXZWQgTWFyIDIxIDEyOjQ2OjM0IDIwMTIgLTA3MDAKICovCihmdW5jdGlvbiggd2luZG93LCB1bmRlZmluZWQgKSB7CgovLyBVc2UgdGhlIGNvcnJlY3QgZG9jdW1lbnQgYWNjb3JkaW5nbHkgd2l0aCB3aW5kb3cgYXJndW1lbnQgKHNhbmRib3gpCnZhciBkb2N1bWVudCA9IHdpbmRvdy5kb2N1bWVudCwKCW5hdmlnYXRvciA9IHdpbmRvdy5uYXZpZ2F0b3IsCglsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjsKdmFyIGpRdWVyeSA9IChmdW5jdGlvbigpIHsKCi8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5CnZhciBqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7CgkJLy8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnCgkJcmV0dXJuIG5ldyBqUXVlcnkuZm4uaW5pdCggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3RqUXVlcnkgKTsKCX0sCgoJLy8gTWFwIG92ZXIgalF1ZXJ5IGluIGNhc2Ugb2Ygb3ZlcndyaXRlCglfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSwKCgkvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZQoJXyQgPSB3aW5kb3cuJCwKCgkvLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudCkKCXJvb3RqUXVlcnksCgoJLy8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Mgb3IgSUQgc3RyaW5ncwoJLy8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1MgdmlhIGxvY2F0aW9uLmhhc2ggKCM5NTIxKQoJcXVpY2tFeHByID0gL14oPzpbXiM8XSooPFtcd1xXXSs+KVtePl0qJHwjKFtcd1wtXSopJCkvLAoKCS8vIENoZWNrIGlmIGEgc3RyaW5nIGhhcyBhIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlciBpbiBpdAoJcm5vdHdoaXRlID0gL1xTLywKCgkvLyBVc2VkIGZvciB0cmltbWluZyB3aGl0ZXNwYWNlCgl0cmltTGVmdCA9IC9eXHMrLywKCXRyaW1SaWdodCA9IC9ccyskLywKCgkvLyBNYXRjaCBhIHN0YW5kYWxvbmUgdGFnCglyc2luZ2xlVGFnID0gL148KFx3KylccypcLz8+KD86PFwvXDE+KT8kLywKCgkvLyBKU09OIFJlZ0V4cAoJcnZhbGlkY2hhcnMgPSAvXltcXSw6e31cc10qJC8sCglydmFsaWRlc2NhcGUgPSAvXFwoPzpbIlxcXC9iZm5ydF18dVswLTlhLWZBLUZdezR9KS9nLAoJcnZhbGlkdG9rZW5zID0gLyJbXiJcXFxuXHJdKiJ8dHJ1ZXxmYWxzZXxudWxsfC0/XGQrKD86XC5cZCopPyg/OltlRV1bK1wtXT9cZCspPy9nLAoJcnZhbGlkYnJhY2VzID0gLyg/Ol58OnwsKSg/OlxzKlxbKSsvZywKCgkvLyBVc2VyYWdlbnQgUmVnRXhwCglyd2Via2l0ID0gLyh3ZWJraXQpWyBcL10oW1x3Ll0rKS8sCglyb3BlcmEgPSAvKG9wZXJhKSg/Oi4qdmVyc2lvbik/WyBcL10oW1x3Ll0rKS8sCglybXNpZSA9IC8obXNpZSkgKFtcdy5dKykvLAoJcm1vemlsbGEgPSAvKG1vemlsbGEpKD86Lio/IHJ2OihbXHcuXSspKT8vLAoKCS8vIE1hdGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZwoJcmRhc2hBbHBoYSA9IC8tKFthLXpdfFswLTldKS9pZywKCXJtc1ByZWZpeCA9IC9eLW1zLS8sCgoJLy8gVXNlZCBieSBqUXVlcnkuY2FtZWxDYXNlIGFzIGNhbGxiYWNrIHRvIHJlcGxhY2UoKQoJZmNhbWVsQ2FzZSA9IGZ1bmN0aW9uKCBhbGwsIGxldHRlciApIHsKCQlyZXR1cm4gKCBsZXR0ZXIgKyAiIiApLnRvVXBwZXJDYXNlKCk7Cgl9LAoKCS8vIEtlZXAgYSBVc2VyQWdlbnQgc3RyaW5nIGZvciB1c2Ugd2l0aCBqUXVlcnkuYnJvd3NlcgoJdXNlckFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudCwKCgkvLyBGb3IgbWF0Y2hpbmcgdGhlIGVuZ2luZSBhbmQgdmVyc2lvbiBvZiB0aGUgYnJvd3NlcgoJYnJvd3Nlck1hdGNoLAoKCS8vIFRoZSBkZWZlcnJlZCB1c2VkIG9uIERPTSByZWFkeQoJcmVhZHlMaXN0LAoKCS8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyCglET01Db250ZW50TG9hZGVkLAoKCS8vIFNhdmUgYSByZWZlcmVuY2UgdG8gc29tZSBjb3JlIG1ldGhvZHMKCXRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZywKCWhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksCglwdXNoID0gQXJyYXkucHJvdG90eXBlLnB1c2gsCglzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZSwKCXRyaW0gPSBTdHJpbmcucHJvdG90eXBlLnRyaW0sCglpbmRleE9mID0gQXJyYXkucHJvdG90eXBlLmluZGV4T2YsCgoJLy8gW1tDbGFzc11dIC0+IHR5cGUgcGFpcnMKCWNsYXNzMnR5cGUgPSB7fTsKCmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7Cgljb25zdHJ1Y3RvcjogalF1ZXJ5LAoJaW5pdDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByb290alF1ZXJ5ICkgewoJCXZhciBtYXRjaCwgZWxlbSwgcmV0LCBkb2M7CgoJCS8vIEhhbmRsZSAkKCIiKSwgJChudWxsKSwgb3IgJCh1bmRlZmluZWQpCgkJaWYgKCAhc2VsZWN0b3IgKSB7CgkJCXJldHVybiB0aGlzOwoJCX0KCgkJLy8gSGFuZGxlICQoRE9NRWxlbWVudCkKCQlpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkgewoJCQl0aGlzLmNvbnRleHQgPSB0aGlzWzBdID0gc2VsZWN0b3I7CgkJCXRoaXMubGVuZ3RoID0gMTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoKCQkvLyBUaGUgYm9keSBlbGVtZW50IG9ubHkgZXhpc3RzIG9uY2UsIG9wdGltaXplIGZpbmRpbmcgaXQKCQlpZiAoIHNlbGVjdG9yID09PSAiYm9keSIgJiYgIWNvbnRleHQgJiYgZG9jdW1lbnQuYm9keSApIHsKCQkJdGhpcy5jb250ZXh0ID0gZG9jdW1lbnQ7CgkJCXRoaXNbMF0gPSBkb2N1bWVudC5ib2R5OwoJCQl0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3I7CgkJCXRoaXMubGVuZ3RoID0gMTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoKCQkvLyBIYW5kbGUgSFRNTCBzdHJpbmdzCgkJaWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09ICJzdHJpbmciICkgewoJCQkvLyBBcmUgd2UgZGVhbGluZyB3aXRoIEhUTUwgc3RyaW5nIG9yIGFuIElEPwoJCQlpZiAoIHNlbGVjdG9yLmNoYXJBdCgwKSA9PT0gIjwiICYmIHNlbGVjdG9yLmNoYXJBdCggc2VsZWN0b3IubGVuZ3RoIC0gMSApID09PSAiPiIgJiYgc2VsZWN0b3IubGVuZ3RoID49IDMgKSB7CgkJCQkvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVjawoJCQkJbWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07CgoJCQl9IGVsc2UgewoJCQkJbWF0Y2ggPSBxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKTsKCQkJfQoKCQkJLy8gVmVyaWZ5IGEgbWF0Y2gsIGFuZCB0aGF0IG5vIGNvbnRleHQgd2FzIHNwZWNpZmllZCBmb3IgI2lkCgkJCWlmICggbWF0Y2ggJiYgKG1hdGNoWzFdIHx8ICFjb250ZXh0KSApIHsKCgkJCQkvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSkKCQkJCWlmICggbWF0Y2hbMV0gKSB7CgkJCQkJY29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WzBdIDogY29udGV4dDsKCQkJCQlkb2MgPSAoIGNvbnRleHQgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50ICk7CgoJCQkJCS8vIElmIGEgc2luZ2xlIHN0cmluZyBpcyBwYXNzZWQgaW4gYW5kIGl0J3MgYSBzaW5nbGUgdGFnCgkJCQkJLy8ganVzdCBkbyBhIGNyZWF0ZUVsZW1lbnQgYW5kIHNraXAgdGhlIHJlc3QKCQkJCQlyZXQgPSByc2luZ2xlVGFnLmV4ZWMoIHNlbGVjdG9yICk7CgoJCQkJCWlmICggcmV0ICkgewoJCQkJCQlpZiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7CgkJCQkJCQlzZWxlY3RvciA9IFsgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggcmV0WzFdICkgXTsKCQkJCQkJCWpRdWVyeS5mbi5hdHRyLmNhbGwoIHNlbGVjdG9yLCBjb250ZXh0LCB0cnVlICk7CgoJCQkJCQl9IGVsc2UgewoJCQkJCQkJc2VsZWN0b3IgPSBbIGRvYy5jcmVhdGVFbGVtZW50KCByZXRbMV0gKSBdOwoJCQkJCQl9CgoJCQkJCX0gZWxzZSB7CgkJCQkJCXJldCA9IGpRdWVyeS5idWlsZEZyYWdtZW50KCBbIG1hdGNoWzFdIF0sIFsgZG9jIF0gKTsKCQkJCQkJc2VsZWN0b3IgPSAoIHJldC5jYWNoZWFibGUgPyBqUXVlcnkuY2xvbmUocmV0LmZyYWdtZW50KSA6IHJldC5mcmFnbWVudCApLmNoaWxkTm9kZXM7CgkJCQkJfQoKCQkJCQlyZXR1cm4galF1ZXJ5Lm1lcmdlKCB0aGlzLCBzZWxlY3RvciApOwoKCQkJCS8vIEhBTkRMRTogJCgiI2lkIikKCQkJCX0gZWxzZSB7CgkJCQkJZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtYXRjaFsyXSApOwoKCQkJCQkvLyBDaGVjayBwYXJlbnROb2RlIHRvIGNhdGNoIHdoZW4gQmxhY2tiZXJyeSA0LjYgcmV0dXJucwoJCQkJCS8vIG5vZGVzIHRoYXQgYXJlIG5vIGxvbmdlciBpbiB0aGUgZG9jdW1lbnQgIzY5NjMKCQkJCQlpZiAoIGVsZW0gJiYgZWxlbS5wYXJlbnROb2RlICkgewoJCQkJCQkvLyBIYW5kbGUgdGhlIGNhc2Ugd2hlcmUgSUUgYW5kIE9wZXJhIHJldHVybiBpdGVtcwoJCQkJCQkvLyBieSBuYW1lIGluc3RlYWQgb2YgSUQKCQkJCQkJaWYgKCBlbGVtLmlkICE9PSBtYXRjaFsyXSApIHsKCQkJCQkJCXJldHVybiByb290alF1ZXJ5LmZpbmQoIHNlbGVjdG9yICk7CgkJCQkJCX0KCgkJCQkJCS8vIE90aGVyd2lzZSwgd2UgaW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3QKCQkJCQkJdGhpcy5sZW5ndGggPSAxOwoJCQkJCQl0aGlzWzBdID0gZWxlbTsKCQkJCQl9CgoJCQkJCXRoaXMuY29udGV4dCA9IGRvY3VtZW50OwoJCQkJCXRoaXMuc2VsZWN0b3IgPSBzZWxlY3RvcjsKCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0KCgkJCS8vIEhBTkRMRTogJChleHByLCAkKC4uLikpCgkJCX0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkgewoJCQkJcmV0dXJuICggY29udGV4dCB8fCByb290alF1ZXJ5ICkuZmluZCggc2VsZWN0b3IgKTsKCgkJCS8vIEhBTkRMRTogJChleHByLCBjb250ZXh0KQoJCQkvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcikKCQkJfSBlbHNlIHsKCQkJCXJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTsKCQkJfQoKCQkvLyBIQU5ETEU6ICQoZnVuY3Rpb24pCgkJLy8gU2hvcnRjdXQgZm9yIGRvY3VtZW50IHJlYWR5CgkJfSBlbHNlIGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7CgkJCXJldHVybiByb290alF1ZXJ5LnJlYWR5KCBzZWxlY3RvciApOwoJCX0KCgkJaWYgKCBzZWxlY3Rvci5zZWxlY3RvciAhPT0gdW5kZWZpbmVkICkgewoJCQl0aGlzLnNlbGVjdG9yID0gc2VsZWN0b3Iuc2VsZWN0b3I7CgkJCXRoaXMuY29udGV4dCA9IHNlbGVjdG9yLmNvbnRleHQ7CgkJfQoKCQlyZXR1cm4galF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IsIHRoaXMgKTsKCX0sCgoJLy8gU3RhcnQgd2l0aCBhbiBlbXB0eSBzZWxlY3RvcgoJc2VsZWN0b3I6ICIiLAoKCS8vIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgalF1ZXJ5IGJlaW5nIHVzZWQKCWpxdWVyeTogIjEuNy4yIiwKCgkvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDAKCWxlbmd0aDogMCwKCgkvLyBUaGUgbnVtYmVyIG9mIGVsZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldAoJc2l6ZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMubGVuZ3RoOwoJfSwKCgl0b0FycmF5OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gc2xpY2UuY2FsbCggdGhpcywgMCApOwoJfSwKCgkvLyBHZXQgdGhlIE50aCBlbGVtZW50IGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0IE9SCgkvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheQoJZ2V0OiBmdW5jdGlvbiggbnVtICkgewoJCXJldHVybiBudW0gPT0gbnVsbCA/CgoJCQkvLyBSZXR1cm4gYSAnY2xlYW4nIGFycmF5CgkJCXRoaXMudG9BcnJheSgpIDoKCgkJCS8vIFJldHVybiBqdXN0IHRoZSBvYmplY3QKCQkJKCBudW0gPCAwID8gdGhpc1sgdGhpcy5sZW5ndGggKyBudW0gXSA6IHRoaXNbIG51bSBdICk7Cgl9LAoKCS8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2sKCS8vIChyZXR1cm5pbmcgdGhlIG5ldyBtYXRjaGVkIGVsZW1lbnQgc2V0KQoJcHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMsIG5hbWUsIHNlbGVjdG9yICkgewoJCS8vIEJ1aWxkIGEgbmV3IGpRdWVyeSBtYXRjaGVkIGVsZW1lbnQgc2V0CgkJdmFyIHJldCA9IHRoaXMuY29uc3RydWN0b3IoKTsKCgkJaWYgKCBqUXVlcnkuaXNBcnJheSggZWxlbXMgKSApIHsKCQkJcHVzaC5hcHBseSggcmV0LCBlbGVtcyApOwoKCQl9IGVsc2UgewoJCQlqUXVlcnkubWVyZ2UoIHJldCwgZWxlbXMgKTsKCQl9CgoJCS8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZlcmVuY2UpCgkJcmV0LnByZXZPYmplY3QgPSB0aGlzOwoKCQlyZXQuY29udGV4dCA9IHRoaXMuY29udGV4dDsKCgkJaWYgKCBuYW1lID09PSAiZmluZCIgKSB7CgkJCXJldC5zZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgKyAoIHRoaXMuc2VsZWN0b3IgPyAiICIgOiAiIiApICsgc2VsZWN0b3I7CgkJfSBlbHNlIGlmICggbmFtZSApIHsKCQkJcmV0LnNlbGVjdG9yID0gdGhpcy5zZWxlY3RvciArICIuIiArIG5hbWUgKyAiKCIgKyBzZWxlY3RvciArICIpIjsKCQl9CgoJCS8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0CgkJcmV0dXJuIHJldDsKCX0sCgoJLy8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC4KCS8vIChZb3UgY2FuIHNlZWQgdGhlIGFyZ3VtZW50cyB3aXRoIGFuIGFycmF5IG9mIGFyZ3MsIGJ1dCB0aGlzIGlzCgkvLyBvbmx5IHVzZWQgaW50ZXJuYWxseS4pCgllYWNoOiBmdW5jdGlvbiggY2FsbGJhY2ssIGFyZ3MgKSB7CgkJcmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjaywgYXJncyApOwoJfSwKCglyZWFkeTogZnVuY3Rpb24oIGZuICkgewoJCS8vIEF0dGFjaCB0aGUgbGlzdGVuZXJzCgkJalF1ZXJ5LmJpbmRSZWFkeSgpOwoKCQkvLyBBZGQgdGhlIGNhbGxiYWNrCgkJcmVhZHlMaXN0LmFkZCggZm4gKTsKCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCWVxOiBmdW5jdGlvbiggaSApIHsKCQlpID0gK2k7CgkJcmV0dXJuIGkgPT09IC0xID8KCQkJdGhpcy5zbGljZSggaSApIDoKCQkJdGhpcy5zbGljZSggaSwgaSArIDEgKTsKCX0sCgoJZmlyc3Q6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmVxKCAwICk7Cgl9LAoKCWxhc3Q6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmVxKCAtMSApOwoJfSwKCglzbGljZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICksCgkJCSJzbGljZSIsIHNsaWNlLmNhbGwoYXJndW1lbnRzKS5qb2luKCIsIikgKTsKCX0sCgoJbWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7CgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkubWFwKHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkgewoJCQlyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApOwoJCX0pKTsKCX0sCgoJZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IobnVsbCk7Cgl9LAoKCS8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS4KCS8vIEJlaGF2ZXMgbGlrZSBhbiBBcnJheSdzIG1ldGhvZCwgbm90IGxpa2UgYSBqUXVlcnkgbWV0aG9kLgoJcHVzaDogcHVzaCwKCXNvcnQ6IFtdLnNvcnQsCglzcGxpY2U6IFtdLnNwbGljZQp9OwoKLy8gR2l2ZSB0aGUgaW5pdCBmdW5jdGlvbiB0aGUgalF1ZXJ5IHByb3RvdHlwZSBmb3IgbGF0ZXIgaW5zdGFudGlhdGlvbgpqUXVlcnkuZm4uaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47CgpqUXVlcnkuZXh0ZW5kID0galF1ZXJ5LmZuLmV4dGVuZCA9IGZ1bmN0aW9uKCkgewoJdmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLAoJCXRhcmdldCA9IGFyZ3VtZW50c1swXSB8fCB7fSwKCQlpID0gMSwKCQlsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLAoJCWRlZXAgPSBmYWxzZTsKCgkvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uCglpZiAoIHR5cGVvZiB0YXJnZXQgPT09ICJib29sZWFuIiApIHsKCQlkZWVwID0gdGFyZ2V0OwoJCXRhcmdldCA9IGFyZ3VtZW50c1sxXSB8fCB7fTsKCQkvLyBza2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0CgkJaSA9IDI7Cgl9CgoJLy8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpCglpZiAoIHR5cGVvZiB0YXJnZXQgIT09ICJvYmplY3QiICYmICFqUXVlcnkuaXNGdW5jdGlvbih0YXJnZXQpICkgewoJCXRhcmdldCA9IHt9OwoJfQoKCS8vIGV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZAoJaWYgKCBsZW5ndGggPT09IGkgKSB7CgkJdGFyZ2V0ID0gdGhpczsKCQktLWk7Cgl9CgoJZm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7CgkJLy8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlcwoJCWlmICggKG9wdGlvbnMgPSBhcmd1bWVudHNbIGkgXSkgIT0gbnVsbCApIHsKCQkJLy8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdAoJCQlmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7CgkJCQlzcmMgPSB0YXJnZXRbIG5hbWUgXTsKCQkJCWNvcHkgPSBvcHRpb25zWyBuYW1lIF07CgoJCQkJLy8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcAoJCQkJaWYgKCB0YXJnZXQgPT09IGNvcHkgKSB7CgkJCQkJY29udGludWU7CgkJCQl9CgoJCQkJLy8gUmVjdXJzZSBpZiB3ZSdyZSBtZXJnaW5nIHBsYWluIG9iamVjdHMgb3IgYXJyYXlzCgkJCQlpZiAoIGRlZXAgJiYgY29weSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KGNvcHkpIHx8IChjb3B5SXNBcnJheSA9IGpRdWVyeS5pc0FycmF5KGNvcHkpKSApICkgewoJCQkJCWlmICggY29weUlzQXJyYXkgKSB7CgkJCQkJCWNvcHlJc0FycmF5ID0gZmFsc2U7CgkJCQkJCWNsb25lID0gc3JjICYmIGpRdWVyeS5pc0FycmF5KHNyYykgPyBzcmMgOiBbXTsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJY2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3Qoc3JjKSA/IHNyYyA6IHt9OwoJCQkJCX0KCgkJCQkJLy8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtCgkJCQkJdGFyZ2V0WyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApOwoKCQkJCS8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXMKCQkJCX0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHsKCQkJCQl0YXJnZXRbIG5hbWUgXSA9IGNvcHk7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJLy8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3QKCXJldHVybiB0YXJnZXQ7Cn07CgpqUXVlcnkuZXh0ZW5kKHsKCW5vQ29uZmxpY3Q6IGZ1bmN0aW9uKCBkZWVwICkgewoJCWlmICggd2luZG93LiQgPT09IGpRdWVyeSApIHsKCQkJd2luZG93LiQgPSBfJDsKCQl9CgoJCWlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7CgkJCXdpbmRvdy5qUXVlcnkgPSBfalF1ZXJ5OwoJCX0KCgkJcmV0dXJuIGpRdWVyeTsKCX0sCgoJLy8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy4KCWlzUmVhZHk6IGZhbHNlLAoKCS8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBpdGVtcyB0byB3YWl0IGZvciBiZWZvcmUKCS8vIHRoZSByZWFkeSBldmVudCBmaXJlcy4gU2VlICM2NzgxCglyZWFkeVdhaXQ6IDEsCgoJLy8gSG9sZCAob3IgcmVsZWFzZSkgdGhlIHJlYWR5IGV2ZW50Cglob2xkUmVhZHk6IGZ1bmN0aW9uKCBob2xkICkgewoJCWlmICggaG9sZCApIHsKCQkJalF1ZXJ5LnJlYWR5V2FpdCsrOwoJCX0gZWxzZSB7CgkJCWpRdWVyeS5yZWFkeSggdHJ1ZSApOwoJCX0KCX0sCgoJLy8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeQoJcmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkgewoJCS8vIEVpdGhlciBhIHJlbGVhc2VkIGhvbGQgb3IgYW4gRE9NcmVhZHkvbG9hZCBldmVudCBhbmQgbm90IHlldCByZWFkeQoJCWlmICggKHdhaXQgPT09IHRydWUgJiYgIS0talF1ZXJ5LnJlYWR5V2FpdCkgfHwgKHdhaXQgIT09IHRydWUgJiYgIWpRdWVyeS5pc1JlYWR5KSApIHsKCQkJLy8gTWFrZSBzdXJlIGJvZHkgZXhpc3RzLCBhdCBsZWFzdCwgaW4gY2FzZSBJRSBnZXRzIGEgbGl0dGxlIG92ZXJ6ZWFsb3VzICh0aWNrZXQgIzU0NDMpLgoJCQlpZiAoICFkb2N1bWVudC5ib2R5ICkgewoJCQkJcmV0dXJuIHNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSwgMSApOwoJCQl9CgoJCQkvLyBSZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHkKCQkJalF1ZXJ5LmlzUmVhZHkgPSB0cnVlOwoKCQkJLy8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmUKCQkJaWYgKCB3YWl0ICE9PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCS8vIElmIHRoZXJlIGFyZSBmdW5jdGlvbnMgYm91bmQsIHRvIGV4ZWN1dGUKCQkJcmVhZHlMaXN0LmZpcmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApOwoKCQkJLy8gVHJpZ2dlciBhbnkgYm91bmQgcmVhZHkgZXZlbnRzCgkJCWlmICggalF1ZXJ5LmZuLnRyaWdnZXIgKSB7CgkJCQlqUXVlcnkoIGRvY3VtZW50ICkudHJpZ2dlciggInJlYWR5IiApLm9mZiggInJlYWR5IiApOwoJCQl9CgkJfQoJfSwKCgliaW5kUmVhZHk6IGZ1bmN0aW9uKCkgewoJCWlmICggcmVhZHlMaXN0ICkgewoJCQlyZXR1cm47CgkJfQoKCQlyZWFkeUxpc3QgPSBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICk7CgoJCS8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkIGFmdGVyIHRoZQoJCS8vIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuCgkJaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSAiY29tcGxldGUiICkgewoJCQkvLyBIYW5kbGUgaXQgYXN5bmNocm9ub3VzbHkgdG8gYWxsb3cgc2NyaXB0cyB0aGUgb3Bwb3J0dW5pdHkgdG8gZGVsYXkgcmVhZHkKCQkJcmV0dXJuIHNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSwgMSApOwoJCX0KCgkJLy8gTW96aWxsYSwgT3BlcmEgYW5kIHdlYmtpdCBuaWdodGxpZXMgY3VycmVudGx5IHN1cHBvcnQgdGhpcyBldmVudAoJCWlmICggZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciApIHsKCQkJLy8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFjawoJCQlkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCAiRE9NQ29udGVudExvYWRlZCIsIERPTUNvbnRlbnRMb2FkZWQsIGZhbHNlICk7CgoJCQkvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29yawoJCQl3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggImxvYWQiLCBqUXVlcnkucmVhZHksIGZhbHNlICk7CgoJCS8vIElmIElFIGV2ZW50IG1vZGVsIGlzIHVzZWQKCQl9IGVsc2UgaWYgKCBkb2N1bWVudC5hdHRhY2hFdmVudCApIHsKCQkJLy8gZW5zdXJlIGZpcmluZyBiZWZvcmUgb25sb2FkLAoJCQkvLyBtYXliZSBsYXRlIGJ1dCBzYWZlIGFsc28gZm9yIGlmcmFtZXMKCQkJZG9jdW1lbnQuYXR0YWNoRXZlbnQoICJvbnJlYWR5c3RhdGVjaGFuZ2UiLCBET01Db250ZW50TG9hZGVkICk7CgoJCQkvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29yawoJCQl3aW5kb3cuYXR0YWNoRXZlbnQoICJvbmxvYWQiLCBqUXVlcnkucmVhZHkgKTsKCgkJCS8vIElmIElFIGFuZCBub3QgYSBmcmFtZQoJCQkvLyBjb250aW51YWxseSBjaGVjayB0byBzZWUgaWYgdGhlIGRvY3VtZW50IGlzIHJlYWR5CgkJCXZhciB0b3BsZXZlbCA9IGZhbHNlOwoKCQkJdHJ5IHsKCQkJCXRvcGxldmVsID0gd2luZG93LmZyYW1lRWxlbWVudCA9PSBudWxsOwoJCQl9IGNhdGNoKGUpIHt9CgoJCQlpZiAoIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCAmJiB0b3BsZXZlbCApIHsKCQkJCWRvU2Nyb2xsQ2hlY2soKTsKCQkJfQoJCX0KCX0sCgoJLy8gU2VlIHRlc3QvdW5pdC9jb3JlLmpzIGZvciBkZXRhaWxzIGNvbmNlcm5pbmcgaXNGdW5jdGlvbi4KCS8vIFNpbmNlIHZlcnNpb24gMS4zLCBET00gbWV0aG9kcyBhbmQgZnVuY3Rpb25zIGxpa2UgYWxlcnQKCS8vIGFyZW4ndCBzdXBwb3J0ZWQuIFRoZXkgcmV0dXJuIGZhbHNlIG9uIElFICgjMjk2OCkuCglpc0Z1bmN0aW9uOiBmdW5jdGlvbiggb2JqICkgewoJCXJldHVybiBqUXVlcnkudHlwZShvYmopID09PSAiZnVuY3Rpb24iOwoJfSwKCglpc0FycmF5OiBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uKCBvYmogKSB7CgkJcmV0dXJuIGpRdWVyeS50eXBlKG9iaikgPT09ICJhcnJheSI7Cgl9LAoKCWlzV2luZG93OiBmdW5jdGlvbiggb2JqICkgewoJCXJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT0gb2JqLndpbmRvdzsKCX0sCgoJaXNOdW1lcmljOiBmdW5jdGlvbiggb2JqICkgewoJCXJldHVybiAhaXNOYU4oIHBhcnNlRmxvYXQob2JqKSApICYmIGlzRmluaXRlKCBvYmogKTsKCX0sCgoJdHlwZTogZnVuY3Rpb24oIG9iaiApIHsKCQlyZXR1cm4gb2JqID09IG51bGwgPwoJCQlTdHJpbmcoIG9iaiApIDoKCQkJY2xhc3MydHlwZVsgdG9TdHJpbmcuY2FsbChvYmopIF0gfHwgIm9iamVjdCI7Cgl9LAoKCWlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7CgkJLy8gTXVzdCBiZSBhbiBPYmplY3QuCgkJLy8gQmVjYXVzZSBvZiBJRSwgd2UgYWxzbyBoYXZlIHRvIGNoZWNrIHRoZSBwcmVzZW5jZSBvZiB0aGUgY29uc3RydWN0b3IgcHJvcGVydHkuCgkJLy8gTWFrZSBzdXJlIHRoYXQgRE9NIG5vZGVzIGFuZCB3aW5kb3cgb2JqZWN0cyBkb24ndCBwYXNzIHRocm91Z2gsIGFzIHdlbGwKCQlpZiAoICFvYmogfHwgalF1ZXJ5LnR5cGUob2JqKSAhPT0gIm9iamVjdCIgfHwgb2JqLm5vZGVUeXBlIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXRyeSB7CgkJCS8vIE5vdCBvd24gY29uc3RydWN0b3IgcHJvcGVydHkgbXVzdCBiZSBPYmplY3QKCQkJaWYgKCBvYmouY29uc3RydWN0b3IgJiYKCQkJCSFoYXNPd24uY2FsbChvYmosICJjb25zdHJ1Y3RvciIpICYmCgkJCQkhaGFzT3duLmNhbGwob2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwgImlzUHJvdG90eXBlT2YiKSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCX0gY2F0Y2ggKCBlICkgewoJCQkvLyBJRTgsOSBXaWxsIHRocm93IGV4Y2VwdGlvbnMgb24gY2VydGFpbiBob3N0IG9iamVjdHMgIzk4OTcKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJLy8gT3duIHByb3BlcnRpZXMgYXJlIGVudW1lcmF0ZWQgZmlyc3RseSwgc28gdG8gc3BlZWQgdXAsCgkJLy8gaWYgbGFzdCBvbmUgaXMgb3duLCB0aGVuIGFsbCBwcm9wZXJ0aWVzIGFyZSBvd24uCgoJCXZhciBrZXk7CgkJZm9yICgga2V5IGluIG9iaiApIHt9CgoJCXJldHVybiBrZXkgPT09IHVuZGVmaW5lZCB8fCBoYXNPd24uY2FsbCggb2JqLCBrZXkgKTsKCX0sCgoJaXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHsKCQlmb3IgKCB2YXIgbmFtZSBpbiBvYmogKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgkJcmV0dXJuIHRydWU7Cgl9LAoKCWVycm9yOiBmdW5jdGlvbiggbXNnICkgewoJCXRocm93IG5ldyBFcnJvciggbXNnICk7Cgl9LAoKCXBhcnNlSlNPTjogZnVuY3Rpb24oIGRhdGEgKSB7CgkJaWYgKCB0eXBlb2YgZGF0YSAhPT0gInN0cmluZyIgfHwgIWRhdGEgKSB7CgkJCXJldHVybiBudWxsOwoJCX0KCgkJLy8gTWFrZSBzdXJlIGxlYWRpbmcvdHJhaWxpbmcgd2hpdGVzcGFjZSBpcyByZW1vdmVkIChJRSBjYW4ndCBoYW5kbGUgaXQpCgkJZGF0YSA9IGpRdWVyeS50cmltKCBkYXRhICk7CgoJCS8vIEF0dGVtcHQgdG8gcGFyc2UgdXNpbmcgdGhlIG5hdGl2ZSBKU09OIHBhcnNlciBmaXJzdAoJCWlmICggd2luZG93LkpTT04gJiYgd2luZG93LkpTT04ucGFyc2UgKSB7CgkJCXJldHVybiB3aW5kb3cuSlNPTi5wYXJzZSggZGF0YSApOwoJCX0KCgkJLy8gTWFrZSBzdXJlIHRoZSBpbmNvbWluZyBkYXRhIGlzIGFjdHVhbCBKU09OCgkJLy8gTG9naWMgYm9ycm93ZWQgZnJvbSBodHRwOi8vanNvbi5vcmcvanNvbjIuanMKCQlpZiAoIHJ2YWxpZGNoYXJzLnRlc3QoIGRhdGEucmVwbGFjZSggcnZhbGlkZXNjYXBlLCAiQCIgKQoJCQkucmVwbGFjZSggcnZhbGlkdG9rZW5zLCAiXSIgKQoJCQkucmVwbGFjZSggcnZhbGlkYnJhY2VzLCAiIikpICkgewoKCQkJcmV0dXJuICggbmV3IEZ1bmN0aW9uKCAicmV0dXJuICIgKyBkYXRhICkgKSgpOwoKCQl9CgkJalF1ZXJ5LmVycm9yKCAiSW52YWxpZCBKU09OOiAiICsgZGF0YSApOwoJfSwKCgkvLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nCglwYXJzZVhNTDogZnVuY3Rpb24oIGRhdGEgKSB7CgkJaWYgKCB0eXBlb2YgZGF0YSAhPT0gInN0cmluZyIgfHwgIWRhdGEgKSB7CgkJCXJldHVybiBudWxsOwoJCX0KCQl2YXIgeG1sLCB0bXA7CgkJdHJ5IHsKCQkJaWYgKCB3aW5kb3cuRE9NUGFyc2VyICkgeyAvLyBTdGFuZGFyZAoJCQkJdG1wID0gbmV3IERPTVBhcnNlcigpOwoJCQkJeG1sID0gdG1wLnBhcnNlRnJvbVN0cmluZyggZGF0YSAsICJ0ZXh0L3htbCIgKTsKCQkJfSBlbHNlIHsgLy8gSUUKCQkJCXhtbCA9IG5ldyBBY3RpdmVYT2JqZWN0KCAiTWljcm9zb2Z0LlhNTERPTSIgKTsKCQkJCXhtbC5hc3luYyA9ICJmYWxzZSI7CgkJCQl4bWwubG9hZFhNTCggZGF0YSApOwoJCQl9CgkJfSBjYXRjaCggZSApIHsKCQkJeG1sID0gdW5kZWZpbmVkOwoJCX0KCQlpZiAoICF4bWwgfHwgIXhtbC5kb2N1bWVudEVsZW1lbnQgfHwgeG1sLmdldEVsZW1lbnRzQnlUYWdOYW1lKCAicGFyc2VyZXJyb3IiICkubGVuZ3RoICkgewoJCQlqUXVlcnkuZXJyb3IoICJJbnZhbGlkIFhNTDogIiArIGRhdGEgKTsKCQl9CgkJcmV0dXJuIHhtbDsKCX0sCgoJbm9vcDogZnVuY3Rpb24oKSB7fSwKCgkvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dAoJLy8gV29ya2Fyb3VuZHMgYmFzZWQgb24gZmluZGluZ3MgYnkgSmltIERyaXNjb2xsCgkvLyBodHRwOi8vd2VibG9ncy5qYXZhLm5ldC9ibG9nL2RyaXNjb2xsL2FyY2hpdmUvMjAwOS8wOS8wOC9ldmFsLWphdmFzY3JpcHQtZ2xvYmFsLWNvbnRleHQKCWdsb2JhbEV2YWw6IGZ1bmN0aW9uKCBkYXRhICkgewoJCWlmICggZGF0YSAmJiBybm90d2hpdGUudGVzdCggZGF0YSApICkgewoJCQkvLyBXZSB1c2UgZXhlY1NjcmlwdCBvbiBJbnRlcm5ldCBFeHBsb3JlcgoJCQkvLyBXZSB1c2UgYW4gYW5vbnltb3VzIGZ1bmN0aW9uIHNvIHRoYXQgY29udGV4dCBpcyB3aW5kb3cKCQkJLy8gcmF0aGVyIHRoYW4galF1ZXJ5IGluIEZpcmVmb3gKCQkJKCB3aW5kb3cuZXhlY1NjcmlwdCB8fCBmdW5jdGlvbiggZGF0YSApIHsKCQkJCXdpbmRvd1sgImV2YWwiIF0uY2FsbCggd2luZG93LCBkYXRhICk7CgkJCX0gKSggZGF0YSApOwoJCX0KCX0sCgoJLy8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlcwoJLy8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5NTcyKQoJY2FtZWxDYXNlOiBmdW5jdGlvbiggc3RyaW5nICkgewoJCXJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCAibXMtIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTsKCX0sCgoJbm9kZU5hbWU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkgewoJCXJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9VcHBlckNhc2UoKSA9PT0gbmFtZS50b1VwcGVyQ2FzZSgpOwoJfSwKCgkvLyBhcmdzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5CgllYWNoOiBmdW5jdGlvbiggb2JqZWN0LCBjYWxsYmFjaywgYXJncyApIHsKCQl2YXIgbmFtZSwgaSA9IDAsCgkJCWxlbmd0aCA9IG9iamVjdC5sZW5ndGgsCgkJCWlzT2JqID0gbGVuZ3RoID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRnVuY3Rpb24oIG9iamVjdCApOwoKCQlpZiAoIGFyZ3MgKSB7CgkJCWlmICggaXNPYmogKSB7CgkJCQlmb3IgKCBuYW1lIGluIG9iamVjdCApIHsKCQkJCQlpZiAoIGNhbGxiYWNrLmFwcGx5KCBvYmplY3RbIG5hbWUgXSwgYXJncyApID09PSBmYWxzZSApIHsKCQkJCQkJYnJlYWs7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJZm9yICggOyBpIDwgbGVuZ3RoOyApIHsKCQkJCQlpZiAoIGNhbGxiYWNrLmFwcGx5KCBvYmplY3RbIGkrKyBdLCBhcmdzICkgPT09IGZhbHNlICkgewoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJLy8gQSBzcGVjaWFsLCBmYXN0LCBjYXNlIGZvciB0aGUgbW9zdCBjb21tb24gdXNlIG9mIGVhY2gKCQl9IGVsc2UgewoJCQlpZiAoIGlzT2JqICkgewoJCQkJZm9yICggbmFtZSBpbiBvYmplY3QgKSB7CgkJCQkJaWYgKCBjYWxsYmFjay5jYWxsKCBvYmplY3RbIG5hbWUgXSwgbmFtZSwgb2JqZWN0WyBuYW1lIF0gKSA9PT0gZmFsc2UgKSB7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWZvciAoIDsgaSA8IGxlbmd0aDsgKSB7CgkJCQkJaWYgKCBjYWxsYmFjay5jYWxsKCBvYmplY3RbIGkgXSwgaSwgb2JqZWN0WyBpKysgXSApID09PSBmYWxzZSApIHsKCQkJCQkJYnJlYWs7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gb2JqZWN0OwoJfSwKCgkvLyBVc2UgbmF0aXZlIFN0cmluZy50cmltIGZ1bmN0aW9uIHdoZXJldmVyIHBvc3NpYmxlCgl0cmltOiB0cmltID8KCQlmdW5jdGlvbiggdGV4dCApIHsKCQkJcmV0dXJuIHRleHQgPT0gbnVsbCA/CgkJCQkiIiA6CgkJCQl0cmltLmNhbGwoIHRleHQgKTsKCQl9IDoKCgkJLy8gT3RoZXJ3aXNlIHVzZSBvdXIgb3duIHRyaW1taW5nIGZ1bmN0aW9uYWxpdHkKCQlmdW5jdGlvbiggdGV4dCApIHsKCQkJcmV0dXJuIHRleHQgPT0gbnVsbCA/CgkJCQkiIiA6CgkJCQl0ZXh0LnRvU3RyaW5nKCkucmVwbGFjZSggdHJpbUxlZnQsICIiICkucmVwbGFjZSggdHJpbVJpZ2h0LCAiIiApOwoJCX0sCgoJLy8gcmVzdWx0cyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seQoJbWFrZUFycmF5OiBmdW5jdGlvbiggYXJyYXksIHJlc3VsdHMgKSB7CgkJdmFyIHJldCA9IHJlc3VsdHMgfHwgW107CgoJCWlmICggYXJyYXkgIT0gbnVsbCApIHsKCQkJLy8gVGhlIHdpbmRvdywgc3RyaW5ncyAoYW5kIGZ1bmN0aW9ucykgYWxzbyBoYXZlICdsZW5ndGgnCgkJCS8vIFR3ZWFrZWQgbG9naWMgc2xpZ2h0bHkgdG8gaGFuZGxlIEJsYWNrYmVycnkgNC43IFJlZ0V4cCBpc3N1ZXMgIzY5MzAKCQkJdmFyIHR5cGUgPSBqUXVlcnkudHlwZSggYXJyYXkgKTsKCgkJCWlmICggYXJyYXkubGVuZ3RoID09IG51bGwgfHwgdHlwZSA9PT0gInN0cmluZyIgfHwgdHlwZSA9PT0gImZ1bmN0aW9uIiB8fCB0eXBlID09PSAicmVnZXhwIiB8fCBqUXVlcnkuaXNXaW5kb3coIGFycmF5ICkgKSB7CgkJCQlwdXNoLmNhbGwoIHJldCwgYXJyYXkgKTsKCQkJfSBlbHNlIHsKCQkJCWpRdWVyeS5tZXJnZSggcmV0LCBhcnJheSApOwoJCQl9CgkJfQoKCQlyZXR1cm4gcmV0OwoJfSwKCglpbkFycmF5OiBmdW5jdGlvbiggZWxlbSwgYXJyYXksIGkgKSB7CgkJdmFyIGxlbjsKCgkJaWYgKCBhcnJheSApIHsKCQkJaWYgKCBpbmRleE9mICkgewoJCQkJcmV0dXJuIGluZGV4T2YuY2FsbCggYXJyYXksIGVsZW0sIGkgKTsKCQkJfQoKCQkJbGVuID0gYXJyYXkubGVuZ3RoOwoJCQlpID0gaSA/IGkgPCAwID8gTWF0aC5tYXgoIDAsIGxlbiArIGkgKSA6IGkgOiAwOwoKCQkJZm9yICggOyBpIDwgbGVuOyBpKysgKSB7CgkJCQkvLyBTa2lwIGFjY2Vzc2luZyBpbiBzcGFyc2UgYXJyYXlzCgkJCQlpZiAoIGkgaW4gYXJyYXkgJiYgYXJyYXlbIGkgXSA9PT0gZWxlbSApIHsKCQkJCQlyZXR1cm4gaTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIC0xOwoJfSwKCgltZXJnZTogZnVuY3Rpb24oIGZpcnN0LCBzZWNvbmQgKSB7CgkJdmFyIGkgPSBmaXJzdC5sZW5ndGgsCgkJCWogPSAwOwoKCQlpZiAoIHR5cGVvZiBzZWNvbmQubGVuZ3RoID09PSAibnVtYmVyIiApIHsKCQkJZm9yICggdmFyIGwgPSBzZWNvbmQubGVuZ3RoOyBqIDwgbDsgaisrICkgewoJCQkJZmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07CgkJCX0KCgkJfSBlbHNlIHsKCQkJd2hpbGUgKCBzZWNvbmRbal0gIT09IHVuZGVmaW5lZCApIHsKCQkJCWZpcnN0WyBpKysgXSA9IHNlY29uZFsgaisrIF07CgkJCX0KCQl9CgoJCWZpcnN0Lmxlbmd0aCA9IGk7CgoJCXJldHVybiBmaXJzdDsKCX0sCgoJZ3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ICkgewoJCXZhciByZXQgPSBbXSwgcmV0VmFsOwoJCWludiA9ICEhaW52OwoKCQkvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgb25seSBzYXZpbmcgdGhlIGl0ZW1zCgkJLy8gdGhhdCBwYXNzIHRoZSB2YWxpZGF0b3IgZnVuY3Rpb24KCQlmb3IgKCB2YXIgaSA9IDAsIGxlbmd0aCA9IGVsZW1zLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQlyZXRWYWwgPSAhIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7CgkJCWlmICggaW52ICE9PSByZXRWYWwgKSB7CgkJCQlyZXQucHVzaCggZWxlbXNbIGkgXSApOwoJCQl9CgkJfQoKCQlyZXR1cm4gcmV0OwoJfSwKCgkvLyBhcmcgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHkKCW1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkgewoJCXZhciB2YWx1ZSwga2V5LCByZXQgPSBbXSwKCQkJaSA9IDAsCgkJCWxlbmd0aCA9IGVsZW1zLmxlbmd0aCwKCQkJLy8ganF1ZXJ5IG9iamVjdHMgYXJlIHRyZWF0ZWQgYXMgYXJyYXlzCgkJCWlzQXJyYXkgPSBlbGVtcyBpbnN0YW5jZW9mIGpRdWVyeSB8fCBsZW5ndGggIT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgbGVuZ3RoID09PSAibnVtYmVyIiAmJiAoICggbGVuZ3RoID4gMCAmJiBlbGVtc1sgMCBdICYmIGVsZW1zWyBsZW5ndGggLTEgXSApIHx8IGxlbmd0aCA9PT0gMCB8fCBqUXVlcnkuaXNBcnJheSggZWxlbXMgKSApIDsKCgkJLy8gR28gdGhyb3VnaCB0aGUgYXJyYXksIHRyYW5zbGF0aW5nIGVhY2ggb2YgdGhlIGl0ZW1zIHRvIHRoZWlyCgkJaWYgKCBpc0FycmF5ICkgewoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCXZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApOwoKCQkJCWlmICggdmFsdWUgIT0gbnVsbCApIHsKCQkJCQlyZXRbIHJldC5sZW5ndGggXSA9IHZhbHVlOwoJCQkJfQoJCQl9CgoJCS8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsCgkJfSBlbHNlIHsKCQkJZm9yICgga2V5IGluIGVsZW1zICkgewoJCQkJdmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGtleSBdLCBrZXksIGFyZyApOwoKCQkJCWlmICggdmFsdWUgIT0gbnVsbCApIHsKCQkJCQlyZXRbIHJldC5sZW5ndGggXSA9IHZhbHVlOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzCgkJcmV0dXJuIHJldC5jb25jYXQuYXBwbHkoIFtdLCByZXQgKTsKCX0sCgoJLy8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzCglndWlkOiAxLAoKCS8vIEJpbmQgYSBmdW5jdGlvbiB0byBhIGNvbnRleHQsIG9wdGlvbmFsbHkgcGFydGlhbGx5IGFwcGx5aW5nIGFueQoJLy8gYXJndW1lbnRzLgoJcHJveHk6IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHsKCQlpZiAoIHR5cGVvZiBjb250ZXh0ID09PSAic3RyaW5nIiApIHsKCQkJdmFyIHRtcCA9IGZuWyBjb250ZXh0IF07CgkJCWNvbnRleHQgPSBmbjsKCQkJZm4gPSB0bXA7CgkJfQoKCQkvLyBRdWljayBjaGVjayB0byBkZXRlcm1pbmUgaWYgdGFyZ2V0IGlzIGNhbGxhYmxlLCBpbiB0aGUgc3BlYwoJCS8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuCgkJaWYgKCAhalF1ZXJ5LmlzRnVuY3Rpb24oIGZuICkgKSB7CgkJCXJldHVybiB1bmRlZmluZWQ7CgkJfQoKCQkvLyBTaW11bGF0ZWQgYmluZAoJCXZhciBhcmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzLCAyICksCgkJCXByb3h5ID0gZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQsIGFyZ3MuY29uY2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7CgkJCX07CgoJCS8vIFNldCB0aGUgZ3VpZCBvZiB1bmlxdWUgaGFuZGxlciB0byB0aGUgc2FtZSBvZiBvcmlnaW5hbCBoYW5kbGVyLCBzbyBpdCBjYW4gYmUgcmVtb3ZlZAoJCXByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBwcm94eS5ndWlkIHx8IGpRdWVyeS5ndWlkKys7CgoJCXJldHVybiBwcm94eTsKCX0sCgoJLy8gTXV0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyB0byBhIGNvbGxlY3Rpb24KCS8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvbgoJYWNjZXNzOiBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVlLCBjaGFpbmFibGUsIGVtcHR5R2V0LCBwYXNzICkgewoJCXZhciBleGVjLAoJCQlidWxrID0ga2V5ID09IG51bGwsCgkJCWkgPSAwLAoJCQlsZW5ndGggPSBlbGVtcy5sZW5ndGg7CgoJCS8vIFNldHMgbWFueSB2YWx1ZXMKCQlpZiAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSAib2JqZWN0IiApIHsKCQkJZm9yICggaSBpbiBrZXkgKSB7CgkJCQlqUXVlcnkuYWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVtpXSwgMSwgZW1wdHlHZXQsIHZhbHVlICk7CgkJCX0KCQkJY2hhaW5hYmxlID0gMTsKCgkJLy8gU2V0cyBvbmUgdmFsdWUKCQl9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkgewoJCQkvLyBPcHRpb25hbGx5LCBmdW5jdGlvbiB2YWx1ZXMgZ2V0IGV4ZWN1dGVkIGlmIGV4ZWMgaXMgdHJ1ZQoJCQlleGVjID0gcGFzcyA9PT0gdW5kZWZpbmVkICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApOwoKCQkJaWYgKCBidWxrICkgewoJCQkJLy8gQnVsayBvcGVyYXRpb25zIG9ubHkgaXRlcmF0ZSB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXMKCQkJCWlmICggZXhlYyApIHsKCQkJCQlleGVjID0gZm47CgkJCQkJZm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHsKCQkJCQkJcmV0dXJuIGV4ZWMuY2FsbCggalF1ZXJ5KCBlbGVtICksIHZhbHVlICk7CgkJCQkJfTsKCgkJCQkvLyBPdGhlcndpc2UgdGhleSBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldAoJCQkJfSBlbHNlIHsKCQkJCQlmbi5jYWxsKCBlbGVtcywgdmFsdWUgKTsKCQkJCQlmbiA9IG51bGw7CgkJCQl9CgkJCX0KCgkJCWlmICggZm4gKSB7CgkJCQlmb3IgKDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQkJCWZuKCBlbGVtc1tpXSwga2V5LCBleGVjID8gdmFsdWUuY2FsbCggZWxlbXNbaV0sIGksIGZuKCBlbGVtc1tpXSwga2V5ICkgKSA6IHZhbHVlLCBwYXNzICk7CgkJCQl9CgkJCX0KCgkJCWNoYWluYWJsZSA9IDE7CgkJfQoKCQlyZXR1cm4gY2hhaW5hYmxlID8KCQkJZWxlbXMgOgoKCQkJLy8gR2V0cwoJCQlidWxrID8KCQkJCWZuLmNhbGwoIGVsZW1zICkgOgoJCQkJbGVuZ3RoID8gZm4oIGVsZW1zWzBdLCBrZXkgKSA6IGVtcHR5R2V0OwoJfSwKCglub3c6IGZ1bmN0aW9uKCkgewoJCXJldHVybiAoIG5ldyBEYXRlKCkgKS5nZXRUaW1lKCk7Cgl9LAoKCS8vIFVzZSBvZiBqUXVlcnkuYnJvd3NlciBpcyBmcm93bmVkIHVwb24uCgkvLyBNb3JlIGRldGFpbHM6IGh0dHA6Ly9kb2NzLmpxdWVyeS5jb20vVXRpbGl0aWVzL2pRdWVyeS5icm93c2VyCgl1YU1hdGNoOiBmdW5jdGlvbiggdWEgKSB7CgkJdWEgPSB1YS50b0xvd2VyQ2FzZSgpOwoKCQl2YXIgbWF0Y2ggPSByd2Via2l0LmV4ZWMoIHVhICkgfHwKCQkJcm9wZXJhLmV4ZWMoIHVhICkgfHwKCQkJcm1zaWUuZXhlYyggdWEgKSB8fAoJCQl1YS5pbmRleE9mKCJjb21wYXRpYmxlIikgPCAwICYmIHJtb3ppbGxhLmV4ZWMoIHVhICkgfHwKCQkJW107CgoJCXJldHVybiB7IGJyb3dzZXI6IG1hdGNoWzFdIHx8ICIiLCB2ZXJzaW9uOiBtYXRjaFsyXSB8fCAiMCIgfTsKCX0sCgoJc3ViOiBmdW5jdGlvbigpIHsKCQlmdW5jdGlvbiBqUXVlcnlTdWIoIHNlbGVjdG9yLCBjb250ZXh0ICkgewoJCQlyZXR1cm4gbmV3IGpRdWVyeVN1Yi5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApOwoJCX0KCQlqUXVlcnkuZXh0ZW5kKCB0cnVlLCBqUXVlcnlTdWIsIHRoaXMgKTsKCQlqUXVlcnlTdWIuc3VwZXJjbGFzcyA9IHRoaXM7CgkJalF1ZXJ5U3ViLmZuID0galF1ZXJ5U3ViLnByb3RvdHlwZSA9IHRoaXMoKTsKCQlqUXVlcnlTdWIuZm4uY29uc3RydWN0b3IgPSBqUXVlcnlTdWI7CgkJalF1ZXJ5U3ViLnN1YiA9IHRoaXMuc3ViOwoJCWpRdWVyeVN1Yi5mbi5pbml0ID0gZnVuY3Rpb24gaW5pdCggc2VsZWN0b3IsIGNvbnRleHQgKSB7CgkJCWlmICggY29udGV4dCAmJiBjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5ICYmICEoY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeVN1YikgKSB7CgkJCQljb250ZXh0ID0galF1ZXJ5U3ViKCBjb250ZXh0ICk7CgkJCX0KCgkJCXJldHVybiBqUXVlcnkuZm4uaW5pdC5jYWxsKCB0aGlzLCBzZWxlY3RvciwgY29udGV4dCwgcm9vdGpRdWVyeVN1YiApOwoJCX07CgkJalF1ZXJ5U3ViLmZuLmluaXQucHJvdG90eXBlID0galF1ZXJ5U3ViLmZuOwoJCXZhciByb290alF1ZXJ5U3ViID0galF1ZXJ5U3ViKGRvY3VtZW50KTsKCQlyZXR1cm4galF1ZXJ5U3ViOwoJfSwKCglicm93c2VyOiB7fQp9KTsKCi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcApqUXVlcnkuZWFjaCgiQm9vbGVhbiBOdW1iZXIgU3RyaW5nIEZ1bmN0aW9uIEFycmF5IERhdGUgUmVnRXhwIE9iamVjdCIuc3BsaXQoIiAiKSwgZnVuY3Rpb24oaSwgbmFtZSkgewoJY2xhc3MydHlwZVsgIltvYmplY3QgIiArIG5hbWUgKyAiXSIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKfSk7Cgpicm93c2VyTWF0Y2ggPSBqUXVlcnkudWFNYXRjaCggdXNlckFnZW50ICk7CmlmICggYnJvd3Nlck1hdGNoLmJyb3dzZXIgKSB7CglqUXVlcnkuYnJvd3NlclsgYnJvd3Nlck1hdGNoLmJyb3dzZXIgXSA9IHRydWU7CglqUXVlcnkuYnJvd3Nlci52ZXJzaW9uID0gYnJvd3Nlck1hdGNoLnZlcnNpb247Cn0KCi8vIERlcHJlY2F0ZWQsIHVzZSBqUXVlcnkuYnJvd3Nlci53ZWJraXQgaW5zdGVhZAppZiAoIGpRdWVyeS5icm93c2VyLndlYmtpdCApIHsKCWpRdWVyeS5icm93c2VyLnNhZmFyaSA9IHRydWU7Cn0KCi8vIElFIGRvZXNuJ3QgbWF0Y2ggbm9uLWJyZWFraW5nIHNwYWNlcyB3aXRoIFxzCmlmICggcm5vdHdoaXRlLnRlc3QoICJceEEwIiApICkgewoJdHJpbUxlZnQgPSAvXltcc1x4QTBdKy87Cgl0cmltUmlnaHQgPSAvW1xzXHhBMF0rJC87Cn0KCi8vIEFsbCBqUXVlcnkgb2JqZWN0cyBzaG91bGQgcG9pbnQgYmFjayB0byB0aGVzZQpyb290alF1ZXJ5ID0galF1ZXJ5KGRvY3VtZW50KTsKCi8vIENsZWFudXAgZnVuY3Rpb25zIGZvciB0aGUgZG9jdW1lbnQgcmVhZHkgbWV0aG9kCmlmICggZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciApIHsKCURPTUNvbnRlbnRMb2FkZWQgPSBmdW5jdGlvbigpIHsKCQlkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCAiRE9NQ29udGVudExvYWRlZCIsIERPTUNvbnRlbnRMb2FkZWQsIGZhbHNlICk7CgkJalF1ZXJ5LnJlYWR5KCk7Cgl9OwoKfSBlbHNlIGlmICggZG9jdW1lbnQuYXR0YWNoRXZlbnQgKSB7CglET01Db250ZW50TG9hZGVkID0gZnVuY3Rpb24oKSB7CgkJLy8gTWFrZSBzdXJlIGJvZHkgZXhpc3RzLCBhdCBsZWFzdCwgaW4gY2FzZSBJRSBnZXRzIGEgbGl0dGxlIG92ZXJ6ZWFsb3VzICh0aWNrZXQgIzU0NDMpLgoJCWlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gImNvbXBsZXRlIiApIHsKCQkJZG9jdW1lbnQuZGV0YWNoRXZlbnQoICJvbnJlYWR5c3RhdGVjaGFuZ2UiLCBET01Db250ZW50TG9hZGVkICk7CgkJCWpRdWVyeS5yZWFkeSgpOwoJCX0KCX07Cn0KCi8vIFRoZSBET00gcmVhZHkgY2hlY2sgZm9yIEludGVybmV0IEV4cGxvcmVyCmZ1bmN0aW9uIGRvU2Nyb2xsQ2hlY2soKSB7CglpZiAoIGpRdWVyeS5pc1JlYWR5ICkgewoJCXJldHVybjsKCX0KCgl0cnkgewoJCS8vIElmIElFIGlzIHVzZWQsIHVzZSB0aGUgdHJpY2sgYnkgRGllZ28gUGVyaW5pCgkJLy8gaHR0cDovL2phdmFzY3JpcHQubndib3guY29tL0lFQ29udGVudExvYWRlZC8KCQlkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwoImxlZnQiKTsKCX0gY2F0Y2goZSkgewoJCXNldFRpbWVvdXQoIGRvU2Nyb2xsQ2hlY2ssIDEgKTsKCQlyZXR1cm47Cgl9CgoJLy8gYW5kIGV4ZWN1dGUgYW55IHdhaXRpbmcgZnVuY3Rpb25zCglqUXVlcnkucmVhZHkoKTsKfQoKcmV0dXJuIGpRdWVyeTsKCn0pKCk7CgoKLy8gU3RyaW5nIHRvIE9iamVjdCBmbGFncyBmb3JtYXQgY2FjaGUKdmFyIGZsYWdzQ2FjaGUgPSB7fTsKCi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBmbGFncyBpbnRvIE9iamVjdC1mb3JtYXR0ZWQgb25lcyBhbmQgc3RvcmUgaW4gY2FjaGUKZnVuY3Rpb24gY3JlYXRlRmxhZ3MoIGZsYWdzICkgewoJdmFyIG9iamVjdCA9IGZsYWdzQ2FjaGVbIGZsYWdzIF0gPSB7fSwKCQlpLCBsZW5ndGg7CglmbGFncyA9IGZsYWdzLnNwbGl0KCAvXHMrLyApOwoJZm9yICggaSA9IDAsIGxlbmd0aCA9IGZsYWdzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCW9iamVjdFsgZmxhZ3NbaV0gXSA9IHRydWU7Cgl9CglyZXR1cm4gb2JqZWN0Owp9CgovKgogKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczoKICoKICoJZmxhZ3M6CWFuIG9wdGlvbmFsIGxpc3Qgb2Ygc3BhY2Utc2VwYXJhdGVkIGZsYWdzIHRoYXQgd2lsbCBjaGFuZ2UgaG93CiAqCQkJdGhlIGNhbGxiYWNrIGxpc3QgYmVoYXZlcwogKgogKiBCeSBkZWZhdWx0IGEgY2FsbGJhY2sgbGlzdCB3aWxsIGFjdCBsaWtlIGFuIGV2ZW50IGNhbGxiYWNrIGxpc3QgYW5kIGNhbiBiZQogKiAiZmlyZWQiIG11bHRpcGxlIHRpbWVzLgogKgogKiBQb3NzaWJsZSBmbGFnczoKICoKICoJb25jZToJCQl3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCW1lbW9yeToJCQl3aWxsIGtlZXAgdHJhY2sgb2YgcHJldmlvdXMgdmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNrIGFkZGVkCiAqCQkJCQlhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCAibWVtb3JpemVkIgogKgkJCQkJdmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpCiAqCiAqCXVuaXF1ZToJCQl3aWxsIGVuc3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0aGUgbGlzdCkKICoKICoJc3RvcE9uRmFsc2U6CWludGVycnVwdCBjYWxsaW5ncyB3aGVuIGEgY2FsbGJhY2sgcmV0dXJucyBmYWxzZQogKgogKi8KalF1ZXJ5LkNhbGxiYWNrcyA9IGZ1bmN0aW9uKCBmbGFncyApIHsKCgkvLyBDb252ZXJ0IGZsYWdzIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkCgkvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpCglmbGFncyA9IGZsYWdzID8gKCBmbGFnc0NhY2hlWyBmbGFncyBdIHx8IGNyZWF0ZUZsYWdzKCBmbGFncyApICkgOiB7fTsKCgl2YXIgLy8gQWN0dWFsIGNhbGxiYWNrIGxpc3QKCQlsaXN0ID0gW10sCgkJLy8gU3RhY2sgb2YgZmlyZSBjYWxscyBmb3IgcmVwZWF0YWJsZSBsaXN0cwoJCXN0YWNrID0gW10sCgkJLy8gTGFzdCBmaXJlIHZhbHVlIChmb3Igbm9uLWZvcmdldHRhYmxlIGxpc3RzKQoJCW1lbW9yeSwKCQkvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZAoJCWZpcmVkLAoJCS8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IGlzIGN1cnJlbnRseSBmaXJpbmcKCQlmaXJpbmcsCgkJLy8gRmlyc3QgY2FsbGJhY2sgdG8gZmlyZSAodXNlZCBpbnRlcm5hbGx5IGJ5IGFkZCBhbmQgZmlyZVdpdGgpCgkJZmlyaW5nU3RhcnQsCgkJLy8gRW5kIG9mIHRoZSBsb29wIHdoZW4gZmlyaW5nCgkJZmlyaW5nTGVuZ3RoLAoJCS8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcgY2FsbGJhY2sgKG1vZGlmaWVkIGJ5IHJlbW92ZSBpZiBuZWVkZWQpCgkJZmlyaW5nSW5kZXgsCgkJLy8gQWRkIG9uZSBvciBzZXZlcmFsIGNhbGxiYWNrcyB0byB0aGUgbGlzdAoJCWFkZCA9IGZ1bmN0aW9uKCBhcmdzICkgewoJCQl2YXIgaSwKCQkJCWxlbmd0aCwKCQkJCWVsZW0sCgkJCQl0eXBlLAoJCQkJYWN0dWFsOwoJCQlmb3IgKCBpID0gMCwgbGVuZ3RoID0gYXJncy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCWVsZW0gPSBhcmdzWyBpIF07CgkJCQl0eXBlID0galF1ZXJ5LnR5cGUoIGVsZW0gKTsKCQkJCWlmICggdHlwZSA9PT0gImFycmF5IiApIHsKCQkJCQkvLyBJbnNwZWN0IHJlY3Vyc2l2ZWx5CgkJCQkJYWRkKCBlbGVtICk7CgkJCQl9IGVsc2UgaWYgKCB0eXBlID09PSAiZnVuY3Rpb24iICkgewoJCQkJCS8vIEFkZCBpZiBub3QgaW4gdW5pcXVlIG1vZGUgYW5kIGNhbGxiYWNrIGlzIG5vdCBpbgoJCQkJCWlmICggIWZsYWdzLnVuaXF1ZSB8fCAhc2VsZi5oYXMoIGVsZW0gKSApIHsKCQkJCQkJbGlzdC5wdXNoKCBlbGVtICk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfSwKCQkvLyBGaXJlIGNhbGxiYWNrcwoJCWZpcmUgPSBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHsKCQkJYXJncyA9IGFyZ3MgfHwgW107CgkJCW1lbW9yeSA9ICFmbGFncy5tZW1vcnkgfHwgWyBjb250ZXh0LCBhcmdzIF07CgkJCWZpcmVkID0gdHJ1ZTsKCQkJZmlyaW5nID0gdHJ1ZTsKCQkJZmlyaW5nSW5kZXggPSBmaXJpbmdTdGFydCB8fCAwOwoJCQlmaXJpbmdTdGFydCA9IDA7CgkJCWZpcmluZ0xlbmd0aCA9IGxpc3QubGVuZ3RoOwoJCQlmb3IgKCA7IGxpc3QgJiYgZmlyaW5nSW5kZXggPCBmaXJpbmdMZW5ndGg7IGZpcmluZ0luZGV4KysgKSB7CgkJCQlpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIGNvbnRleHQsIGFyZ3MgKSA9PT0gZmFsc2UgJiYgZmxhZ3Muc3RvcE9uRmFsc2UgKSB7CgkJCQkJbWVtb3J5ID0gdHJ1ZTsgLy8gTWFyayBhcyBoYWx0ZWQKCQkJCQlicmVhazsKCQkJCX0KCQkJfQoJCQlmaXJpbmcgPSBmYWxzZTsKCQkJaWYgKCBsaXN0ICkgewoJCQkJaWYgKCAhZmxhZ3Mub25jZSApIHsKCQkJCQlpZiAoIHN0YWNrICYmIHN0YWNrLmxlbmd0aCApIHsKCQkJCQkJbWVtb3J5ID0gc3RhY2suc2hpZnQoKTsKCQkJCQkJc2VsZi5maXJlV2l0aCggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICk7CgkJCQkJfQoJCQkJfSBlbHNlIGlmICggbWVtb3J5ID09PSB0cnVlICkgewoJCQkJCXNlbGYuZGlzYWJsZSgpOwoJCQkJfSBlbHNlIHsKCQkJCQlsaXN0ID0gW107CgkJCQl9CgkJCX0KCQl9LAoJCS8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0CgkJc2VsZiA9IHsKCQkJLy8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdAoJCQlhZGQ6IGZ1bmN0aW9uKCkgewoJCQkJaWYgKCBsaXN0ICkgewoJCQkJCXZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aDsKCQkJCQlhZGQoIGFyZ3VtZW50cyApOwoJCQkJCS8vIERvIHdlIG5lZWQgdG8gYWRkIHRoZSBjYWxsYmFja3MgdG8gdGhlCgkJCQkJLy8gY3VycmVudCBmaXJpbmcgYmF0Y2g/CgkJCQkJaWYgKCBmaXJpbmcgKSB7CgkJCQkJCWZpcmluZ0xlbmd0aCA9IGxpc3QubGVuZ3RoOwoJCQkJCS8vIFdpdGggbWVtb3J5LCBpZiB3ZSdyZSBub3QgZmlyaW5nIHRoZW4KCQkJCQkvLyB3ZSBzaG91bGQgY2FsbCByaWdodCBhd2F5LCB1bmxlc3MgcHJldmlvdXMKCQkJCQkvLyBmaXJpbmcgd2FzIGhhbHRlZCAoc3RvcE9uRmFsc2UpCgkJCQkJfSBlbHNlIGlmICggbWVtb3J5ICYmIG1lbW9yeSAhPT0gdHJ1ZSApIHsKCQkJCQkJZmlyaW5nU3RhcnQgPSBsZW5ndGg7CgkJCQkJCWZpcmUoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoJCQkvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0CgkJCXJlbW92ZTogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIGxpc3QgKSB7CgkJCQkJdmFyIGFyZ3MgPSBhcmd1bWVudHMsCgkJCQkJCWFyZ0luZGV4ID0gMCwKCQkJCQkJYXJnTGVuZ3RoID0gYXJncy5sZW5ndGg7CgkJCQkJZm9yICggOyBhcmdJbmRleCA8IGFyZ0xlbmd0aCA7IGFyZ0luZGV4KysgKSB7CgkJCQkJCWZvciAoIHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKysgKSB7CgkJCQkJCQlpZiAoIGFyZ3NbIGFyZ0luZGV4IF0gPT09IGxpc3RbIGkgXSApIHsKCQkJCQkJCQkvLyBIYW5kbGUgZmlyaW5nSW5kZXggYW5kIGZpcmluZ0xlbmd0aAoJCQkJCQkJCWlmICggZmlyaW5nICkgewoJCQkJCQkJCQlpZiAoIGkgPD0gZmlyaW5nTGVuZ3RoICkgewoJCQkJCQkJCQkJZmlyaW5nTGVuZ3RoLS07CgkJCQkJCQkJCQlpZiAoIGkgPD0gZmlyaW5nSW5kZXggKSB7CgkJCQkJCQkJCQkJZmlyaW5nSW5kZXgtLTsKCQkJCQkJCQkJCX0KCQkJCQkJCQkJfQoJCQkJCQkJCX0KCQkJCQkJCQkvLyBSZW1vdmUgdGhlIGVsZW1lbnQKCQkJCQkJCQlsaXN0LnNwbGljZSggaS0tLCAxICk7CgkJCQkJCQkJLy8gSWYgd2UgaGF2ZSBzb21lIHVuaWNpdHkgcHJvcGVydHkgdGhlbgoJCQkJCQkJCS8vIHdlIG9ubHkgbmVlZCB0byBkbyB0aGlzIG9uY2UKCQkJCQkJCQlpZiAoIGZsYWdzLnVuaXF1ZSApIHsKCQkJCQkJCQkJYnJlYWs7CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQkJcmV0dXJuIHRoaXM7CgkJCX0sCgkJCS8vIENvbnRyb2wgaWYgYSBnaXZlbiBjYWxsYmFjayBpcyBpbiB0aGUgbGlzdAoJCQloYXM6IGZ1bmN0aW9uKCBmbiApIHsKCQkJCWlmICggbGlzdCApIHsKCQkJCQl2YXIgaSA9IDAsCgkJCQkJCWxlbmd0aCA9IGxpc3QubGVuZ3RoOwoJCQkJCWZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkgewoJCQkJCQlpZiAoIGZuID09PSBsaXN0WyBpIF0gKSB7CgkJCQkJCQlyZXR1cm4gdHJ1ZTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiBmYWxzZTsKCQkJfSwKCQkJLy8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdAoJCQllbXB0eTogZnVuY3Rpb24oKSB7CgkJCQlsaXN0ID0gW107CgkJCQlyZXR1cm4gdGhpczsKCQkJfSwKCQkJLy8gSGF2ZSB0aGUgbGlzdCBkbyBub3RoaW5nIGFueW1vcmUKCQkJZGlzYWJsZTogZnVuY3Rpb24oKSB7CgkJCQlsaXN0ID0gc3RhY2sgPSBtZW1vcnkgPSB1bmRlZmluZWQ7CgkJCQlyZXR1cm4gdGhpczsKCQkJfSwKCQkJLy8gSXMgaXQgZGlzYWJsZWQ/CgkJCWRpc2FibGVkOiBmdW5jdGlvbigpIHsKCQkJCXJldHVybiAhbGlzdDsKCQkJfSwKCQkJLy8gTG9jayB0aGUgbGlzdCBpbiBpdHMgY3VycmVudCBzdGF0ZQoJCQlsb2NrOiBmdW5jdGlvbigpIHsKCQkJCXN0YWNrID0gdW5kZWZpbmVkOwoJCQkJaWYgKCAhbWVtb3J5IHx8IG1lbW9yeSA9PT0gdHJ1ZSApIHsKCQkJCQlzZWxmLmRpc2FibGUoKTsKCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoJCQkvLyBJcyBpdCBsb2NrZWQ/CgkJCWxvY2tlZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gIXN0YWNrOwoJCQl9LAoJCQkvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzCgkJCWZpcmVXaXRoOiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHsKCQkJCWlmICggc3RhY2sgKSB7CgkJCQkJaWYgKCBmaXJpbmcgKSB7CgkJCQkJCWlmICggIWZsYWdzLm9uY2UgKSB7CgkJCQkJCQlzdGFjay5wdXNoKCBbIGNvbnRleHQsIGFyZ3MgXSApOwoJCQkJCQl9CgkJCQkJfSBlbHNlIGlmICggISggZmxhZ3Mub25jZSAmJiBtZW1vcnkgKSApIHsKCQkJCQkJZmlyZSggY29udGV4dCwgYXJncyApOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybiB0aGlzOwoJCQl9LAoJCQkvLyBDYWxsIGFsbCB0aGUgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGFyZ3VtZW50cwoJCQlmaXJlOiBmdW5jdGlvbigpIHsKCQkJCXNlbGYuZmlyZVdpdGgoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQkJcmV0dXJuIHRoaXM7CgkJCX0sCgkJCS8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZQoJCQlmaXJlZDogZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gISFmaXJlZDsKCQkJfQoJCX07CgoJcmV0dXJuIHNlbGY7Cn07CgoKCgp2YXIgLy8gU3RhdGljIHJlZmVyZW5jZSB0byBzbGljZQoJc2xpY2VEZWZlcnJlZCA9IFtdLnNsaWNlOwoKalF1ZXJ5LmV4dGVuZCh7CgoJRGVmZXJyZWQ6IGZ1bmN0aW9uKCBmdW5jICkgewoJCXZhciBkb25lTGlzdCA9IGpRdWVyeS5DYWxsYmFja3MoICJvbmNlIG1lbW9yeSIgKSwKCQkJZmFpbExpc3QgPSBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICksCgkJCXByb2dyZXNzTGlzdCA9IGpRdWVyeS5DYWxsYmFja3MoICJtZW1vcnkiICksCgkJCXN0YXRlID0gInBlbmRpbmciLAoJCQlsaXN0cyA9IHsKCQkJCXJlc29sdmU6IGRvbmVMaXN0LAoJCQkJcmVqZWN0OiBmYWlsTGlzdCwKCQkJCW5vdGlmeTogcHJvZ3Jlc3NMaXN0CgkJCX0sCgkJCXByb21pc2UgPSB7CgkJCQlkb25lOiBkb25lTGlzdC5hZGQsCgkJCQlmYWlsOiBmYWlsTGlzdC5hZGQsCgkJCQlwcm9ncmVzczogcHJvZ3Jlc3NMaXN0LmFkZCwKCgkJCQlzdGF0ZTogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIHN0YXRlOwoJCQkJfSwKCgkJCQkvLyBEZXByZWNhdGVkCgkJCQlpc1Jlc29sdmVkOiBkb25lTGlzdC5maXJlZCwKCQkJCWlzUmVqZWN0ZWQ6IGZhaWxMaXN0LmZpcmVkLAoKCQkJCXRoZW46IGZ1bmN0aW9uKCBkb25lQ2FsbGJhY2tzLCBmYWlsQ2FsbGJhY2tzLCBwcm9ncmVzc0NhbGxiYWNrcyApIHsKCQkJCQlkZWZlcnJlZC5kb25lKCBkb25lQ2FsbGJhY2tzICkuZmFpbCggZmFpbENhbGxiYWNrcyApLnByb2dyZXNzKCBwcm9ncmVzc0NhbGxiYWNrcyApOwoJCQkJCXJldHVybiB0aGlzOwoJCQkJfSwKCQkJCWFsd2F5czogZnVuY3Rpb24oKSB7CgkJCQkJZGVmZXJyZWQuZG9uZS5hcHBseSggZGVmZXJyZWQsIGFyZ3VtZW50cyApLmZhaWwuYXBwbHkoIGRlZmVycmVkLCBhcmd1bWVudHMgKTsKCQkJCQlyZXR1cm4gdGhpczsKCQkJCX0sCgkJCQlwaXBlOiBmdW5jdGlvbiggZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKSB7CgkJCQkJcmV0dXJuIGpRdWVyeS5EZWZlcnJlZChmdW5jdGlvbiggbmV3RGVmZXIgKSB7CgkJCQkJCWpRdWVyeS5lYWNoKCB7CgkJCQkJCQlkb25lOiBbIGZuRG9uZSwgInJlc29sdmUiIF0sCgkJCQkJCQlmYWlsOiBbIGZuRmFpbCwgInJlamVjdCIgXSwKCQkJCQkJCXByb2dyZXNzOiBbIGZuUHJvZ3Jlc3MsICJub3RpZnkiIF0KCQkJCQkJfSwgZnVuY3Rpb24oIGhhbmRsZXIsIGRhdGEgKSB7CgkJCQkJCQl2YXIgZm4gPSBkYXRhWyAwIF0sCgkJCQkJCQkJYWN0aW9uID0gZGF0YVsgMSBdLAoJCQkJCQkJCXJldHVybmVkOwoJCQkJCQkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggZm4gKSApIHsKCQkJCQkJCQlkZWZlcnJlZFsgaGFuZGxlciBdKGZ1bmN0aW9uKCkgewoJCQkJCQkJCQlyZXR1cm5lZCA9IGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCQkJCQkJaWYgKCByZXR1cm5lZCAmJiBqUXVlcnkuaXNGdW5jdGlvbiggcmV0dXJuZWQucHJvbWlzZSApICkgewoJCQkJCQkJCQkJcmV0dXJuZWQucHJvbWlzZSgpLnRoZW4oIG5ld0RlZmVyLnJlc29sdmUsIG5ld0RlZmVyLnJlamVjdCwgbmV3RGVmZXIubm90aWZ5ICk7CgkJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJCQluZXdEZWZlclsgYWN0aW9uICsgIldpdGgiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gbmV3RGVmZXIgOiB0aGlzLCBbIHJldHVybmVkIF0gKTsKCQkJCQkJCQkJfQoJCQkJCQkJCX0pOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQlkZWZlcnJlZFsgaGFuZGxlciBdKCBuZXdEZWZlclsgYWN0aW9uIF0gKTsKCQkJCQkJCX0KCQkJCQkJfSk7CgkJCQkJfSkucHJvbWlzZSgpOwoJCQkJfSwKCQkJCS8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWQKCQkJCS8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3QKCQkJCXByb21pc2U6IGZ1bmN0aW9uKCBvYmogKSB7CgkJCQkJaWYgKCBvYmogPT0gbnVsbCApIHsKCQkJCQkJb2JqID0gcHJvbWlzZTsKCQkJCQl9IGVsc2UgewoJCQkJCQlmb3IgKCB2YXIga2V5IGluIHByb21pc2UgKSB7CgkJCQkJCQlvYmpbIGtleSBdID0gcHJvbWlzZVsga2V5IF07CgkJCQkJCX0KCQkJCQl9CgkJCQkJcmV0dXJuIG9iajsKCQkJCX0KCQkJfSwKCQkJZGVmZXJyZWQgPSBwcm9taXNlLnByb21pc2Uoe30pLAoJCQlrZXk7CgoJCWZvciAoIGtleSBpbiBsaXN0cyApIHsKCQkJZGVmZXJyZWRbIGtleSBdID0gbGlzdHNbIGtleSBdLmZpcmU7CgkJCWRlZmVycmVkWyBrZXkgKyAiV2l0aCIgXSA9IGxpc3RzWyBrZXkgXS5maXJlV2l0aDsKCQl9CgoJCS8vIEhhbmRsZSBzdGF0ZQoJCWRlZmVycmVkLmRvbmUoIGZ1bmN0aW9uKCkgewoJCQlzdGF0ZSA9ICJyZXNvbHZlZCI7CgkJfSwgZmFpbExpc3QuZGlzYWJsZSwgcHJvZ3Jlc3NMaXN0LmxvY2sgKS5mYWlsKCBmdW5jdGlvbigpIHsKCQkJc3RhdGUgPSAicmVqZWN0ZWQiOwoJCX0sIGRvbmVMaXN0LmRpc2FibGUsIHByb2dyZXNzTGlzdC5sb2NrICk7CgoJCS8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnkKCQlpZiAoIGZ1bmMgKSB7CgkJCWZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7CgkJfQoKCQkvLyBBbGwgZG9uZSEKCQlyZXR1cm4gZGVmZXJyZWQ7Cgl9LAoKCS8vIERlZmVycmVkIGhlbHBlcgoJd2hlbjogZnVuY3Rpb24oIGZpcnN0UGFyYW0gKSB7CgkJdmFyIGFyZ3MgPSBzbGljZURlZmVycmVkLmNhbGwoIGFyZ3VtZW50cywgMCApLAoJCQlpID0gMCwKCQkJbGVuZ3RoID0gYXJncy5sZW5ndGgsCgkJCXBWYWx1ZXMgPSBuZXcgQXJyYXkoIGxlbmd0aCApLAoJCQljb3VudCA9IGxlbmd0aCwKCQkJcENvdW50ID0gbGVuZ3RoLAoJCQlkZWZlcnJlZCA9IGxlbmd0aCA8PSAxICYmIGZpcnN0UGFyYW0gJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIGZpcnN0UGFyYW0ucHJvbWlzZSApID8KCQkJCWZpcnN0UGFyYW0gOgoJCQkJalF1ZXJ5LkRlZmVycmVkKCksCgkJCXByb21pc2UgPSBkZWZlcnJlZC5wcm9taXNlKCk7CgkJZnVuY3Rpb24gcmVzb2x2ZUZ1bmMoIGkgKSB7CgkJCXJldHVybiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCQlhcmdzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlRGVmZXJyZWQuY2FsbCggYXJndW1lbnRzLCAwICkgOiB2YWx1ZTsKCQkJCWlmICggISggLS1jb3VudCApICkgewoJCQkJCWRlZmVycmVkLnJlc29sdmVXaXRoKCBkZWZlcnJlZCwgYXJncyApOwoJCQkJfQoJCQl9OwoJCX0KCQlmdW5jdGlvbiBwcm9ncmVzc0Z1bmMoIGkgKSB7CgkJCXJldHVybiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCQlwVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlRGVmZXJyZWQuY2FsbCggYXJndW1lbnRzLCAwICkgOiB2YWx1ZTsKCQkJCWRlZmVycmVkLm5vdGlmeVdpdGgoIHByb21pc2UsIHBWYWx1ZXMgKTsKCQkJfTsKCQl9CgkJaWYgKCBsZW5ndGggPiAxICkgewoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCWlmICggYXJnc1sgaSBdICYmIGFyZ3NbIGkgXS5wcm9taXNlICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBhcmdzWyBpIF0ucHJvbWlzZSApICkgewoJCQkJCWFyZ3NbIGkgXS5wcm9taXNlKCkudGhlbiggcmVzb2x2ZUZ1bmMoaSksIGRlZmVycmVkLnJlamVjdCwgcHJvZ3Jlc3NGdW5jKGkpICk7CgkJCQl9IGVsc2UgewoJCQkJCS0tY291bnQ7CgkJCQl9CgkJCX0KCQkJaWYgKCAhY291bnQgKSB7CgkJCQlkZWZlcnJlZC5yZXNvbHZlV2l0aCggZGVmZXJyZWQsIGFyZ3MgKTsKCQkJfQoJCX0gZWxzZSBpZiAoIGRlZmVycmVkICE9PSBmaXJzdFBhcmFtICkgewoJCQlkZWZlcnJlZC5yZXNvbHZlV2l0aCggZGVmZXJyZWQsIGxlbmd0aCA/IFsgZmlyc3RQYXJhbSBdIDogW10gKTsKCQl9CgkJcmV0dXJuIHByb21pc2U7Cgl9Cn0pOwoKCgoKalF1ZXJ5LnN1cHBvcnQgPSAoZnVuY3Rpb24oKSB7CgoJdmFyIHN1cHBvcnQsCgkJYWxsLAoJCWEsCgkJc2VsZWN0LAoJCW9wdCwKCQlpbnB1dCwKCQlmcmFnbWVudCwKCQl0ZHMsCgkJZXZlbnRzLAoJCWV2ZW50TmFtZSwKCQlpLAoJCWlzU3VwcG9ydGVkLAoJCWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICksCgkJZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoKCS8vIFByZWxpbWluYXJ5IHRlc3RzCglkaXYuc2V0QXR0cmlidXRlKCJjbGFzc05hbWUiLCAidCIpOwoJZGl2LmlubmVySFRNTCA9ICIgICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnIHN0eWxlPSd0b3A6MXB4O2Zsb2F0OmxlZnQ7b3BhY2l0eTouNTU7Jz5hPC9hPjxpbnB1dCB0eXBlPSdjaGVja2JveCcvPiI7CgoJYWxsID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAiKiIgKTsKCWEgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoICJhIiApWyAwIF07CgoJLy8gQ2FuJ3QgZ2V0IGJhc2ljIHRlc3Qgc3VwcG9ydAoJaWYgKCAhYWxsIHx8ICFhbGwubGVuZ3RoIHx8ICFhICkgewoJCXJldHVybiB7fTsKCX0KCgkvLyBGaXJzdCBiYXRjaCBvZiBzdXBwb3J0cyB0ZXN0cwoJc2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggInNlbGVjdCIgKTsKCW9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIikgKTsKCWlucHV0ID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAiaW5wdXQiIClbIDAgXTsKCglzdXBwb3J0ID0gewoJCS8vIElFIHN0cmlwcyBsZWFkaW5nIHdoaXRlc3BhY2Ugd2hlbiAuaW5uZXJIVE1MIGlzIHVzZWQKCQlsZWFkaW5nV2hpdGVzcGFjZTogKCBkaXYuZmlyc3RDaGlsZC5ub2RlVHlwZSA9PT0gMyApLAoKCQkvLyBNYWtlIHN1cmUgdGhhdCB0Ym9keSBlbGVtZW50cyBhcmVuJ3QgYXV0b21hdGljYWxseSBpbnNlcnRlZAoJCS8vIElFIHdpbGwgaW5zZXJ0IHRoZW0gaW50byBlbXB0eSB0YWJsZXMKCQl0Ym9keTogIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGJvZHkiKS5sZW5ndGgsCgoJCS8vIE1ha2Ugc3VyZSB0aGF0IGxpbmsgZWxlbWVudHMgZ2V0IHNlcmlhbGl6ZWQgY29ycmVjdGx5IGJ5IGlubmVySFRNTAoJCS8vIFRoaXMgcmVxdWlyZXMgYSB3cmFwcGVyIGVsZW1lbnQgaW4gSUUKCQlodG1sU2VyaWFsaXplOiAhIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGluayIpLmxlbmd0aCwKCgkJLy8gR2V0IHRoZSBzdHlsZSBpbmZvcm1hdGlvbiBmcm9tIGdldEF0dHJpYnV0ZQoJCS8vIChJRSB1c2VzIC5jc3NUZXh0IGluc3RlYWQpCgkJc3R5bGU6IC90b3AvLnRlc3QoIGEuZ2V0QXR0cmlidXRlKCJzdHlsZSIpICksCgoJCS8vIE1ha2Ugc3VyZSB0aGF0IFVSTHMgYXJlbid0IG1hbmlwdWxhdGVkCgkJLy8gKElFIG5vcm1hbGl6ZXMgaXQgYnkgZGVmYXVsdCkKCQlocmVmTm9ybWFsaXplZDogKCBhLmdldEF0dHJpYnV0ZSgiaHJlZiIpID09PSAiL2EiICksCgoJCS8vIE1ha2Ugc3VyZSB0aGF0IGVsZW1lbnQgb3BhY2l0eSBleGlzdHMKCQkvLyAoSUUgdXNlcyBmaWx0ZXIgaW5zdGVhZCkKCQkvLyBVc2UgYSByZWdleCB0byB3b3JrIGFyb3VuZCBhIFdlYktpdCBpc3N1ZS4gU2VlICM1MTQ1CgkJb3BhY2l0eTogL14wLjU1Ly50ZXN0KCBhLnN0eWxlLm9wYWNpdHkgKSwKCgkJLy8gVmVyaWZ5IHN0eWxlIGZsb2F0IGV4aXN0ZW5jZQoJCS8vIChJRSB1c2VzIHN0eWxlRmxvYXQgaW5zdGVhZCBvZiBjc3NGbG9hdCkKCQljc3NGbG9hdDogISFhLnN0eWxlLmNzc0Zsb2F0LAoKCQkvLyBNYWtlIHN1cmUgdGhhdCBpZiBubyB2YWx1ZSBpcyBzcGVjaWZpZWQgZm9yIGEgY2hlY2tib3gKCQkvLyB0aGF0IGl0IGRlZmF1bHRzIHRvICJvbiIuCgkJLy8gKFdlYktpdCBkZWZhdWx0cyB0byAiIiBpbnN0ZWFkKQoJCWNoZWNrT246ICggaW5wdXQudmFsdWUgPT09ICJvbiIgKSwKCgkJLy8gTWFrZSBzdXJlIHRoYXQgYSBzZWxlY3RlZC1ieS1kZWZhdWx0IG9wdGlvbiBoYXMgYSB3b3JraW5nIHNlbGVjdGVkIHByb3BlcnR5LgoJCS8vIChXZWJLaXQgZGVmYXVsdHMgdG8gZmFsc2UgaW5zdGVhZCBvZiB0cnVlLCBJRSB0b28sIGlmIGl0J3MgaW4gYW4gb3B0Z3JvdXApCgkJb3B0U2VsZWN0ZWQ6IG9wdC5zZWxlY3RlZCwKCgkJLy8gVGVzdCBzZXRBdHRyaWJ1dGUgb24gY2FtZWxDYXNlIGNsYXNzLiBJZiBpdCB3b3Jrcywgd2UgbmVlZCBhdHRyRml4ZXMgd2hlbiBkb2luZyBnZXQvc2V0QXR0cmlidXRlIChpZTYvNykKCQlnZXRTZXRBdHRyaWJ1dGU6IGRpdi5jbGFzc05hbWUgIT09ICJ0IiwKCgkJLy8gVGVzdHMgZm9yIGVuY3R5cGUgc3VwcG9ydCBvbiBhIGZvcm0oIzY3NDMpCgkJZW5jdHlwZTogISFkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJmb3JtIikuZW5jdHlwZSwKCgkJLy8gTWFrZXMgc3VyZSBjbG9uaW5nIGFuIGh0bWw1IGVsZW1lbnQgZG9lcyBub3QgY2F1c2UgcHJvYmxlbXMKCQkvLyBXaGVyZSBvdXRlckhUTUwgaXMgdW5kZWZpbmVkLCB0aGlzIHN0aWxsIHdvcmtzCgkJaHRtbDVDbG9uZTogZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibmF2IikuY2xvbmVOb2RlKCB0cnVlICkub3V0ZXJIVE1MICE9PSAiPDpuYXY+PC86bmF2PiIsCgoJCS8vIFdpbGwgYmUgZGVmaW5lZCBsYXRlcgoJCXN1Ym1pdEJ1YmJsZXM6IHRydWUsCgkJY2hhbmdlQnViYmxlczogdHJ1ZSwKCQlmb2N1c2luQnViYmxlczogZmFsc2UsCgkJZGVsZXRlRXhwYW5kbzogdHJ1ZSwKCQlub0Nsb25lRXZlbnQ6IHRydWUsCgkJaW5saW5lQmxvY2tOZWVkc0xheW91dDogZmFsc2UsCgkJc2hyaW5rV3JhcEJsb2NrczogZmFsc2UsCgkJcmVsaWFibGVNYXJnaW5SaWdodDogdHJ1ZSwKCQlwaXhlbE1hcmdpbjogdHJ1ZQoJfTsKCgkvLyBqUXVlcnkuYm94TW9kZWwgREVQUkVDQVRFRCBpbiAxLjMsIHVzZSBqUXVlcnkuc3VwcG9ydC5ib3hNb2RlbCBpbnN0ZWFkCglqUXVlcnkuYm94TW9kZWwgPSBzdXBwb3J0LmJveE1vZGVsID0gKGRvY3VtZW50LmNvbXBhdE1vZGUgPT09ICJDU1MxQ29tcGF0Iik7CgoJLy8gTWFrZSBzdXJlIGNoZWNrZWQgc3RhdHVzIGlzIHByb3Blcmx5IGNsb25lZAoJaW5wdXQuY2hlY2tlZCA9IHRydWU7CglzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gaW5wdXQuY2xvbmVOb2RlKCB0cnVlICkuY2hlY2tlZDsKCgkvLyBNYWtlIHN1cmUgdGhhdCB0aGUgb3B0aW9ucyBpbnNpZGUgZGlzYWJsZWQgc2VsZWN0cyBhcmVuJ3QgbWFya2VkIGFzIGRpc2FibGVkCgkvLyAoV2ViS2l0IG1hcmtzIHRoZW0gYXMgZGlzYWJsZWQpCglzZWxlY3QuZGlzYWJsZWQgPSB0cnVlOwoJc3VwcG9ydC5vcHREaXNhYmxlZCA9ICFvcHQuZGlzYWJsZWQ7CgoJLy8gVGVzdCB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkZWxldGUgYW4gZXhwYW5kbyBmcm9tIGFuIGVsZW1lbnQKCS8vIEZhaWxzIGluIEludGVybmV0IEV4cGxvcmVyCgl0cnkgewoJCWRlbGV0ZSBkaXYudGVzdDsKCX0gY2F0Y2goIGUgKSB7CgkJc3VwcG9ydC5kZWxldGVFeHBhbmRvID0gZmFsc2U7Cgl9CgoJaWYgKCAhZGl2LmFkZEV2ZW50TGlzdGVuZXIgJiYgZGl2LmF0dGFjaEV2ZW50ICYmIGRpdi5maXJlRXZlbnQgKSB7CgkJZGl2LmF0dGFjaEV2ZW50KCAib25jbGljayIsIGZ1bmN0aW9uKCkgewoJCQkvLyBDbG9uaW5nIGEgbm9kZSBzaG91bGRuJ3QgY29weSBvdmVyIGFueQoJCQkvLyBib3VuZCBldmVudCBoYW5kbGVycyAoSUUgZG9lcyB0aGlzKQoJCQlzdXBwb3J0Lm5vQ2xvbmVFdmVudCA9IGZhbHNlOwoJCX0pOwoJCWRpdi5jbG9uZU5vZGUoIHRydWUgKS5maXJlRXZlbnQoICJvbmNsaWNrIiApOwoJfQoKCS8vIENoZWNrIGlmIGEgcmFkaW8gbWFpbnRhaW5zIGl0cyB2YWx1ZQoJLy8gYWZ0ZXIgYmVpbmcgYXBwZW5kZWQgdG8gdGhlIERPTQoJaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpOwoJaW5wdXQudmFsdWUgPSAidCI7CglpbnB1dC5zZXRBdHRyaWJ1dGUoInR5cGUiLCAicmFkaW8iKTsKCXN1cHBvcnQucmFkaW9WYWx1ZSA9IGlucHV0LnZhbHVlID09PSAidCI7CgoJaW5wdXQuc2V0QXR0cmlidXRlKCJjaGVja2VkIiwgImNoZWNrZWQiKTsKCgkvLyAjMTEyMTcgLSBXZWJLaXQgbG9zZXMgY2hlY2sgd2hlbiB0aGUgbmFtZSBpcyBhZnRlciB0aGUgY2hlY2tlZCBhdHRyaWJ1dGUKCWlucHV0LnNldEF0dHJpYnV0ZSggIm5hbWUiLCAidCIgKTsKCglkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICk7CglmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKCWZyYWdtZW50LmFwcGVuZENoaWxkKCBkaXYubGFzdENoaWxkICk7CgoJLy8gV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzCglzdXBwb3J0LmNoZWNrQ2xvbmUgPSBmcmFnbWVudC5jbG9uZU5vZGUoIHRydWUgKS5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuY2hlY2tlZDsKCgkvLyBDaGVjayBpZiBhIGRpc2Nvbm5lY3RlZCBjaGVja2JveCB3aWxsIHJldGFpbiBpdHMgY2hlY2tlZAoJLy8gdmFsdWUgb2YgdHJ1ZSBhZnRlciBhcHBlbmRlZCB0byB0aGUgRE9NIChJRTYvNykKCXN1cHBvcnQuYXBwZW5kQ2hlY2tlZCA9IGlucHV0LmNoZWNrZWQ7CgoJZnJhZ21lbnQucmVtb3ZlQ2hpbGQoIGlucHV0ICk7CglmcmFnbWVudC5hcHBlbmRDaGlsZCggZGl2ICk7CgoJLy8gVGVjaG5pcXVlIGZyb20gSnVyaXkgWmF5dHNldgoJLy8gaHR0cDovL3BlcmZlY3Rpb25raWxscy5jb20vZGV0ZWN0aW5nLWV2ZW50LXN1cHBvcnQtd2l0aG91dC1icm93c2VyLXNuaWZmaW5nLwoJLy8gV2Ugb25seSBjYXJlIGFib3V0IHRoZSBjYXNlIHdoZXJlIG5vbi1zdGFuZGFyZCBldmVudCBzeXN0ZW1zCgkvLyBhcmUgdXNlZCwgbmFtZWx5IGluIElFLiBTaG9ydC1jaXJjdWl0aW5nIGhlcmUgaGVscHMgdXMgdG8KCS8vIGF2b2lkIGFuIGV2YWwgY2FsbCAoaW4gc2V0QXR0cmlidXRlKSB3aGljaCBjYW4gY2F1c2UgQ1NQCgkvLyB0byBnbyBoYXl3aXJlLiBTZWU6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL1NlY3VyaXR5L0NTUAoJaWYgKCBkaXYuYXR0YWNoRXZlbnQgKSB7CgkJZm9yICggaSBpbiB7CgkJCXN1Ym1pdDogMSwKCQkJY2hhbmdlOiAxLAoJCQlmb2N1c2luOiAxCgkJfSkgewoJCQlldmVudE5hbWUgPSAib24iICsgaTsKCQkJaXNTdXBwb3J0ZWQgPSAoIGV2ZW50TmFtZSBpbiBkaXYgKTsKCQkJaWYgKCAhaXNTdXBwb3J0ZWQgKSB7CgkJCQlkaXYuc2V0QXR0cmlidXRlKCBldmVudE5hbWUsICJyZXR1cm47IiApOwoJCQkJaXNTdXBwb3J0ZWQgPSAoIHR5cGVvZiBkaXZbIGV2ZW50TmFtZSBdID09PSAiZnVuY3Rpb24iICk7CgkJCX0KCQkJc3VwcG9ydFsgaSArICJCdWJibGVzIiBdID0gaXNTdXBwb3J0ZWQ7CgkJfQoJfQoKCWZyYWdtZW50LnJlbW92ZUNoaWxkKCBkaXYgKTsKCgkvLyBOdWxsIGVsZW1lbnRzIHRvIGF2b2lkIGxlYWtzIGluIElFCglmcmFnbWVudCA9IHNlbGVjdCA9IG9wdCA9IGRpdiA9IGlucHV0ID0gbnVsbDsKCgkvLyBSdW4gdGVzdHMgdGhhdCBuZWVkIGEgYm9keSBhdCBkb2MgcmVhZHkKCWpRdWVyeShmdW5jdGlvbigpIHsKCQl2YXIgY29udGFpbmVyLCBvdXRlciwgaW5uZXIsIHRhYmxlLCB0ZCwgb2Zmc2V0U3VwcG9ydCwKCQkJbWFyZ2luRGl2LCBjb25NYXJnaW5Ub3AsIHN0eWxlLCBodG1sLCBwb3NpdGlvblRvcExlZnRXaWR0aEhlaWdodCwKCQkJcGFkZGluZ01hcmdpbkJvcmRlclZpc2liaWxpdHksIHBhZGRpbmdNYXJnaW5Cb3JkZXIsCgkJCWJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYm9keSIpWzBdOwoKCQlpZiAoICFib2R5ICkgewoJCQkvLyBSZXR1cm4gZm9yIGZyYW1lc2V0IGRvY3MgdGhhdCBkb24ndCBoYXZlIGEgYm9keQoJCQlyZXR1cm47CgkJfQoKCQljb25NYXJnaW5Ub3AgPSAxOwoJCXBhZGRpbmdNYXJnaW5Cb3JkZXIgPSAicGFkZGluZzowO21hcmdpbjowO2JvcmRlcjoiOwoJCXBvc2l0aW9uVG9wTGVmdFdpZHRoSGVpZ2h0ID0gInBvc2l0aW9uOmFic29sdXRlO3RvcDowO2xlZnQ6MDt3aWR0aDoxcHg7aGVpZ2h0OjFweDsiOwoJCXBhZGRpbmdNYXJnaW5Cb3JkZXJWaXNpYmlsaXR5ID0gcGFkZGluZ01hcmdpbkJvcmRlciArICIwO3Zpc2liaWxpdHk6aGlkZGVuOyI7CgkJc3R5bGUgPSAic3R5bGU9JyIgKyBwb3NpdGlvblRvcExlZnRXaWR0aEhlaWdodCArIHBhZGRpbmdNYXJnaW5Cb3JkZXIgKyAiNXB4IHNvbGlkICMwMDA7IjsKCQlodG1sID0gIjxkaXYgIiArIHN0eWxlICsgImRpc3BsYXk6YmxvY2s7Jz48ZGl2IHN0eWxlPSciICsgcGFkZGluZ01hcmdpbkJvcmRlciArICIwO2Rpc3BsYXk6YmxvY2s7b3ZlcmZsb3c6aGlkZGVuOyc+PC9kaXY+PC9kaXY+IiArCgkJCSI8dGFibGUgIiArIHN0eWxlICsgIicgY2VsbHBhZGRpbmc9JzAnIGNlbGxzcGFjaW5nPScwJz4iICsKCQkJIjx0cj48dGQ+PC90ZD48L3RyPjwvdGFibGU+IjsKCgkJY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CgkJY29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBwYWRkaW5nTWFyZ2luQm9yZGVyVmlzaWJpbGl0eSArICJ3aWR0aDowO2hlaWdodDowO3Bvc2l0aW9uOnN0YXRpYzt0b3A6MDttYXJnaW4tdG9wOiIgKyBjb25NYXJnaW5Ub3AgKyAicHgiOwoJCWJvZHkuaW5zZXJ0QmVmb3JlKCBjb250YWluZXIsIGJvZHkuZmlyc3RDaGlsZCApOwoKCQkvLyBDb25zdHJ1Y3QgdGhlIHRlc3QgZWxlbWVudAoJCWRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoJCWNvbnRhaW5lci5hcHBlbmRDaGlsZCggZGl2ICk7CgoJCS8vIENoZWNrIGlmIHRhYmxlIGNlbGxzIHN0aWxsIGhhdmUgb2Zmc2V0V2lkdGgvSGVpZ2h0IHdoZW4gdGhleSBhcmUgc2V0CgkJLy8gdG8gZGlzcGxheTpub25lIGFuZCB0aGVyZSBhcmUgc3RpbGwgb3RoZXIgdmlzaWJsZSB0YWJsZSBjZWxscyBpbiBhCgkJLy8gdGFibGUgcm93OyBpZiBzbywgb2Zmc2V0V2lkdGgvSGVpZ2h0IGFyZSBub3QgcmVsaWFibGUgZm9yIHVzZSB3aGVuCgkJLy8gZGV0ZXJtaW5pbmcgaWYgYW4gZWxlbWVudCBoYXMgYmVlbiBoaWRkZW4gZGlyZWN0bHkgdXNpbmcKCQkvLyBkaXNwbGF5Om5vbmUgKGl0IGlzIHN0aWxsIHNhZmUgdG8gdXNlIG9mZnNldHMgaWYgYSBwYXJlbnQgZWxlbWVudCBpcwoJCS8vIGhpZGRlbjsgZG9uIHNhZmV0eSBnb2dnbGVzIGFuZCBzZWUgYnVnICM0NTEyIGZvciBtb3JlIGluZm9ybWF0aW9uKS4KCQkvLyAob25seSBJRSA4IGZhaWxzIHRoaXMgdGVzdCkKCQlkaXYuaW5uZXJIVE1MID0gIjx0YWJsZT48dHI+PHRkIHN0eWxlPSciICsgcGFkZGluZ01hcmdpbkJvcmRlciArICIwO2Rpc3BsYXk6bm9uZSc+PC90ZD48dGQ+dDwvdGQ+PC90cj48L3RhYmxlPiI7CgkJdGRzID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAidGQiICk7CgkJaXNTdXBwb3J0ZWQgPSAoIHRkc1sgMCBdLm9mZnNldEhlaWdodCA9PT0gMCApOwoKCQl0ZHNbIDAgXS5zdHlsZS5kaXNwbGF5ID0gIiI7CgkJdGRzWyAxIF0uc3R5bGUuZGlzcGxheSA9ICJub25lIjsKCgkJLy8gQ2hlY2sgaWYgZW1wdHkgdGFibGUgY2VsbHMgc3RpbGwgaGF2ZSBvZmZzZXRXaWR0aC9IZWlnaHQKCQkvLyAoSUUgPD0gOCBmYWlsIHRoaXMgdGVzdCkKCQlzdXBwb3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cyA9IGlzU3VwcG9ydGVkICYmICggdGRzWyAwIF0ub2Zmc2V0SGVpZ2h0ID09PSAwICk7CgoJCS8vIENoZWNrIGlmIGRpdiB3aXRoIGV4cGxpY2l0IHdpZHRoIGFuZCBubyBtYXJnaW4tcmlnaHQgaW5jb3JyZWN0bHkKCQkvLyBnZXRzIGNvbXB1dGVkIG1hcmdpbi1yaWdodCBiYXNlZCBvbiB3aWR0aCBvZiBjb250YWluZXIuIEZvciBtb3JlCgkJLy8gaW5mbyBzZWUgYnVnICMzMzMzCgkJLy8gRmFpbHMgaW4gV2ViS2l0IGJlZm9yZSBGZWIgMjAxMSBuaWdodGxpZXMKCQkvLyBXZWJLaXQgQnVnIDEzMzQzIC0gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHdyb25nIHZhbHVlIGZvciBtYXJnaW4tcmlnaHQKCQlpZiAoIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlICkgewoJCQlkaXYuaW5uZXJIVE1MID0gIiI7CgkJCW1hcmdpbkRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICk7CgkJCW1hcmdpbkRpdi5zdHlsZS53aWR0aCA9ICIwIjsKCQkJbWFyZ2luRGl2LnN0eWxlLm1hcmdpblJpZ2h0ID0gIjAiOwoJCQlkaXYuc3R5bGUud2lkdGggPSAiMnB4IjsKCQkJZGl2LmFwcGVuZENoaWxkKCBtYXJnaW5EaXYgKTsKCQkJc3VwcG9ydC5yZWxpYWJsZU1hcmdpblJpZ2h0ID0KCQkJCSggcGFyc2VJbnQoICggd2luZG93LmdldENvbXB1dGVkU3R5bGUoIG1hcmdpbkRpdiwgbnVsbCApIHx8IHsgbWFyZ2luUmlnaHQ6IDAgfSApLm1hcmdpblJpZ2h0LCAxMCApIHx8IDAgKSA9PT0gMDsKCQl9CgoJCWlmICggdHlwZW9mIGRpdi5zdHlsZS56b29tICE9PSAidW5kZWZpbmVkIiApIHsKCQkJLy8gQ2hlY2sgaWYgbmF0aXZlbHkgYmxvY2stbGV2ZWwgZWxlbWVudHMgYWN0IGxpa2UgaW5saW5lLWJsb2NrCgkJCS8vIGVsZW1lbnRzIHdoZW4gc2V0dGluZyB0aGVpciBkaXNwbGF5IHRvICdpbmxpbmUnIGFuZCBnaXZpbmcKCQkJLy8gdGhlbSBsYXlvdXQKCQkJLy8gKElFIDwgOCBkb2VzIHRoaXMpCgkJCWRpdi5pbm5lckhUTUwgPSAiIjsKCQkJZGl2LnN0eWxlLndpZHRoID0gZGl2LnN0eWxlLnBhZGRpbmcgPSAiMXB4IjsKCQkJZGl2LnN0eWxlLmJvcmRlciA9IDA7CgkJCWRpdi5zdHlsZS5vdmVyZmxvdyA9ICJoaWRkZW4iOwoJCQlkaXYuc3R5bGUuZGlzcGxheSA9ICJpbmxpbmUiOwoJCQlkaXYuc3R5bGUuem9vbSA9IDE7CgkJCXN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dCA9ICggZGl2Lm9mZnNldFdpZHRoID09PSAzICk7CgoJCQkvLyBDaGVjayBpZiBlbGVtZW50cyB3aXRoIGxheW91dCBzaHJpbmstd3JhcCB0aGVpciBjaGlsZHJlbgoJCQkvLyAoSUUgNiBkb2VzIHRoaXMpCgkJCWRpdi5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKCQkJZGl2LnN0eWxlLm92ZXJmbG93ID0gInZpc2libGUiOwoJCQlkaXYuaW5uZXJIVE1MID0gIjxkaXYgc3R5bGU9J3dpZHRoOjVweDsnPjwvZGl2PiI7CgkJCXN1cHBvcnQuc2hyaW5rV3JhcEJsb2NrcyA9ICggZGl2Lm9mZnNldFdpZHRoICE9PSAzICk7CgkJfQoKCQlkaXYuc3R5bGUuY3NzVGV4dCA9IHBvc2l0aW9uVG9wTGVmdFdpZHRoSGVpZ2h0ICsgcGFkZGluZ01hcmdpbkJvcmRlclZpc2liaWxpdHk7CgkJZGl2LmlubmVySFRNTCA9IGh0bWw7CgoJCW91dGVyID0gZGl2LmZpcnN0Q2hpbGQ7CgkJaW5uZXIgPSBvdXRlci5maXJzdENoaWxkOwoJCXRkID0gb3V0ZXIubmV4dFNpYmxpbmcuZmlyc3RDaGlsZC5maXJzdENoaWxkOwoKCQlvZmZzZXRTdXBwb3J0ID0gewoJCQlkb2VzTm90QWRkQm9yZGVyOiAoIGlubmVyLm9mZnNldFRvcCAhPT0gNSApLAoJCQlkb2VzQWRkQm9yZGVyRm9yVGFibGVBbmRDZWxsczogKCB0ZC5vZmZzZXRUb3AgPT09IDUgKQoJCX07CgoJCWlubmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKCQlpbm5lci5zdHlsZS50b3AgPSAiMjBweCI7CgoJCS8vIHNhZmFyaSBzdWJ0cmFjdHMgcGFyZW50IGJvcmRlciB3aWR0aCBoZXJlIHdoaWNoIGlzIDVweAoJCW9mZnNldFN1cHBvcnQuZml4ZWRQb3NpdGlvbiA9ICggaW5uZXIub2Zmc2V0VG9wID09PSAyMCB8fCBpbm5lci5vZmZzZXRUb3AgPT09IDE1ICk7CgkJaW5uZXIuc3R5bGUucG9zaXRpb24gPSBpbm5lci5zdHlsZS50b3AgPSAiIjsKCgkJb3V0ZXIuc3R5bGUub3ZlcmZsb3cgPSAiaGlkZGVuIjsKCQlvdXRlci5zdHlsZS5wb3NpdGlvbiA9ICJyZWxhdGl2ZSI7CgoJCW9mZnNldFN1cHBvcnQuc3VidHJhY3RzQm9yZGVyRm9yT3ZlcmZsb3dOb3RWaXNpYmxlID0gKCBpbm5lci5vZmZzZXRUb3AgPT09IC01ICk7CgkJb2Zmc2V0U3VwcG9ydC5kb2VzTm90SW5jbHVkZU1hcmdpbkluQm9keU9mZnNldCA9ICggYm9keS5vZmZzZXRUb3AgIT09IGNvbk1hcmdpblRvcCApOwoKCQlpZiAoIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlICkgewoJCQlkaXYuc3R5bGUubWFyZ2luVG9wID0gIjElIjsKCQkJc3VwcG9ydC5waXhlbE1hcmdpbiA9ICggd2luZG93LmdldENvbXB1dGVkU3R5bGUoIGRpdiwgbnVsbCApIHx8IHsgbWFyZ2luVG9wOiAwIH0gKS5tYXJnaW5Ub3AgIT09ICIxJSI7CgkJfQoKCQlpZiAoIHR5cGVvZiBjb250YWluZXIuc3R5bGUuem9vbSAhPT0gInVuZGVmaW5lZCIgKSB7CgkJCWNvbnRhaW5lci5zdHlsZS56b29tID0gMTsKCQl9CgoJCWJvZHkucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApOwoJCW1hcmdpbkRpdiA9IGRpdiA9IGNvbnRhaW5lciA9IG51bGw7CgoJCWpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIG9mZnNldFN1cHBvcnQgKTsKCX0pOwoKCXJldHVybiBzdXBwb3J0Owp9KSgpOwoKCgoKdmFyIHJicmFjZSA9IC9eKD86XHsuKlx9fFxbLipcXSkkLywKCXJtdWx0aURhc2ggPSAvKFtBLVpdKS9nOwoKalF1ZXJ5LmV4dGVuZCh7CgljYWNoZToge30sCgoJLy8gUGxlYXNlIHVzZSB3aXRoIGNhdXRpb24KCXV1aWQ6IDAsCgoJLy8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlCgkvLyBOb24tZGlnaXRzIHJlbW92ZWQgdG8gbWF0Y2ggcmlubGluZWpRdWVyeQoJZXhwYW5kbzogImpRdWVyeSIgKyAoIGpRdWVyeS5mbi5qcXVlcnkgKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xEL2csICIiICksCgoJLy8gVGhlIGZvbGxvd2luZyBlbGVtZW50cyB0aHJvdyB1bmNhdGNoYWJsZSBleGNlcHRpb25zIGlmIHlvdQoJLy8gYXR0ZW1wdCB0byBhZGQgZXhwYW5kbyBwcm9wZXJ0aWVzIHRvIHRoZW0uCglub0RhdGE6IHsKCQkiZW1iZWQiOiB0cnVlLAoJCS8vIEJhbiBhbGwgb2JqZWN0cyBleGNlcHQgZm9yIEZsYXNoICh3aGljaCBoYW5kbGUgZXhwYW5kb3MpCgkJIm9iamVjdCI6ICJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDAiLAoJCSJhcHBsZXQiOiB0cnVlCgl9LAoKCWhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVtICkgewoJCWVsZW0gPSBlbGVtLm5vZGVUeXBlID8galF1ZXJ5LmNhY2hlWyBlbGVtW2pRdWVyeS5leHBhbmRvXSBdIDogZWxlbVsgalF1ZXJ5LmV4cGFuZG8gXTsKCQlyZXR1cm4gISFlbGVtICYmICFpc0VtcHR5RGF0YU9iamVjdCggZWxlbSApOwoJfSwKCglkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSwgcHZ0IC8qIEludGVybmFsIFVzZSBPbmx5ICovICkgewoJCWlmICggIWpRdWVyeS5hY2NlcHREYXRhKCBlbGVtICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCXZhciBwcml2YXRlQ2FjaGUsIHRoaXNDYWNoZSwgcmV0LAoJCQlpbnRlcm5hbEtleSA9IGpRdWVyeS5leHBhbmRvLAoJCQlnZXRCeU5hbWUgPSB0eXBlb2YgbmFtZSA9PT0gInN0cmluZyIsCgoJCQkvLyBXZSBoYXZlIHRvIGhhbmRsZSBET00gbm9kZXMgYW5kIEpTIG9iamVjdHMgZGlmZmVyZW50bHkgYmVjYXVzZSBJRTYtNwoJCQkvLyBjYW4ndCBHQyBvYmplY3QgcmVmZXJlbmNlcyBwcm9wZXJseSBhY3Jvc3MgdGhlIERPTS1KUyBib3VuZGFyeQoJCQlpc05vZGUgPSBlbGVtLm5vZGVUeXBlLAoKCQkJLy8gT25seSBET00gbm9kZXMgbmVlZCB0aGUgZ2xvYmFsIGpRdWVyeSBjYWNoZTsgSlMgb2JqZWN0IGRhdGEgaXMKCQkJLy8gYXR0YWNoZWQgZGlyZWN0bHkgdG8gdGhlIG9iamVjdCBzbyBHQyBjYW4gb2NjdXIgYXV0b21hdGljYWxseQoJCQljYWNoZSA9IGlzTm9kZSA/IGpRdWVyeS5jYWNoZSA6IGVsZW0sCgoJCQkvLyBPbmx5IGRlZmluaW5nIGFuIElEIGZvciBKUyBvYmplY3RzIGlmIGl0cyBjYWNoZSBhbHJlYWR5IGV4aXN0cyBhbGxvd3MKCQkJLy8gdGhlIGNvZGUgdG8gc2hvcnRjdXQgb24gdGhlIHNhbWUgcGF0aCBhcyBhIERPTSBub2RlIHdpdGggbm8gY2FjaGUKCQkJaWQgPSBpc05vZGUgPyBlbGVtWyBpbnRlcm5hbEtleSBdIDogZWxlbVsgaW50ZXJuYWxLZXkgXSAmJiBpbnRlcm5hbEtleSwKCQkJaXNFdmVudHMgPSBuYW1lID09PSAiZXZlbnRzIjsKCgkJLy8gQXZvaWQgZG9pbmcgYW55IG1vcmUgd29yayB0aGFuIHdlIG5lZWQgdG8gd2hlbiB0cnlpbmcgdG8gZ2V0IGRhdGEgb24gYW4KCQkvLyBvYmplY3QgdGhhdCBoYXMgbm8gZGF0YSBhdCBhbGwKCQlpZiAoICghaWQgfHwgIWNhY2hlW2lkXSB8fCAoIWlzRXZlbnRzICYmICFwdnQgJiYgIWNhY2hlW2lkXS5kYXRhKSkgJiYgZ2V0QnlOYW1lICYmIGRhdGEgPT09IHVuZGVmaW5lZCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCAhaWQgKSB7CgkJCS8vIE9ubHkgRE9NIG5vZGVzIG5lZWQgYSBuZXcgdW5pcXVlIElEIGZvciBlYWNoIGVsZW1lbnQgc2luY2UgdGhlaXIgZGF0YQoJCQkvLyBlbmRzIHVwIGluIHRoZSBnbG9iYWwgY2FjaGUKCQkJaWYgKCBpc05vZGUgKSB7CgkJCQllbGVtWyBpbnRlcm5hbEtleSBdID0gaWQgPSArK2pRdWVyeS51dWlkOwoJCQl9IGVsc2UgewoJCQkJaWQgPSBpbnRlcm5hbEtleTsKCQkJfQoJCX0KCgkJaWYgKCAhY2FjaGVbIGlkIF0gKSB7CgkJCWNhY2hlWyBpZCBdID0ge307CgoJCQkvLyBBdm9pZHMgZXhwb3NpbmcgalF1ZXJ5IG1ldGFkYXRhIG9uIHBsYWluIEpTIG9iamVjdHMgd2hlbiB0aGUgb2JqZWN0CgkJCS8vIGlzIHNlcmlhbGl6ZWQgdXNpbmcgSlNPTi5zdHJpbmdpZnkKCQkJaWYgKCAhaXNOb2RlICkgewoJCQkJY2FjaGVbIGlkIF0udG9KU09OID0galF1ZXJ5Lm5vb3A7CgkJCX0KCQl9CgoJCS8vIEFuIG9iamVjdCBjYW4gYmUgcGFzc2VkIHRvIGpRdWVyeS5kYXRhIGluc3RlYWQgb2YgYSBrZXkvdmFsdWUgcGFpcjsgdGhpcyBnZXRzCgkJLy8gc2hhbGxvdyBjb3BpZWQgb3ZlciBvbnRvIHRoZSBleGlzdGluZyBjYWNoZQoJCWlmICggdHlwZW9mIG5hbWUgPT09ICJvYmplY3QiIHx8IHR5cGVvZiBuYW1lID09PSAiZnVuY3Rpb24iICkgewoJCQlpZiAoIHB2dCApIHsKCQkJCWNhY2hlWyBpZCBdID0galF1ZXJ5LmV4dGVuZCggY2FjaGVbIGlkIF0sIG5hbWUgKTsKCQkJfSBlbHNlIHsKCQkJCWNhY2hlWyBpZCBdLmRhdGEgPSBqUXVlcnkuZXh0ZW5kKCBjYWNoZVsgaWQgXS5kYXRhLCBuYW1lICk7CgkJCX0KCQl9CgoJCXByaXZhdGVDYWNoZSA9IHRoaXNDYWNoZSA9IGNhY2hlWyBpZCBdOwoKCQkvLyBqUXVlcnkgZGF0YSgpIGlzIHN0b3JlZCBpbiBhIHNlcGFyYXRlIG9iamVjdCBpbnNpZGUgdGhlIG9iamVjdCdzIGludGVybmFsIGRhdGEKCQkvLyBjYWNoZSBpbiBvcmRlciB0byBhdm9pZCBrZXkgY29sbGlzaW9ucyBiZXR3ZWVuIGludGVybmFsIGRhdGEgYW5kIHVzZXItZGVmaW5lZAoJCS8vIGRhdGEuCgkJaWYgKCAhcHZ0ICkgewoJCQlpZiAoICF0aGlzQ2FjaGUuZGF0YSApIHsKCQkJCXRoaXNDYWNoZS5kYXRhID0ge307CgkJCX0KCgkJCXRoaXNDYWNoZSA9IHRoaXNDYWNoZS5kYXRhOwoJCX0KCgkJaWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7CgkJCXRoaXNDYWNoZVsgalF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApIF0gPSBkYXRhOwoJCX0KCgkJLy8gVXNlcnMgc2hvdWxkIG5vdCBhdHRlbXB0IHRvIGluc3BlY3QgdGhlIGludGVybmFsIGV2ZW50cyBvYmplY3QgdXNpbmcgalF1ZXJ5LmRhdGEsCgkJLy8gaXQgaXMgdW5kb2N1bWVudGVkIGFuZCBzdWJqZWN0IHRvIGNoYW5nZS4gQnV0IGRvZXMgYW55b25lIGxpc3Rlbj8gTm8uCgkJaWYgKCBpc0V2ZW50cyAmJiAhdGhpc0NhY2hlWyBuYW1lIF0gKSB7CgkJCXJldHVybiBwcml2YXRlQ2FjaGUuZXZlbnRzOwoJCX0KCgkJLy8gQ2hlY2sgZm9yIGJvdGggY29udmVydGVkLXRvLWNhbWVsIGFuZCBub24tY29udmVydGVkIGRhdGEgcHJvcGVydHkgbmFtZXMKCQkvLyBJZiBhIGRhdGEgcHJvcGVydHkgd2FzIHNwZWNpZmllZAoJCWlmICggZ2V0QnlOYW1lICkgewoKCQkJLy8gRmlyc3QgVHJ5IHRvIGZpbmQgYXMtaXMgcHJvcGVydHkgZGF0YQoJCQlyZXQgPSB0aGlzQ2FjaGVbIG5hbWUgXTsKCgkJCS8vIFRlc3QgZm9yIG51bGx8dW5kZWZpbmVkIHByb3BlcnR5IGRhdGEKCQkJaWYgKCByZXQgPT0gbnVsbCApIHsKCgkJCQkvLyBUcnkgdG8gZmluZCB0aGUgY2FtZWxDYXNlZCBwcm9wZXJ0eQoJCQkJcmV0ID0gdGhpc0NhY2hlWyBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICkgXTsKCQkJfQoJCX0gZWxzZSB7CgkJCXJldCA9IHRoaXNDYWNoZTsKCQl9CgoJCXJldHVybiByZXQ7Cgl9LAoKCXJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBwdnQgLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7CgkJaWYgKCAhalF1ZXJ5LmFjY2VwdERhdGEoIGVsZW0gKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdmFyIHRoaXNDYWNoZSwgaSwgbCwKCgkJCS8vIFJlZmVyZW5jZSB0byBpbnRlcm5hbCBkYXRhIGNhY2hlIGtleQoJCQlpbnRlcm5hbEtleSA9IGpRdWVyeS5leHBhbmRvLAoKCQkJaXNOb2RlID0gZWxlbS5ub2RlVHlwZSwKCgkJCS8vIFNlZSBqUXVlcnkuZGF0YSBmb3IgbW9yZSBpbmZvcm1hdGlvbgoJCQljYWNoZSA9IGlzTm9kZSA/IGpRdWVyeS5jYWNoZSA6IGVsZW0sCgoJCQkvLyBTZWUgalF1ZXJ5LmRhdGEgZm9yIG1vcmUgaW5mb3JtYXRpb24KCQkJaWQgPSBpc05vZGUgPyBlbGVtWyBpbnRlcm5hbEtleSBdIDogaW50ZXJuYWxLZXk7CgoJCS8vIElmIHRoZXJlIGlzIGFscmVhZHkgbm8gY2FjaGUgZW50cnkgZm9yIHRoaXMgb2JqZWN0LCB0aGVyZSBpcyBubwoJCS8vIHB1cnBvc2UgaW4gY29udGludWluZwoJCWlmICggIWNhY2hlWyBpZCBdICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIG5hbWUgKSB7CgoJCQl0aGlzQ2FjaGUgPSBwdnQgPyBjYWNoZVsgaWQgXSA6IGNhY2hlWyBpZCBdLmRhdGE7CgoJCQlpZiAoIHRoaXNDYWNoZSApIHsKCgkJCQkvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgbmFtZXMgZm9yIGRhdGEga2V5cwoJCQkJaWYgKCAhalF1ZXJ5LmlzQXJyYXkoIG5hbWUgKSApIHsKCgkJCQkJLy8gdHJ5IHRoZSBzdHJpbmcgYXMgYSBrZXkgYmVmb3JlIGFueSBtYW5pcHVsYXRpb24KCQkJCQlpZiAoIG5hbWUgaW4gdGhpc0NhY2hlICkgewoJCQkJCQluYW1lID0gWyBuYW1lIF07CgkJCQkJfSBlbHNlIHsKCgkJCQkJCS8vIHNwbGl0IHRoZSBjYW1lbCBjYXNlZCB2ZXJzaW9uIGJ5IHNwYWNlcyB1bmxlc3MgYSBrZXkgd2l0aCB0aGUgc3BhY2VzIGV4aXN0cwoJCQkJCQluYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApOwoJCQkJCQlpZiAoIG5hbWUgaW4gdGhpc0NhY2hlICkgewoJCQkJCQkJbmFtZSA9IFsgbmFtZSBdOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJbmFtZSA9IG5hbWUuc3BsaXQoICIgIiApOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoKCQkJCWZvciAoIGkgPSAwLCBsID0gbmFtZS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQkJZGVsZXRlIHRoaXNDYWNoZVsgbmFtZVtpXSBdOwoJCQkJfQoKCQkJCS8vIElmIHRoZXJlIGlzIG5vIGRhdGEgbGVmdCBpbiB0aGUgY2FjaGUsIHdlIHdhbnQgdG8gY29udGludWUKCQkJCS8vIGFuZCBsZXQgdGhlIGNhY2hlIG9iamVjdCBpdHNlbGYgZ2V0IGRlc3Ryb3llZAoJCQkJaWYgKCAhKCBwdnQgPyBpc0VtcHR5RGF0YU9iamVjdCA6IGpRdWVyeS5pc0VtcHR5T2JqZWN0ICkoIHRoaXNDYWNoZSApICkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJfQoJCX0KCgkJLy8gU2VlIGpRdWVyeS5kYXRhIGZvciBtb3JlIGluZm9ybWF0aW9uCgkJaWYgKCAhcHZ0ICkgewoJCQlkZWxldGUgY2FjaGVbIGlkIF0uZGF0YTsKCgkJCS8vIERvbid0IGRlc3Ryb3kgdGhlIHBhcmVudCBjYWNoZSB1bmxlc3MgdGhlIGludGVybmFsIGRhdGEgb2JqZWN0CgkJCS8vIGhhZCBiZWVuIHRoZSBvbmx5IHRoaW5nIGxlZnQgaW4gaXQKCQkJaWYgKCAhaXNFbXB0eURhdGFPYmplY3QoY2FjaGVbIGlkIF0pICkgewoJCQkJcmV0dXJuOwoJCQl9CgkJfQoKCQkvLyBCcm93c2VycyB0aGF0IGZhaWwgZXhwYW5kbyBkZWxldGlvbiBhbHNvIHJlZnVzZSB0byBkZWxldGUgZXhwYW5kb3Mgb24KCQkvLyB0aGUgd2luZG93LCBidXQgaXQgd2lsbCBhbGxvdyBpdCBvbiBhbGwgb3RoZXIgSlMgb2JqZWN0czsgb3RoZXIgYnJvd3NlcnMKCQkvLyBkb24ndCBjYXJlCgkJLy8gRW5zdXJlIHRoYXQgYGNhY2hlYCBpcyBub3QgYSB3aW5kb3cgb2JqZWN0ICMxMDA4MAoJCWlmICggalF1ZXJ5LnN1cHBvcnQuZGVsZXRlRXhwYW5kbyB8fCAhY2FjaGUuc2V0SW50ZXJ2YWwgKSB7CgkJCWRlbGV0ZSBjYWNoZVsgaWQgXTsKCQl9IGVsc2UgewoJCQljYWNoZVsgaWQgXSA9IG51bGw7CgkJfQoKCQkvLyBXZSBkZXN0cm95ZWQgdGhlIGNhY2hlIGFuZCBuZWVkIHRvIGVsaW1pbmF0ZSB0aGUgZXhwYW5kbyBvbiB0aGUgbm9kZSB0byBhdm9pZAoJCS8vIGZhbHNlIGxvb2t1cHMgaW4gdGhlIGNhY2hlIGZvciBlbnRyaWVzIHRoYXQgbm8gbG9uZ2VyIGV4aXN0CgkJaWYgKCBpc05vZGUgKSB7CgkJCS8vIElFIGRvZXMgbm90IGFsbG93IHVzIHRvIGRlbGV0ZSBleHBhbmRvIHByb3BlcnRpZXMgZnJvbSBub2RlcywKCQkJLy8gbm9yIGRvZXMgaXQgaGF2ZSBhIHJlbW92ZUF0dHJpYnV0ZSBmdW5jdGlvbiBvbiBEb2N1bWVudCBub2RlczsKCQkJLy8gd2UgbXVzdCBoYW5kbGUgYWxsIG9mIHRoZXNlIGNhc2VzCgkJCWlmICggalF1ZXJ5LnN1cHBvcnQuZGVsZXRlRXhwYW5kbyApIHsKCQkJCWRlbGV0ZSBlbGVtWyBpbnRlcm5hbEtleSBdOwoJCQl9IGVsc2UgaWYgKCBlbGVtLnJlbW92ZUF0dHJpYnV0ZSApIHsKCQkJCWVsZW0ucmVtb3ZlQXR0cmlidXRlKCBpbnRlcm5hbEtleSApOwoJCQl9IGVsc2UgewoJCQkJZWxlbVsgaW50ZXJuYWxLZXkgXSA9IG51bGw7CgkJCX0KCQl9Cgl9LAoKCS8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS4KCV9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHsKCQlyZXR1cm4galF1ZXJ5LmRhdGEoIGVsZW0sIG5hbWUsIGRhdGEsIHRydWUgKTsKCX0sCgoJLy8gQSBtZXRob2QgZm9yIGRldGVybWluaW5nIGlmIGEgRE9NIG5vZGUgY2FuIGhhbmRsZSB0aGUgZGF0YSBleHBhbmRvCglhY2NlcHREYXRhOiBmdW5jdGlvbiggZWxlbSApIHsKCQlpZiAoIGVsZW0ubm9kZU5hbWUgKSB7CgkJCXZhciBtYXRjaCA9IGpRdWVyeS5ub0RhdGFbIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdOwoKCQkJaWYgKCBtYXRjaCApIHsKCQkJCXJldHVybiAhKG1hdGNoID09PSB0cnVlIHx8IGVsZW0uZ2V0QXR0cmlidXRlKCJjbGFzc2lkIikgIT09IG1hdGNoKTsKCQkJfQoJCX0KCgkJcmV0dXJuIHRydWU7Cgl9Cn0pOwoKalF1ZXJ5LmZuLmV4dGVuZCh7CglkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgcGFydHMsIHBhcnQsIGF0dHIsIG5hbWUsIGwsCgkJCWVsZW0gPSB0aGlzWzBdLAoJCQlpID0gMCwKCQkJZGF0YSA9IG51bGw7CgoJCS8vIEdldHMgYWxsIHZhbHVlcwoJCWlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7CgkJCWlmICggdGhpcy5sZW5ndGggKSB7CgkJCQlkYXRhID0galF1ZXJ5LmRhdGEoIGVsZW0gKTsKCgkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWpRdWVyeS5fZGF0YSggZWxlbSwgInBhcnNlZEF0dHJzIiApICkgewoJCQkJCWF0dHIgPSBlbGVtLmF0dHJpYnV0ZXM7CgkJCQkJZm9yICggbCA9IGF0dHIubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCQluYW1lID0gYXR0cltpXS5uYW1lOwoKCQkJCQkJaWYgKCBuYW1lLmluZGV4T2YoICJkYXRhLSIgKSA9PT0gMCApIHsKCQkJCQkJCW5hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lLnN1YnN0cmluZyg1KSApOwoKCQkJCQkJCWRhdGFBdHRyKCBlbGVtLCBuYW1lLCBkYXRhWyBuYW1lIF0gKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQlqUXVlcnkuX2RhdGEoIGVsZW0sICJwYXJzZWRBdHRycyIsIHRydWUgKTsKCQkJCX0KCQkJfQoKCQkJcmV0dXJuIGRhdGE7CgkJfQoKCQkvLyBTZXRzIG11bHRpcGxlIHZhbHVlcwoJCWlmICggdHlwZW9mIGtleSA9PT0gIm9iamVjdCIgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCQlqUXVlcnkuZGF0YSggdGhpcywga2V5ICk7CgkJCX0pOwoJCX0KCgkJcGFydHMgPSBrZXkuc3BsaXQoICIuIiwgMiApOwoJCXBhcnRzWzFdID0gcGFydHNbMV0gPyAiLiIgKyBwYXJ0c1sxXSA6ICIiOwoJCXBhcnQgPSBwYXJ0c1sxXSArICIhIjsKCgkJcmV0dXJuIGpRdWVyeS5hY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHsKCgkJCWlmICggdmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCQkJCWRhdGEgPSB0aGlzLnRyaWdnZXJIYW5kbGVyKCAiZ2V0RGF0YSIgKyBwYXJ0LCBbIHBhcnRzWzBdIF0gKTsKCgkJCQkvLyBUcnkgdG8gZmV0Y2ggYW55IGludGVybmFsbHkgc3RvcmVkIGRhdGEgZmlyc3QKCQkJCWlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0gKSB7CgkJCQkJZGF0YSA9IGpRdWVyeS5kYXRhKCBlbGVtLCBrZXkgKTsKCQkJCQlkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApOwoJCQkJfQoKCQkJCXJldHVybiBkYXRhID09PSB1bmRlZmluZWQgJiYgcGFydHNbMV0gPwoJCQkJCXRoaXMuZGF0YSggcGFydHNbMF0gKSA6CgkJCQkJZGF0YTsKCQkJfQoKCQkJcGFydHNbMV0gPSB2YWx1ZTsKCQkJdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQkJdmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKTsKCgkJCQlzZWxmLnRyaWdnZXJIYW5kbGVyKCAic2V0RGF0YSIgKyBwYXJ0LCBwYXJ0cyApOwoJCQkJalF1ZXJ5LmRhdGEoIHRoaXMsIGtleSwgdmFsdWUgKTsKCQkJCXNlbGYudHJpZ2dlckhhbmRsZXIoICJjaGFuZ2VEYXRhIiArIHBhcnQsIHBhcnRzICk7CgkJCX0pOwoJCX0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgZmFsc2UgKTsKCX0sCgoJcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHsKCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkucmVtb3ZlRGF0YSggdGhpcywga2V5ICk7CgkJfSk7Cgl9Cn0pOwoKZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHsKCS8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnkKCS8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZQoJaWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCgkJdmFyIG5hbWUgPSAiZGF0YS0iICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsICItJDEiICkudG9Mb3dlckNhc2UoKTsKCgkJZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7CgoJCWlmICggdHlwZW9mIGRhdGEgPT09ICJzdHJpbmciICkgewoJCQl0cnkgewoJCQkJZGF0YSA9IGRhdGEgPT09ICJ0cnVlIiA/IHRydWUgOgoJCQkJZGF0YSA9PT0gImZhbHNlIiA/IGZhbHNlIDoKCQkJCWRhdGEgPT09ICJudWxsIiA/IG51bGwgOgoJCQkJalF1ZXJ5LmlzTnVtZXJpYyggZGF0YSApID8gK2RhdGEgOgoJCQkJCXJicmFjZS50ZXN0KCBkYXRhICkgPyBqUXVlcnkucGFyc2VKU09OKCBkYXRhICkgOgoJCQkJCWRhdGE7CgkJCX0gY2F0Y2goIGUgKSB7fQoKCQkJLy8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyCgkJCWpRdWVyeS5kYXRhKCBlbGVtLCBrZXksIGRhdGEgKTsKCgkJfSBlbHNlIHsKCQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9Cgl9CgoJcmV0dXJuIGRhdGE7Cn0KCi8vIGNoZWNrcyBhIGNhY2hlIG9iamVjdCBmb3IgZW1wdGluZXNzCmZ1bmN0aW9uIGlzRW1wdHlEYXRhT2JqZWN0KCBvYmogKSB7Cglmb3IgKCB2YXIgbmFtZSBpbiBvYmogKSB7CgoJCS8vIGlmIHRoZSBwdWJsaWMgZGF0YSBvYmplY3QgaXMgZW1wdHksIHRoZSBwcml2YXRlIGlzIHN0aWxsIGVtcHR5CgkJaWYgKCBuYW1lID09PSAiZGF0YSIgJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9ialtuYW1lXSApICkgewoJCQljb250aW51ZTsKCQl9CgkJaWYgKCBuYW1lICE9PSAidG9KU09OIiApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCX0KCglyZXR1cm4gdHJ1ZTsKfQoKCgoKZnVuY3Rpb24gaGFuZGxlUXVldWVNYXJrRGVmZXIoIGVsZW0sIHR5cGUsIHNyYyApIHsKCXZhciBkZWZlckRhdGFLZXkgPSB0eXBlICsgImRlZmVyIiwKCQlxdWV1ZURhdGFLZXkgPSB0eXBlICsgInF1ZXVlIiwKCQltYXJrRGF0YUtleSA9IHR5cGUgKyAibWFyayIsCgkJZGVmZXIgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIGRlZmVyRGF0YUtleSApOwoJaWYgKCBkZWZlciAmJgoJCSggc3JjID09PSAicXVldWUiIHx8ICFqUXVlcnkuX2RhdGEoZWxlbSwgcXVldWVEYXRhS2V5KSApICYmCgkJKCBzcmMgPT09ICJtYXJrIiB8fCAhalF1ZXJ5Ll9kYXRhKGVsZW0sIG1hcmtEYXRhS2V5KSApICkgewoJCS8vIEdpdmUgcm9vbSBmb3IgaGFyZC1jb2RlZCBjYWxsYmFja3MgdG8gZmlyZSBmaXJzdAoJCS8vIGFuZCBldmVudHVhbGx5IG1hcmsvcXVldWUgc29tZXRoaW5nIGVsc2Ugb24gdGhlIGVsZW1lbnQKCQlzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsKCQkJaWYgKCAhalF1ZXJ5Ll9kYXRhKCBlbGVtLCBxdWV1ZURhdGFLZXkgKSAmJgoJCQkJIWpRdWVyeS5fZGF0YSggZWxlbSwgbWFya0RhdGFLZXkgKSApIHsKCQkJCWpRdWVyeS5yZW1vdmVEYXRhKCBlbGVtLCBkZWZlckRhdGFLZXksIHRydWUgKTsKCQkJCWRlZmVyLmZpcmUoKTsKCQkJfQoJCX0sIDAgKTsKCX0KfQoKalF1ZXJ5LmV4dGVuZCh7CgoJX21hcms6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkgewoJCWlmICggZWxlbSApIHsKCQkJdHlwZSA9ICggdHlwZSB8fCAiZngiICkgKyAibWFyayI7CgkJCWpRdWVyeS5fZGF0YSggZWxlbSwgdHlwZSwgKGpRdWVyeS5fZGF0YSggZWxlbSwgdHlwZSApIHx8IDApICsgMSApOwoJCX0KCX0sCgoJX3VubWFyazogZnVuY3Rpb24oIGZvcmNlLCBlbGVtLCB0eXBlICkgewoJCWlmICggZm9yY2UgIT09IHRydWUgKSB7CgkJCXR5cGUgPSBlbGVtOwoJCQllbGVtID0gZm9yY2U7CgkJCWZvcmNlID0gZmFsc2U7CgkJfQoJCWlmICggZWxlbSApIHsKCQkJdHlwZSA9IHR5cGUgfHwgImZ4IjsKCQkJdmFyIGtleSA9IHR5cGUgKyAibWFyayIsCgkJCQljb3VudCA9IGZvcmNlID8gMCA6ICggKGpRdWVyeS5fZGF0YSggZWxlbSwga2V5ICkgfHwgMSkgLSAxICk7CgkJCWlmICggY291bnQgKSB7CgkJCQlqUXVlcnkuX2RhdGEoIGVsZW0sIGtleSwgY291bnQgKTsKCQkJfSBlbHNlIHsKCQkJCWpRdWVyeS5yZW1vdmVEYXRhKCBlbGVtLCBrZXksIHRydWUgKTsKCQkJCWhhbmRsZVF1ZXVlTWFya0RlZmVyKCBlbGVtLCB0eXBlLCAibWFyayIgKTsKCQkJfQoJCX0KCX0sCgoJcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkgewoJCXZhciBxOwoJCWlmICggZWxlbSApIHsKCQkJdHlwZSA9ICggdHlwZSB8fCAiZngiICkgKyAicXVldWUiOwoJCQlxID0galF1ZXJ5Ll9kYXRhKCBlbGVtLCB0eXBlICk7CgoJCQkvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwCgkJCWlmICggZGF0YSApIHsKCQkJCWlmICggIXEgfHwgalF1ZXJ5LmlzQXJyYXkoZGF0YSkgKSB7CgkJCQkJcSA9IGpRdWVyeS5fZGF0YSggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheShkYXRhKSApOwoJCQkJfSBlbHNlIHsKCQkJCQlxLnB1c2goIGRhdGEgKTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gcSB8fCBbXTsKCQl9Cgl9LAoKCWRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkgewoJCXR5cGUgPSB0eXBlIHx8ICJmeCI7CgoJCXZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLAoJCQlmbiA9IHF1ZXVlLnNoaWZ0KCksCgkJCWhvb2tzID0ge307CgoJCS8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWwKCQlpZiAoIGZuID09PSAiaW5wcm9ncmVzcyIgKSB7CgkJCWZuID0gcXVldWUuc2hpZnQoKTsKCQl9CgoJCWlmICggZm4gKSB7CgkJCS8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmcKCQkJLy8gYXV0b21hdGljYWxseSBkZXF1ZXVlZAoJCQlpZiAoIHR5cGUgPT09ICJmeCIgKSB7CgkJCQlxdWV1ZS51bnNoaWZ0KCAiaW5wcm9ncmVzcyIgKTsKCQkJfQoKCQkJalF1ZXJ5Ll9kYXRhKCBlbGVtLCB0eXBlICsgIi5ydW4iLCBob29rcyApOwoJCQlmbi5jYWxsKCBlbGVtLCBmdW5jdGlvbigpIHsKCQkJCWpRdWVyeS5kZXF1ZXVlKCBlbGVtLCB0eXBlICk7CgkJCX0sIGhvb2tzICk7CgkJfQoKCQlpZiAoICFxdWV1ZS5sZW5ndGggKSB7CgkJCWpRdWVyeS5yZW1vdmVEYXRhKCBlbGVtLCB0eXBlICsgInF1ZXVlICIgKyB0eXBlICsgIi5ydW4iLCB0cnVlICk7CgkJCWhhbmRsZVF1ZXVlTWFya0RlZmVyKCBlbGVtLCB0eXBlLCAicXVldWUiICk7CgkJfQoJfQp9KTsKCmpRdWVyeS5mbi5leHRlbmQoewoJcXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkgewoJCXZhciBzZXR0ZXIgPSAyOwoKCQlpZiAoIHR5cGVvZiB0eXBlICE9PSAic3RyaW5nIiApIHsKCQkJZGF0YSA9IHR5cGU7CgkJCXR5cGUgPSAiZngiOwoJCQlzZXR0ZXItLTsKCQl9CgoJCWlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHsKCQkJcmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1swXSwgdHlwZSApOwoJCX0KCgkJcmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/CgkJCXRoaXMgOgoJCQl0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCQl2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTsKCgkJCQlpZiAoIHR5cGUgPT09ICJmeCIgJiYgcXVldWVbMF0gIT09ICJpbnByb2dyZXNzIiApIHsKCQkJCQlqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApOwoJCQkJfQoJCQl9KTsKCX0sCglkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHsKCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApOwoJCX0pOwoJfSwKCS8vIEJhc2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVybWlzc2lvbi4KCS8vIGh0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS8KCWRlbGF5OiBmdW5jdGlvbiggdGltZSwgdHlwZSApIHsKCQl0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lOwoJCXR5cGUgPSB0eXBlIHx8ICJmeCI7CgoJCXJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7CgkJCXZhciB0aW1lb3V0ID0gc2V0VGltZW91dCggbmV4dCwgdGltZSApOwoJCQlob29rcy5zdG9wID0gZnVuY3Rpb24oKSB7CgkJCQljbGVhclRpbWVvdXQoIHRpbWVvdXQgKTsKCQkJfTsKCQl9KTsKCX0sCgljbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHsKCQlyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCAiZngiLCBbXSApOwoJfSwKCS8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGUKCS8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KQoJcHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iamVjdCApIHsKCQlpZiAoIHR5cGVvZiB0eXBlICE9PSAic3RyaW5nIiApIHsKCQkJb2JqZWN0ID0gdHlwZTsKCQkJdHlwZSA9IHVuZGVmaW5lZDsKCQl9CgkJdHlwZSA9IHR5cGUgfHwgImZ4IjsKCQl2YXIgZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSwKCQkJZWxlbWVudHMgPSB0aGlzLAoJCQlpID0gZWxlbWVudHMubGVuZ3RoLAoJCQljb3VudCA9IDEsCgkJCWRlZmVyRGF0YUtleSA9IHR5cGUgKyAiZGVmZXIiLAoJCQlxdWV1ZURhdGFLZXkgPSB0eXBlICsgInF1ZXVlIiwKCQkJbWFya0RhdGFLZXkgPSB0eXBlICsgIm1hcmsiLAoJCQl0bXA7CgkJZnVuY3Rpb24gcmVzb2x2ZSgpIHsKCQkJaWYgKCAhKCAtLWNvdW50ICkgKSB7CgkJCQlkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApOwoJCQl9CgkJfQoJCXdoaWxlKCBpLS0gKSB7CgkJCWlmICgoIHRtcCA9IGpRdWVyeS5kYXRhKCBlbGVtZW50c1sgaSBdLCBkZWZlckRhdGFLZXksIHVuZGVmaW5lZCwgdHJ1ZSApIHx8CgkJCQkJKCBqUXVlcnkuZGF0YSggZWxlbWVudHNbIGkgXSwgcXVldWVEYXRhS2V5LCB1bmRlZmluZWQsIHRydWUgKSB8fAoJCQkJCQlqUXVlcnkuZGF0YSggZWxlbWVudHNbIGkgXSwgbWFya0RhdGFLZXksIHVuZGVmaW5lZCwgdHJ1ZSApICkgJiYKCQkJCQlqUXVlcnkuZGF0YSggZWxlbWVudHNbIGkgXSwgZGVmZXJEYXRhS2V5LCBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICksIHRydWUgKSApKSB7CgkJCQljb3VudCsrOwoJCQkJdG1wLmFkZCggcmVzb2x2ZSApOwoJCQl9CgkJfQoJCXJlc29sdmUoKTsKCQlyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqZWN0ICk7Cgl9Cn0pOwoKCgoKdmFyIHJjbGFzcyA9IC9bXG5cdFxyXS9nLAoJcnNwYWNlID0gL1xzKy8sCglycmV0dXJuID0gL1xyL2csCglydHlwZSA9IC9eKD86YnV0dG9ufGlucHV0KSQvaSwKCXJmb2N1c2FibGUgPSAvXig/OmJ1dHRvbnxpbnB1dHxvYmplY3R8c2VsZWN0fHRleHRhcmVhKSQvaSwKCXJjbGlja2FibGUgPSAvXmEoPzpyZWEpPyQvaSwKCXJib29sZWFuID0gL14oPzphdXRvZm9jdXN8YXV0b3BsYXl8YXN5bmN8Y2hlY2tlZHxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZHxzZWxlY3RlZCkkL2ksCglnZXRTZXRBdHRyaWJ1dGUgPSBqUXVlcnkuc3VwcG9ydC5nZXRTZXRBdHRyaWJ1dGUsCglub2RlSG9vaywgYm9vbEhvb2ssIGZpeFNwZWNpZmllZDsKCmpRdWVyeS5mbi5leHRlbmQoewoJYXR0cjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkgewoJCXJldHVybiBqUXVlcnkuYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7Cgl9LAoKCXJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkgewoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCWpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7CgkJfSk7Cgl9LAoKCXByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHsKCQlyZXR1cm4galF1ZXJ5LmFjY2VzcyggdGhpcywgalF1ZXJ5LnByb3AsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApOwoJfSwKCglyZW1vdmVQcm9wOiBmdW5jdGlvbiggbmFtZSApIHsKCQluYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lOwoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCS8vIHRyeS9jYXRjaCBoYW5kbGVzIGNhc2VzIHdoZXJlIElFIGJhbGtzIChzdWNoIGFzIHJlbW92aW5nIGEgcHJvcGVydHkgb24gd2luZG93KQoJCQl0cnkgewoJCQkJdGhpc1sgbmFtZSBdID0gdW5kZWZpbmVkOwoJCQkJZGVsZXRlIHRoaXNbIG5hbWUgXTsKCQkJfSBjYXRjaCggZSApIHt9CgkJfSk7Cgl9LAoKCWFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGNsYXNzTmFtZXMsIGksIGwsIGVsZW0sCgkJCXNldENsYXNzLCBjLCBjbDsKCgkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHsKCQkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiggaiApIHsKCQkJCWpRdWVyeSggdGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKHRoaXMsIGosIHRoaXMuY2xhc3NOYW1lKSApOwoJCQl9KTsKCQl9CgoJCWlmICggdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiApIHsKCQkJY2xhc3NOYW1lcyA9IHZhbHVlLnNwbGl0KCByc3BhY2UgKTsKCgkJCWZvciAoIGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQllbGVtID0gdGhpc1sgaSBdOwoKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQlpZiAoICFlbGVtLmNsYXNzTmFtZSAmJiBjbGFzc05hbWVzLmxlbmd0aCA9PT0gMSApIHsKCQkJCQkJZWxlbS5jbGFzc05hbWUgPSB2YWx1ZTsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJc2V0Q2xhc3MgPSAiICIgKyBlbGVtLmNsYXNzTmFtZSArICIgIjsKCgkJCQkJCWZvciAoIGMgPSAwLCBjbCA9IGNsYXNzTmFtZXMubGVuZ3RoOyBjIDwgY2w7IGMrKyApIHsKCQkJCQkJCWlmICggIX5zZXRDbGFzcy5pbmRleE9mKCAiICIgKyBjbGFzc05hbWVzWyBjIF0gKyAiICIgKSApIHsKCQkJCQkJCQlzZXRDbGFzcyArPSBjbGFzc05hbWVzWyBjIF0gKyAiICI7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQkJZWxlbS5jbGFzc05hbWUgPSBqUXVlcnkudHJpbSggc2V0Q2xhc3MgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCglyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkgewoJCXZhciBjbGFzc05hbWVzLCBpLCBsLCBlbGVtLCBjbGFzc05hbWUsIGMsIGNsOwoKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCBqICkgewoJCQkJalF1ZXJ5KCB0aGlzICkucmVtb3ZlQ2xhc3MoIHZhbHVlLmNhbGwodGhpcywgaiwgdGhpcy5jbGFzc05hbWUpICk7CgkJCX0pOwoJCX0KCgkJaWYgKCAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIikgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCQkJY2xhc3NOYW1lcyA9ICggdmFsdWUgfHwgIiIgKS5zcGxpdCggcnNwYWNlICk7CgoJCQlmb3IgKCBpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJZWxlbSA9IHRoaXNbIGkgXTsKCgkJCQlpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgZWxlbS5jbGFzc05hbWUgKSB7CgkJCQkJaWYgKCB2YWx1ZSApIHsKCQkJCQkJY2xhc3NOYW1lID0gKCIgIiArIGVsZW0uY2xhc3NOYW1lICsgIiAiKS5yZXBsYWNlKCByY2xhc3MsICIgIiApOwoJCQkJCQlmb3IgKCBjID0gMCwgY2wgPSBjbGFzc05hbWVzLmxlbmd0aDsgYyA8IGNsOyBjKysgKSB7CgkJCQkJCQljbGFzc05hbWUgPSBjbGFzc05hbWUucmVwbGFjZSgiICIgKyBjbGFzc05hbWVzWyBjIF0gKyAiICIsICIgIik7CgkJCQkJCX0KCQkJCQkJZWxlbS5jbGFzc05hbWUgPSBqUXVlcnkudHJpbSggY2xhc3NOYW1lICk7CgoJCQkJCX0gZWxzZSB7CgkJCQkJCWVsZW0uY2xhc3NOYW1lID0gIiI7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJdG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7CgkJdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWUsCgkJCWlzQm9vbCA9IHR5cGVvZiBzdGF0ZVZhbCA9PT0gImJvb2xlYW4iOwoKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCBpICkgewoJCQkJalF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoIHZhbHVlLmNhbGwodGhpcywgaSwgdGhpcy5jbGFzc05hbWUsIHN0YXRlVmFsKSwgc3RhdGVWYWwgKTsKCQkJfSk7CgkJfQoKCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICkgewoJCQkJLy8gdG9nZ2xlIGluZGl2aWR1YWwgY2xhc3MgbmFtZXMKCQkJCXZhciBjbGFzc05hbWUsCgkJCQkJaSA9IDAsCgkJCQkJc2VsZiA9IGpRdWVyeSggdGhpcyApLAoJCQkJCXN0YXRlID0gc3RhdGVWYWwsCgkJCQkJY2xhc3NOYW1lcyA9IHZhbHVlLnNwbGl0KCByc3BhY2UgKTsKCgkJCQl3aGlsZSAoIChjbGFzc05hbWUgPSBjbGFzc05hbWVzWyBpKysgXSkgKSB7CgkJCQkJLy8gY2hlY2sgZWFjaCBjbGFzc05hbWUgZ2l2ZW4sIHNwYWNlIHNlcGVyYXRlZCBsaXN0CgkJCQkJc3RhdGUgPSBpc0Jvb2wgPyBzdGF0ZSA6ICFzZWxmLmhhc0NsYXNzKCBjbGFzc05hbWUgKTsKCQkJCQlzZWxmWyBzdGF0ZSA/ICJhZGRDbGFzcyIgOiAicmVtb3ZlQ2xhc3MiIF0oIGNsYXNzTmFtZSApOwoJCQkJfQoKCQkJfSBlbHNlIGlmICggdHlwZSA9PT0gInVuZGVmaW5lZCIgfHwgdHlwZSA9PT0gImJvb2xlYW4iICkgewoJCQkJaWYgKCB0aGlzLmNsYXNzTmFtZSApIHsKCQkJCQkvLyBzdG9yZSBjbGFzc05hbWUgaWYgc2V0CgkJCQkJalF1ZXJ5Ll9kYXRhKCB0aGlzLCAiX19jbGFzc05hbWVfXyIsIHRoaXMuY2xhc3NOYW1lICk7CgkJCQl9CgoJCQkJLy8gdG9nZ2xlIHdob2xlIGNsYXNzTmFtZQoJCQkJdGhpcy5jbGFzc05hbWUgPSB0aGlzLmNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgPyAiIiA6IGpRdWVyeS5fZGF0YSggdGhpcywgIl9fY2xhc3NOYW1lX18iICkgfHwgIiI7CgkJCX0KCQl9KTsKCX0sCgoJaGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgY2xhc3NOYW1lID0gIiAiICsgc2VsZWN0b3IgKyAiICIsCgkJCWkgPSAwLAoJCQlsID0gdGhpcy5sZW5ndGg7CgkJZm9yICggOyBpIDwgbDsgaSsrICkgewoJCQlpZiAoIHRoaXNbaV0ubm9kZVR5cGUgPT09IDEgJiYgKCIgIiArIHRoaXNbaV0uY2xhc3NOYW1lICsgIiAiKS5yZXBsYWNlKHJjbGFzcywgIiAiKS5pbmRleE9mKCBjbGFzc05hbWUgKSA+IC0xICkgewoJCQkJcmV0dXJuIHRydWU7CgkJCX0KCQl9CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJdmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGhvb2tzLCByZXQsIGlzRnVuY3Rpb24sCgkJCWVsZW0gPSB0aGlzWzBdOwoKCQlpZiAoICFhcmd1bWVudHMubGVuZ3RoICkgewoJCQlpZiAoIGVsZW0gKSB7CgkJCQlob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTsKCgkJCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmIChyZXQgPSBob29rcy5nZXQoIGVsZW0sICJ2YWx1ZSIgKSkgIT09IHVuZGVmaW5lZCApIHsKCQkJCQlyZXR1cm4gcmV0OwoJCQkJfQoKCQkJCXJldCA9IGVsZW0udmFsdWU7CgoJCQkJcmV0dXJuIHR5cGVvZiByZXQgPT09ICJzdHJpbmciID8KCQkJCQkvLyBoYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzCgkJCQkJcmV0LnJlcGxhY2UocnJldHVybiwgIiIpIDoKCQkJCQkvLyBoYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXIKCQkJCQlyZXQgPT0gbnVsbCA/ICIiIDogcmV0OwoJCQl9CgoJCQlyZXR1cm47CgkJfQoKCQlpc0Z1bmN0aW9uID0galF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICk7CgoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oIGkgKSB7CgkJCXZhciBzZWxmID0galF1ZXJ5KHRoaXMpLCB2YWw7CgoJCQlpZiAoIHRoaXMubm9kZVR5cGUgIT09IDEgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCWlmICggaXNGdW5jdGlvbiApIHsKCQkJCXZhbCA9IHZhbHVlLmNhbGwoIHRoaXMsIGksIHNlbGYudmFsKCkgKTsKCQkJfSBlbHNlIHsKCQkJCXZhbCA9IHZhbHVlOwoJCQl9CgoJCQkvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyAiIjsgY29udmVydCBudW1iZXJzIHRvIHN0cmluZwoJCQlpZiAoIHZhbCA9PSBudWxsICkgewoJCQkJdmFsID0gIiI7CgkJCX0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09ICJudW1iZXIiICkgewoJCQkJdmFsICs9ICIiOwoJCQl9IGVsc2UgaWYgKCBqUXVlcnkuaXNBcnJheSggdmFsICkgKSB7CgkJCQl2YWwgPSBqUXVlcnkubWFwKHZhbCwgZnVuY3Rpb24gKCB2YWx1ZSApIHsKCQkJCQlyZXR1cm4gdmFsdWUgPT0gbnVsbCA/ICIiIDogdmFsdWUgKyAiIjsKCQkJCX0pOwoJCQl9CgoJCQlob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTsKCgkJCS8vIElmIHNldCByZXR1cm5zIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIG5vcm1hbCBzZXR0aW5nCgkJCWlmICggIWhvb2tzIHx8ICEoInNldCIgaW4gaG9va3MpIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCAidmFsdWUiICkgPT09IHVuZGVmaW5lZCApIHsKCQkJCXRoaXMudmFsdWUgPSB2YWw7CgkJCX0KCQl9KTsKCX0KfSk7CgpqUXVlcnkuZXh0ZW5kKHsKCXZhbEhvb2tzOiB7CgkJb3B0aW9uOiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQkvLyBhdHRyaWJ1dGVzLnZhbHVlIGlzIHVuZGVmaW5lZCBpbiBCbGFja2JlcnJ5IDQuNyBidXQKCQkJCS8vIHVzZXMgLnZhbHVlLiBTZWUgIzY5MzIKCQkJCXZhciB2YWwgPSBlbGVtLmF0dHJpYnV0ZXMudmFsdWU7CgkJCQlyZXR1cm4gIXZhbCB8fCB2YWwuc3BlY2lmaWVkID8gZWxlbS52YWx1ZSA6IGVsZW0udGV4dDsKCQkJfQoJCX0sCgkJc2VsZWN0OiB7CgkJCWdldDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl2YXIgdmFsdWUsIGksIG1heCwgb3B0aW9uLAoJCQkJCWluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LAoJCQkJCXZhbHVlcyA9IFtdLAoJCQkJCW9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsCgkJCQkJb25lID0gZWxlbS50eXBlID09PSAic2VsZWN0LW9uZSI7CgoJCQkJLy8gTm90aGluZyB3YXMgc2VsZWN0ZWQKCQkJCWlmICggaW5kZXggPCAwICkgewoJCQkJCXJldHVybiBudWxsOwoJCQkJfQoKCQkJCS8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVkIG9wdGlvbnMKCQkJCWkgPSBvbmUgPyBpbmRleCA6IDA7CgkJCQltYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aDsKCQkJCWZvciAoIDsgaSA8IG1heDsgaSsrICkgewoJCQkJCW9wdGlvbiA9IG9wdGlvbnNbIGkgXTsKCgkJCQkJLy8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cAoJCQkJCWlmICggb3B0aW9uLnNlbGVjdGVkICYmIChqUXVlcnkuc3VwcG9ydC5vcHREaXNhYmxlZCA/ICFvcHRpb24uZGlzYWJsZWQgOiBvcHRpb24uZ2V0QXR0cmlidXRlKCJkaXNhYmxlZCIpID09PSBudWxsKSAmJgoJCQkJCQkJKCFvcHRpb24ucGFyZW50Tm9kZS5kaXNhYmxlZCB8fCAhalF1ZXJ5Lm5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgIm9wdGdyb3VwIiApKSApIHsKCgkJCQkJCS8vIEdldCB0aGUgc3BlY2lmaWMgdmFsdWUgZm9yIHRoZSBvcHRpb24KCQkJCQkJdmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpOwoKCQkJCQkJLy8gV2UgZG9uJ3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHMKCQkJCQkJaWYgKCBvbmUgKSB7CgkJCQkJCQlyZXR1cm4gdmFsdWU7CgkJCQkJCX0KCgkJCQkJCS8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5CgkJCQkJCXZhbHVlcy5wdXNoKCB2YWx1ZSApOwoJCQkJCX0KCQkJCX0KCgkJCQkvLyBGaXhlcyBCdWcgIzI1NTEgLS0gc2VsZWN0LnZhbCgpIGJyb2tlbiBpbiBJRSBhZnRlciBmb3JtLnJlc2V0KCkKCQkJCWlmICggb25lICYmICF2YWx1ZXMubGVuZ3RoICYmIG9wdGlvbnMubGVuZ3RoICkgewoJCQkJCXJldHVybiBqUXVlcnkoIG9wdGlvbnNbIGluZGV4IF0gKS52YWwoKTsKCQkJCX0KCgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9LAoKCQkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCQl2YXIgdmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKTsKCgkJCQlqUXVlcnkoZWxlbSkuZmluZCgib3B0aW9uIikuZWFjaChmdW5jdGlvbigpIHsKCQkJCQl0aGlzLnNlbGVjdGVkID0galF1ZXJ5LmluQXJyYXkoIGpRdWVyeSh0aGlzKS52YWwoKSwgdmFsdWVzICkgPj0gMDsKCQkJCX0pOwoKCQkJCWlmICggIXZhbHVlcy5sZW5ndGggKSB7CgkJCQkJZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7CgkJCQl9CgkJCQlyZXR1cm4gdmFsdWVzOwoJCQl9CgkJfQoJfSwKCglhdHRyRm46IHsKCQl2YWw6IHRydWUsCgkJY3NzOiB0cnVlLAoJCWh0bWw6IHRydWUsCgkJdGV4dDogdHJ1ZSwKCQlkYXRhOiB0cnVlLAoJCXdpZHRoOiB0cnVlLAoJCWhlaWdodDogdHJ1ZSwKCQlvZmZzZXQ6IHRydWUKCX0sCgoJYXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBwYXNzICkgewoJCXZhciByZXQsIGhvb2tzLCBub3R4bWwsCgkJCW5UeXBlID0gZWxlbS5ub2RlVHlwZTsKCgkJLy8gZG9uJ3QgZ2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2RlcwoJCWlmICggIWVsZW0gfHwgblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggcGFzcyAmJiBuYW1lIGluIGpRdWVyeS5hdHRyRm4gKSB7CgkJCXJldHVybiBqUXVlcnkoIGVsZW0gKVsgbmFtZSBdKCB2YWx1ZSApOwoJCX0KCgkJLy8gRmFsbGJhY2sgdG8gcHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWQKCQlpZiAoIHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gInVuZGVmaW5lZCIgKSB7CgkJCXJldHVybiBqUXVlcnkucHJvcCggZWxlbSwgbmFtZSwgdmFsdWUgKTsKCQl9CgoJCW5vdHhtbCA9IG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKTsKCgkJLy8gQWxsIGF0dHJpYnV0ZXMgYXJlIGxvd2VyY2FzZQoJCS8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWQKCQlpZiAoIG5vdHhtbCApIHsKCQkJbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKCQkJaG9va3MgPSBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lIF0gfHwgKCByYm9vbGVhbi50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IG5vZGVIb29rICk7CgkJfQoKCQlpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7CgoJCQlpZiAoIHZhbHVlID09PSBudWxsICkgewoJCQkJalF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTsKCQkJCXJldHVybjsKCgkJCX0gZWxzZSBpZiAoIGhvb2tzICYmICJzZXQiIGluIGhvb2tzICYmIG5vdHhtbCAmJiAocmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApKSAhPT0gdW5kZWZpbmVkICkgewoJCQkJcmV0dXJuIHJldDsKCgkJCX0gZWxzZSB7CgkJCQllbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgIiIgKyB2YWx1ZSApOwoJCQkJcmV0dXJuIHZhbHVlOwoJCQl9CgoJCX0gZWxzZSBpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmIG5vdHhtbCAmJiAocmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkpICE9PSBudWxsICkgewoJCQlyZXR1cm4gcmV0OwoKCQl9IGVsc2UgewoKCQkJcmV0ID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTsKCgkJCS8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkCgkJCXJldHVybiByZXQgPT09IG51bGwgPwoJCQkJdW5kZWZpbmVkIDoKCQkJCXJldDsKCQl9Cgl9LAoKCXJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQl2YXIgcHJvcE5hbWUsIGF0dHJOYW1lcywgbmFtZSwgbCwgaXNCb29sLAoJCQlpID0gMDsKCgkJaWYgKCB2YWx1ZSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCQlhdHRyTmFtZXMgPSB2YWx1ZS50b0xvd2VyQ2FzZSgpLnNwbGl0KCByc3BhY2UgKTsKCQkJbCA9IGF0dHJOYW1lcy5sZW5ndGg7CgoJCQlmb3IgKCA7IGkgPCBsOyBpKysgKSB7CgkJCQluYW1lID0gYXR0ck5hbWVzWyBpIF07CgoJCQkJaWYgKCBuYW1lICkgewoJCQkJCXByb3BOYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lOwoJCQkJCWlzQm9vbCA9IHJib29sZWFuLnRlc3QoIG5hbWUgKTsKCgkJCQkJLy8gU2VlICM5Njk5IGZvciBleHBsYW5hdGlvbiBvZiB0aGlzIGFwcHJvYWNoIChzZXR0aW5nIGZpcnN0LCB0aGVuIHJlbW92YWwpCgkJCQkJLy8gRG8gbm90IGRvIHRoaXMgZm9yIGJvb2xlYW4gYXR0cmlidXRlcyAoc2VlICMxMDg3MCkKCQkJCQlpZiAoICFpc0Jvb2wgKSB7CgkJCQkJCWpRdWVyeS5hdHRyKCBlbGVtLCBuYW1lLCAiIiApOwoJCQkJCX0KCQkJCQllbGVtLnJlbW92ZUF0dHJpYnV0ZSggZ2V0U2V0QXR0cmlidXRlID8gbmFtZSA6IHByb3BOYW1lICk7CgoJCQkJCS8vIFNldCBjb3JyZXNwb25kaW5nIHByb3BlcnR5IHRvIGZhbHNlIGZvciBib29sZWFuIGF0dHJpYnV0ZXMKCQkJCQlpZiAoIGlzQm9vbCAmJiBwcm9wTmFtZSBpbiBlbGVtICkgewoJCQkJCQllbGVtWyBwcm9wTmFtZSBdID0gZmFsc2U7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJfSwKCglhdHRySG9va3M6IHsKCQl0eXBlOiB7CgkJCXNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkgewoJCQkJLy8gV2UgY2FuJ3QgYWxsb3cgdGhlIHR5cGUgcHJvcGVydHkgdG8gYmUgY2hhbmdlZCAoc2luY2UgaXQgY2F1c2VzIHByb2JsZW1zIGluIElFKQoJCQkJaWYgKCBydHlwZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgZWxlbS5wYXJlbnROb2RlICkgewoJCQkJCWpRdWVyeS5lcnJvciggInR5cGUgcHJvcGVydHkgY2FuJ3QgYmUgY2hhbmdlZCIgKTsKCQkJCX0gZWxzZSBpZiAoICFqUXVlcnkuc3VwcG9ydC5yYWRpb1ZhbHVlICYmIHZhbHVlID09PSAicmFkaW8iICYmIGpRdWVyeS5ub2RlTmFtZShlbGVtLCAiaW5wdXQiKSApIHsKCQkJCQkvLyBTZXR0aW5nIHRoZSB0eXBlIG9uIGEgcmFkaW8gYnV0dG9uIGFmdGVyIHRoZSB2YWx1ZSByZXNldHMgdGhlIHZhbHVlIGluIElFNi05CgkJCQkJLy8gUmVzZXQgdmFsdWUgdG8gaXQncyBkZWZhdWx0IGluIGNhc2UgdHlwZSBpcyBzZXQgYWZ0ZXIgdmFsdWUKCQkJCQkvLyBUaGlzIGlzIGZvciBlbGVtZW50IGNyZWF0aW9uCgkJCQkJdmFyIHZhbCA9IGVsZW0udmFsdWU7CgkJCQkJZWxlbS5zZXRBdHRyaWJ1dGUoICJ0eXBlIiwgdmFsdWUgKTsKCQkJCQlpZiAoIHZhbCApIHsKCQkJCQkJZWxlbS52YWx1ZSA9IHZhbDsKCQkJCQl9CgkJCQkJcmV0dXJuIHZhbHVlOwoJCQkJfQoJCQl9CgkJfSwKCQkvLyBVc2UgdGhlIHZhbHVlIHByb3BlcnR5IGZvciBiYWNrIGNvbXBhdAoJCS8vIFVzZSB0aGUgbm9kZUhvb2sgZm9yIGJ1dHRvbiBlbGVtZW50cyBpbiBJRTYvNyAoIzE5NTQpCgkJdmFsdWU6IHsKCQkJZ2V0OiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHsKCQkJCWlmICggbm9kZUhvb2sgJiYgalF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCAiYnV0dG9uIiApICkgewoJCQkJCXJldHVybiBub2RlSG9vay5nZXQoIGVsZW0sIG5hbWUgKTsKCQkJCX0KCQkJCXJldHVybiBuYW1lIGluIGVsZW0gPwoJCQkJCWVsZW0udmFsdWUgOgoJCQkJCW51bGw7CgkJCX0sCgkJCXNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkgewoJCQkJaWYgKCBub2RlSG9vayAmJiBqUXVlcnkubm9kZU5hbWUoIGVsZW0sICJidXR0b24iICkgKSB7CgkJCQkJcmV0dXJuIG5vZGVIb29rLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKTsKCQkJCX0KCQkJCS8vIERvZXMgbm90IHJldHVybiBzbyB0aGF0IHNldEF0dHJpYnV0ZSBpcyBhbHNvIHVzZWQKCQkJCWVsZW0udmFsdWUgPSB2YWx1ZTsKCQkJfQoJCX0KCX0sCgoJcHJvcEZpeDogewoJCXRhYmluZGV4OiAidGFiSW5kZXgiLAoJCXJlYWRvbmx5OiAicmVhZE9ubHkiLAoJCSJmb3IiOiAiaHRtbEZvciIsCgkJImNsYXNzIjogImNsYXNzTmFtZSIsCgkJbWF4bGVuZ3RoOiAibWF4TGVuZ3RoIiwKCQljZWxsc3BhY2luZzogImNlbGxTcGFjaW5nIiwKCQljZWxscGFkZGluZzogImNlbGxQYWRkaW5nIiwKCQlyb3dzcGFuOiAicm93U3BhbiIsCgkJY29sc3BhbjogImNvbFNwYW4iLAoJCXVzZW1hcDogInVzZU1hcCIsCgkJZnJhbWVib3JkZXI6ICJmcmFtZUJvcmRlciIsCgkJY29udGVudGVkaXRhYmxlOiAiY29udGVudEVkaXRhYmxlIgoJfSwKCglwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7CgkJdmFyIHJldCwgaG9va3MsIG5vdHhtbCwKCQkJblR5cGUgPSBlbGVtLm5vZGVUeXBlOwoKCQkvLyBkb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzCgkJaWYgKCAhZWxlbSB8fCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJbm90eG1sID0gblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApOwoKCQlpZiAoIG5vdHhtbCApIHsKCQkJLy8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rcwoJCQluYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lOwoJCQlob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTsKCQl9CgoJCWlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQkJaWYgKCBob29rcyAmJiAic2V0IiBpbiBob29rcyAmJiAocmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApKSAhPT0gdW5kZWZpbmVkICkgewoJCQkJcmV0dXJuIHJldDsKCgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApOwoJCQl9CgoJCX0gZWxzZSB7CgkJCWlmICggaG9va3MgJiYgImdldCIgaW4gaG9va3MgJiYgKHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApKSAhPT0gbnVsbCApIHsKCQkJCXJldHVybiByZXQ7CgoJCQl9IGVsc2UgewoJCQkJcmV0dXJuIGVsZW1bIG5hbWUgXTsKCQkJfQoJCX0KCX0sCgoJcHJvcEhvb2tzOiB7CgkJdGFiSW5kZXg6IHsKCQkJZ2V0OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCS8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZSBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhwbGljaXRseSBzZXQKCQkJCS8vIGh0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvCgkJCQl2YXIgYXR0cmlidXRlTm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSgidGFiaW5kZXgiKTsKCgkJCQlyZXR1cm4gYXR0cmlidXRlTm9kZSAmJiBhdHRyaWJ1dGVOb2RlLnNwZWNpZmllZCA/CgkJCQkJcGFyc2VJbnQoIGF0dHJpYnV0ZU5vZGUudmFsdWUsIDEwICkgOgoJCQkJCXJmb2N1c2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApIHx8IHJjbGlja2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmIGVsZW0uaHJlZiA/CgkJCQkJCTAgOgoJCQkJCQl1bmRlZmluZWQ7CgkJCX0KCQl9Cgl9Cn0pOwoKLy8gQWRkIHRoZSB0YWJJbmRleCBwcm9wSG9vayB0byBhdHRySG9va3MgZm9yIGJhY2stY29tcGF0IChkaWZmZXJlbnQgY2FzZSBpcyBpbnRlbnRpb25hbCkKalF1ZXJ5LmF0dHJIb29rcy50YWJpbmRleCA9IGpRdWVyeS5wcm9wSG9va3MudGFiSW5kZXg7CgovLyBIb29rIGZvciBib29sZWFuIGF0dHJpYnV0ZXMKYm9vbEhvb2sgPSB7CglnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkgewoJCS8vIEFsaWduIGJvb2xlYW4gYXR0cmlidXRlcyB3aXRoIGNvcnJlc3BvbmRpbmcgcHJvcGVydGllcwoJCS8vIEZhbGwgYmFjayB0byBhdHRyaWJ1dGUgcHJlc2VuY2Ugd2hlcmUgc29tZSBib29sZWFucyBhcmUgbm90IHN1cHBvcnRlZAoJCXZhciBhdHRyTm9kZSwKCQkJcHJvcGVydHkgPSBqUXVlcnkucHJvcCggZWxlbSwgbmFtZSApOwoJCXJldHVybiBwcm9wZXJ0eSA9PT0gdHJ1ZSB8fCB0eXBlb2YgcHJvcGVydHkgIT09ICJib29sZWFuIiAmJiAoIGF0dHJOb2RlID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpICkgJiYgYXR0ck5vZGUubm9kZVZhbHVlICE9PSBmYWxzZSA/CgkJCW5hbWUudG9Mb3dlckNhc2UoKSA6CgkJCXVuZGVmaW5lZDsKCX0sCglzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgbmFtZSApIHsKCQl2YXIgcHJvcE5hbWU7CgkJaWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7CgkJCS8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2UKCQkJalF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTsKCQl9IGVsc2UgewoJCQkvLyB2YWx1ZSBpcyB0cnVlIHNpbmNlIHdlIGtub3cgYXQgdGhpcyBwb2ludCBpdCdzIHR5cGUgYm9vbGVhbiBhbmQgbm90IGZhbHNlCgkJCS8vIFNldCBib29sZWFuIGF0dHJpYnV0ZXMgdG8gdGhlIHNhbWUgbmFtZSBhbmQgc2V0IHRoZSBET00gcHJvcGVydHkKCQkJcHJvcE5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7CgkJCWlmICggcHJvcE5hbWUgaW4gZWxlbSApIHsKCQkJCS8vIE9ubHkgc2V0IHRoZSBJREwgc3BlY2lmaWNhbGx5IGlmIGl0IGFscmVhZHkgZXhpc3RzIG9uIHRoZSBlbGVtZW50CgkJCQllbGVtWyBwcm9wTmFtZSBdID0gdHJ1ZTsKCQkJfQoKCQkJZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSApOwoJCX0KCQlyZXR1cm4gbmFtZTsKCX0KfTsKCi8vIElFNi83IGRvIG5vdCBzdXBwb3J0IGdldHRpbmcvc2V0dGluZyBzb21lIGF0dHJpYnV0ZXMgd2l0aCBnZXQvc2V0QXR0cmlidXRlCmlmICggIWdldFNldEF0dHJpYnV0ZSApIHsKCglmaXhTcGVjaWZpZWQgPSB7CgkJbmFtZTogdHJ1ZSwKCQlpZDogdHJ1ZSwKCQljb29yZHM6IHRydWUKCX07CgoJLy8gVXNlIHRoaXMgZm9yIGFueSBhdHRyaWJ1dGUgaW4gSUU2LzcKCS8vIFRoaXMgZml4ZXMgYWxtb3N0IGV2ZXJ5IElFNi83IGlzc3VlCglub2RlSG9vayA9IGpRdWVyeS52YWxIb29rcy5idXR0b24gPSB7CgkJZ2V0OiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHsKCQkJdmFyIHJldDsKCQkJcmV0ID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICk7CgkJCXJldHVybiByZXQgJiYgKCBmaXhTcGVjaWZpZWRbIG5hbWUgXSA/IHJldC5ub2RlVmFsdWUgIT09ICIiIDogcmV0LnNwZWNpZmllZCApID8KCQkJCXJldC5ub2RlVmFsdWUgOgoJCQkJdW5kZWZpbmVkOwoJCX0sCgkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7CgkJCS8vIFNldCB0aGUgZXhpc3Rpbmcgb3IgY3JlYXRlIGEgbmV3IGF0dHJpYnV0ZSBub2RlCgkJCXZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKTsKCQkJaWYgKCAhcmV0ICkgewoJCQkJcmV0ID0gZG9jdW1lbnQuY3JlYXRlQXR0cmlidXRlKCBuYW1lICk7CgkJCQllbGVtLnNldEF0dHJpYnV0ZU5vZGUoIHJldCApOwoJCQl9CgkJCXJldHVybiAoIHJldC5ub2RlVmFsdWUgPSB2YWx1ZSArICIiICk7CgkJfQoJfTsKCgkvLyBBcHBseSB0aGUgbm9kZUhvb2sgdG8gdGFiaW5kZXgKCWpRdWVyeS5hdHRySG9va3MudGFiaW5kZXguc2V0ID0gbm9kZUhvb2suc2V0OwoKCS8vIFNldCB3aWR0aCBhbmQgaGVpZ2h0IHRvIGF1dG8gaW5zdGVhZCBvZiAwIG9uIGVtcHR5IHN0cmluZyggQnVnICM4MTUwICkKCS8vIFRoaXMgaXMgZm9yIHJlbW92YWxzCglqUXVlcnkuZWFjaChbICJ3aWR0aCIsICJoZWlnaHQiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkgewoJCWpRdWVyeS5hdHRySG9va3NbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGpRdWVyeS5hdHRySG9va3NbIG5hbWUgXSwgewoJCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJCWlmICggdmFsdWUgPT09ICIiICkgewoJCQkJCWVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCAiYXV0byIgKTsKCQkJCQlyZXR1cm4gdmFsdWU7CgkJCQl9CgkJCX0KCQl9KTsKCX0pOwoKCS8vIFNldCBjb250ZW50ZWRpdGFibGUgdG8gZmFsc2Ugb24gcmVtb3ZhbHMoIzEwNDI5KQoJLy8gU2V0dGluZyB0byBlbXB0eSBzdHJpbmcgdGhyb3dzIGFuIGVycm9yIGFzIGFuIGludmFsaWQgdmFsdWUKCWpRdWVyeS5hdHRySG9va3MuY29udGVudGVkaXRhYmxlID0gewoJCWdldDogbm9kZUhvb2suZ2V0LAoJCXNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkgewoJCQlpZiAoIHZhbHVlID09PSAiIiApIHsKCQkJCXZhbHVlID0gImZhbHNlIjsKCQkJfQoJCQlub2RlSG9vay5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICk7CgkJfQoJfTsKfQoKCi8vIFNvbWUgYXR0cmlidXRlcyByZXF1aXJlIGEgc3BlY2lhbCBjYWxsIG9uIElFCmlmICggIWpRdWVyeS5zdXBwb3J0LmhyZWZOb3JtYWxpemVkICkgewoJalF1ZXJ5LmVhY2goWyAiaHJlZiIsICJzcmMiLCAid2lkdGgiLCAiaGVpZ2h0IiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHsKCQlqUXVlcnkuYXR0ckhvb2tzWyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lIF0sIHsKCQkJZ2V0OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCXZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgMiApOwoJCQkJcmV0dXJuIHJldCA9PT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJldDsKCQkJfQoJCX0pOwoJfSk7Cn0KCmlmICggIWpRdWVyeS5zdXBwb3J0LnN0eWxlICkgewoJalF1ZXJ5LmF0dHJIb29rcy5zdHlsZSA9IHsKCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQkvLyBSZXR1cm4gdW5kZWZpbmVkIGluIHRoZSBjYXNlIG9mIGVtcHR5IHN0cmluZwoJCQkvLyBOb3JtYWxpemUgdG8gbG93ZXJjYXNlIHNpbmNlIElFIHVwcGVyY2FzZXMgY3NzIHByb3BlcnR5IG5hbWVzCgkJCXJldHVybiBlbGVtLnN0eWxlLmNzc1RleHQudG9Mb3dlckNhc2UoKSB8fCB1bmRlZmluZWQ7CgkJfSwKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJcmV0dXJuICggZWxlbS5zdHlsZS5jc3NUZXh0ID0gIiIgKyB2YWx1ZSApOwoJCX0KCX07Cn0KCi8vIFNhZmFyaSBtaXMtcmVwb3J0cyB0aGUgZGVmYXVsdCBzZWxlY3RlZCBwcm9wZXJ0eSBvZiBhbiBvcHRpb24KLy8gQWNjZXNzaW5nIHRoZSBwYXJlbnQncyBzZWxlY3RlZEluZGV4IHByb3BlcnR5IGZpeGVzIGl0CmlmICggIWpRdWVyeS5zdXBwb3J0Lm9wdFNlbGVjdGVkICkgewoJalF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IGpRdWVyeS5leHRlbmQoIGpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQsIHsKCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlOwoKCQkJaWYgKCBwYXJlbnQgKSB7CgkJCQlwYXJlbnQuc2VsZWN0ZWRJbmRleDsKCgkJCQkvLyBNYWtlIHN1cmUgdGhhdCBpdCBhbHNvIHdvcmtzIHdpdGggb3B0Z3JvdXBzLCBzZWUgIzU3MDEKCQkJCWlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7CgkJCQkJcGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gbnVsbDsKCQl9Cgl9KTsKfQoKLy8gSUU2LzcgY2FsbCBlbmN0eXBlIGVuY29kaW5nCmlmICggIWpRdWVyeS5zdXBwb3J0LmVuY3R5cGUgKSB7CglqUXVlcnkucHJvcEZpeC5lbmN0eXBlID0gImVuY29kaW5nIjsKfQoKLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXIKaWYgKCAhalF1ZXJ5LnN1cHBvcnQuY2hlY2tPbiApIHsKCWpRdWVyeS5lYWNoKFsgInJhZGlvIiwgImNoZWNrYm94IiBdLCBmdW5jdGlvbigpIHsKCQlqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IHsKCQkJZ2V0OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJCS8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBpbiBXZWJraXQgIiIgaXMgcmV0dXJuZWQgaW5zdGVhZCBvZiAib24iIGlmIGEgdmFsdWUgaXNuJ3Qgc3BlY2lmaWVkCgkJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoInZhbHVlIikgPT09IG51bGwgPyAib24iIDogZWxlbS52YWx1ZTsKCQkJfQoJCX07Cgl9KTsKfQpqUXVlcnkuZWFjaChbICJyYWRpbyIsICJjaGVja2JveCIgXSwgZnVuY3Rpb24oKSB7CglqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IGpRdWVyeS5leHRlbmQoIGpRdWVyeS52YWxIb29rc1sgdGhpcyBdLCB7CgkJc2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7CgkJCWlmICggalF1ZXJ5LmlzQXJyYXkoIHZhbHVlICkgKSB7CgkJCQlyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSggalF1ZXJ5KGVsZW0pLnZhbCgpLCB2YWx1ZSApID49IDAgKTsKCQkJfQoJCX0KCX0pOwp9KTsKCgoKCnZhciByZm9ybUVsZW1zID0gL14oPzp0ZXh0YXJlYXxpbnB1dHxzZWxlY3QpJC9pLAoJcnR5cGVuYW1lc3BhY2UgPSAvXihbXlwuXSopPyg/OlwuKC4rKSk/JC8sCglyaG92ZXJIYWNrID0gLyg/Ol58XHMpaG92ZXIoXC5cUyspP1xiLywKCXJrZXlFdmVudCA9IC9ea2V5LywKCXJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxjb250ZXh0bWVudSl8Y2xpY2svLAoJcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sCglycXVpY2tJcyA9IC9eKFx3KikoPzojKFtcd1wtXSspKT8oPzpcLihbXHdcLV0rKSk/JC8sCglxdWlja1BhcnNlID0gZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXZhciBxdWljayA9IHJxdWlja0lzLmV4ZWMoIHNlbGVjdG9yICk7CgkJaWYgKCBxdWljayApIHsKCQkJLy8gICAwICAxICAgIDIgICAzCgkJCS8vIFsgXywgdGFnLCBpZCwgY2xhc3MgXQoJCQlxdWlja1sxXSA9ICggcXVpY2tbMV0gfHwgIiIgKS50b0xvd2VyQ2FzZSgpOwoJCQlxdWlja1szXSA9IHF1aWNrWzNdICYmIG5ldyBSZWdFeHAoICIoPzpefFxccykiICsgcXVpY2tbM10gKyAiKD86XFxzfCQpIiApOwoJCX0KCQlyZXR1cm4gcXVpY2s7Cgl9LAoJcXVpY2tJcyA9IGZ1bmN0aW9uKCBlbGVtLCBtICkgewoJCXZhciBhdHRycyA9IGVsZW0uYXR0cmlidXRlcyB8fCB7fTsKCQlyZXR1cm4gKAoJCQkoIW1bMV0gfHwgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBtWzFdKSAmJgoJCQkoIW1bMl0gfHwgKGF0dHJzLmlkIHx8IHt9KS52YWx1ZSA9PT0gbVsyXSkgJiYKCQkJKCFtWzNdIHx8IG1bM10udGVzdCggKGF0dHJzWyAiY2xhc3MiIF0gfHwge30pLnZhbHVlICkpCgkJKTsKCX0sCglob3ZlckhhY2sgPSBmdW5jdGlvbiggZXZlbnRzICkgewoJCXJldHVybiBqUXVlcnkuZXZlbnQuc3BlY2lhbC5ob3ZlciA/IGV2ZW50cyA6IGV2ZW50cy5yZXBsYWNlKCByaG92ZXJIYWNrLCAibW91c2VlbnRlciQxIG1vdXNlbGVhdmUkMSIgKTsKCX07CgovKgogKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuCiAqIFByb3BzIHRvIERlYW4gRWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMuCiAqLwpqUXVlcnkuZXZlbnQgPSB7CgoJYWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkgewoKCQl2YXIgZWxlbURhdGEsIGV2ZW50SGFuZGxlLCBldmVudHMsCgkJCXQsIHRucywgdHlwZSwgbmFtZXNwYWNlcywgaGFuZGxlT2JqLAoJCQloYW5kbGVPYmpJbiwgcXVpY2ssIGhhbmRsZXJzLCBzcGVjaWFsOwoKCQkvLyBEb24ndCBhdHRhY2ggZXZlbnRzIHRvIG5vRGF0YSBvciB0ZXh0L2NvbW1lbnQgbm9kZXMgKGFsbG93IHBsYWluIG9iamVjdHMgdGhvKQoJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICF0eXBlcyB8fCAhaGFuZGxlciB8fCAhKGVsZW1EYXRhID0galF1ZXJ5Ll9kYXRhKCBlbGVtICkpICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXIKCQlpZiAoIGhhbmRsZXIuaGFuZGxlciApIHsKCQkJaGFuZGxlT2JqSW4gPSBoYW5kbGVyOwoJCQloYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjsKCQkJc2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3RvcjsKCQl9CgoJCS8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlcgoJCWlmICggIWhhbmRsZXIuZ3VpZCApIHsKCQkJaGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKzsKCQl9CgoJCS8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3QKCQlldmVudHMgPSBlbGVtRGF0YS5ldmVudHM7CgkJaWYgKCAhZXZlbnRzICkgewoJCQllbGVtRGF0YS5ldmVudHMgPSBldmVudHMgPSB7fTsKCQl9CgkJZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGU7CgkJaWYgKCAhZXZlbnRIYW5kbGUgKSB7CgkJCWVsZW1EYXRhLmhhbmRsZSA9IGV2ZW50SGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7CgkJCQkvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZAoJCQkJLy8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZAoJCQkJcmV0dXJuIHR5cGVvZiBqUXVlcnkgIT09ICJ1bmRlZmluZWQiICYmICghZSB8fCBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUpID8KCQkJCQlqUXVlcnkuZXZlbnQuZGlzcGF0Y2guYXBwbHkoIGV2ZW50SGFuZGxlLmVsZW0sIGFyZ3VtZW50cyApIDoKCQkJCQl1bmRlZmluZWQ7CgkJCX07CgkJCS8vIEFkZCBlbGVtIGFzIGEgcHJvcGVydHkgb2YgdGhlIGhhbmRsZSBmbiB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWsgd2l0aCBJRSBub24tbmF0aXZlIGV2ZW50cwoJCQlldmVudEhhbmRsZS5lbGVtID0gZWxlbTsKCQl9CgoJCS8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2UKCQkvLyBqUXVlcnkoLi4uKS5iaW5kKCJtb3VzZW92ZXIgbW91c2VvdXQiLCBmbik7CgkJdHlwZXMgPSBqUXVlcnkudHJpbSggaG92ZXJIYWNrKHR5cGVzKSApLnNwbGl0KCAiICIgKTsKCQlmb3IgKCB0ID0gMDsgdCA8IHR5cGVzLmxlbmd0aDsgdCsrICkgewoKCQkJdG5zID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbdF0gKSB8fCBbXTsKCQkJdHlwZSA9IHRuc1sxXTsKCQkJbmFtZXNwYWNlcyA9ICggdG5zWzJdIHx8ICIiICkuc3BsaXQoICIuIiApLnNvcnQoKTsKCgkJCS8vIElmIGV2ZW50IGNoYW5nZXMgaXRzIHR5cGUsIHVzZSB0aGUgc3BlY2lhbCBldmVudCBoYW5kbGVycyBmb3IgdGhlIGNoYW5nZWQgdHlwZQoJCQlzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTsKCgkJCS8vIElmIHNlbGVjdG9yIGRlZmluZWQsIGRldGVybWluZSBzcGVjaWFsIGV2ZW50IGFwaSB0eXBlLCBvdGhlcndpc2UgZ2l2ZW4gdHlwZQoJCQl0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7CgoJCQkvLyBVcGRhdGUgc3BlY2lhbCBiYXNlZCBvbiBuZXdseSByZXNldCB0eXBlCgkJCXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9OwoKCQkJLy8gaGFuZGxlT2JqIGlzIHBhc3NlZCB0byBhbGwgZXZlbnQgaGFuZGxlcnMKCQkJaGFuZGxlT2JqID0galF1ZXJ5LmV4dGVuZCh7CgkJCQl0eXBlOiB0eXBlLAoJCQkJb3JpZ1R5cGU6IHRuc1sxXSwKCQkJCWRhdGE6IGRhdGEsCgkJCQloYW5kbGVyOiBoYW5kbGVyLAoJCQkJZ3VpZDogaGFuZGxlci5ndWlkLAoJCQkJc2VsZWN0b3I6IHNlbGVjdG9yLAoJCQkJcXVpY2s6IHNlbGVjdG9yICYmIHF1aWNrUGFyc2UoIHNlbGVjdG9yICksCgkJCQluYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbigiLiIpCgkJCX0sIGhhbmRsZU9iakluICk7CgoJCQkvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdAoJCQloYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdOwoJCQlpZiAoICFoYW5kbGVycyApIHsKCQkJCWhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTsKCQkJCWhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAwOwoKCQkJCS8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIvYXR0YWNoRXZlbnQgaWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZQoJCQkJaWYgKCAhc3BlY2lhbC5zZXR1cCB8fCBzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkgewoJCQkJCS8vIEJpbmQgdGhlIGdsb2JhbCBldmVudCBoYW5kbGVyIHRvIHRoZSBlbGVtZW50CgkJCQkJaWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7CgkJCQkJCWVsZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUsIGZhbHNlICk7CgoJCQkJCX0gZWxzZSBpZiAoIGVsZW0uYXR0YWNoRXZlbnQgKSB7CgkJCQkJCWVsZW0uYXR0YWNoRXZlbnQoICJvbiIgKyB0eXBlLCBldmVudEhhbmRsZSApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJaWYgKCBzcGVjaWFsLmFkZCApIHsKCQkJCXNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApOwoKCQkJCWlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7CgkJCQkJaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDsKCQkJCX0KCQkJfQoKCQkJLy8gQWRkIHRvIHRoZSBlbGVtZW50J3MgaGFuZGxlciBsaXN0LCBkZWxlZ2F0ZXMgaW4gZnJvbnQKCQkJaWYgKCBzZWxlY3RvciApIHsKCQkJCWhhbmRsZXJzLnNwbGljZSggaGFuZGxlcnMuZGVsZWdhdGVDb3VudCsrLCAwLCBoYW5kbGVPYmogKTsKCQkJfSBlbHNlIHsKCQkJCWhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApOwoJCQl9CgoJCQkvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uCgkJCWpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7CgkJfQoKCQkvLyBOdWxsaWZ5IGVsZW0gdG8gcHJldmVudCBtZW1vcnkgbGVha3MgaW4gSUUKCQllbGVtID0gbnVsbDsKCX0sCgoJZ2xvYmFsOiB7fSwKCgkvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnQKCXJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7CgoJCXZhciBlbGVtRGF0YSA9IGpRdWVyeS5oYXNEYXRhKCBlbGVtICkgJiYgalF1ZXJ5Ll9kYXRhKCBlbGVtICksCgkJCXQsIHRucywgdHlwZSwgb3JpZ1R5cGUsIG5hbWVzcGFjZXMsIG9yaWdDb3VudCwKCQkJaiwgZXZlbnRzLCBzcGVjaWFsLCBoYW5kbGUsIGV2ZW50VHlwZSwgaGFuZGxlT2JqOwoKCQlpZiAoICFlbGVtRGF0YSB8fCAhKGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cykgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWQKCQl0eXBlcyA9IGpRdWVyeS50cmltKCBob3ZlckhhY2soIHR5cGVzIHx8ICIiICkgKS5zcGxpdCgiICIpOwoJCWZvciAoIHQgPSAwOyB0IDwgdHlwZXMubGVuZ3RoOyB0KysgKSB7CgkJCXRucyA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzW3RdICkgfHwgW107CgkJCXR5cGUgPSBvcmlnVHlwZSA9IHRuc1sxXTsKCQkJbmFtZXNwYWNlcyA9IHRuc1syXTsKCgkJCS8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJvdmlkZWQpIGZvciB0aGUgZWxlbWVudAoJCQlpZiAoICF0eXBlICkgewoJCQkJZm9yICggdHlwZSBpbiBldmVudHMgKSB7CgkJCQkJalF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVlICk7CgkJCQl9CgkJCQljb250aW51ZTsKCQkJfQoKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307CgkJCXR5cGUgPSAoIHNlbGVjdG9yPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlOwoJCQlldmVudFR5cGUgPSBldmVudHNbIHR5cGUgXSB8fCBbXTsKCQkJb3JpZ0NvdW50ID0gZXZlbnRUeXBlLmxlbmd0aDsKCQkJbmFtZXNwYWNlcyA9IG5hbWVzcGFjZXMgPyBuZXcgUmVnRXhwKCIoXnxcXC4pIiArIG5hbWVzcGFjZXMuc3BsaXQoIi4iKS5zb3J0KCkuam9pbigiXFwuKD86LipcXC4pPyIpICsgIihcXC58JCkiKSA6IG51bGw7CgoJCQkvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzCgkJCWZvciAoIGogPSAwOyBqIDwgZXZlbnRUeXBlLmxlbmd0aDsgaisrICkgewoJCQkJaGFuZGxlT2JqID0gZXZlbnRUeXBlWyBqIF07CgoJCQkJaWYgKCAoIG1hcHBlZFR5cGVzIHx8IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJgoJCQkJCSAoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJgoJCQkJCSAoICFuYW1lc3BhY2VzIHx8IG5hbWVzcGFjZXMudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiYKCQkJCQkgKCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gIioqIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHsKCQkJCQlldmVudFR5cGUuc3BsaWNlKCBqLS0sIDEgKTsKCgkJCQkJaWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7CgkJCQkJCWV2ZW50VHlwZS5kZWxlZ2F0ZUNvdW50LS07CgkJCQkJfQoJCQkJCWlmICggc3BlY2lhbC5yZW1vdmUgKSB7CgkJCQkJCXNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdAoJCQkvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycykKCQkJaWYgKCBldmVudFR5cGUubGVuZ3RoID09PSAwICYmIG9yaWdDb3VudCAhPT0gZXZlbnRUeXBlLmxlbmd0aCApIHsKCQkJCWlmICggIXNwZWNpYWwudGVhcmRvd24gfHwgc3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzICkgPT09IGZhbHNlICkgewoJCQkJCWpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZWxlbURhdGEuaGFuZGxlICk7CgkJCQl9CgoJCQkJZGVsZXRlIGV2ZW50c1sgdHlwZSBdOwoJCQl9CgkJfQoKCQkvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZAoJCWlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkgewoJCQloYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGU7CgkJCWlmICggaGFuZGxlICkgewoJCQkJaGFuZGxlLmVsZW0gPSBudWxsOwoJCQl9CgoJCQkvLyByZW1vdmVEYXRhIGFsc28gY2hlY2tzIGZvciBlbXB0aW5lc3MgYW5kIGNsZWFycyB0aGUgZXhwYW5kbyBpZiBlbXB0eQoJCQkvLyBzbyB1c2UgaXQgaW5zdGVhZCBvZiBkZWxldGUKCQkJalF1ZXJ5LnJlbW92ZURhdGEoIGVsZW0sIFsgImV2ZW50cyIsICJoYW5kbGUiIF0sIHRydWUgKTsKCQl9Cgl9LAoKCS8vIEV2ZW50cyB0aGF0IGFyZSBzYWZlIHRvIHNob3J0LWNpcmN1aXQgaWYgbm8gaGFuZGxlcnMgYXJlIGF0dGFjaGVkLgoJLy8gTmF0aXZlIERPTSBldmVudHMgc2hvdWxkIG5vdCBiZSBhZGRlZCwgdGhleSBtYXkgaGF2ZSBpbmxpbmUgaGFuZGxlcnMuCgljdXN0b21FdmVudDogewoJCSJnZXREYXRhIjogdHJ1ZSwKCQkic2V0RGF0YSI6IHRydWUsCgkJImNoYW5nZURhdGEiOiB0cnVlCgl9LAoKCXRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkgewoJCS8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzCgkJaWYgKCBlbGVtICYmIChlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDgpICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBFdmVudCBvYmplY3Qgb3IgZXZlbnQgdHlwZQoJCXZhciB0eXBlID0gZXZlbnQudHlwZSB8fCBldmVudCwKCQkJbmFtZXNwYWNlcyA9IFtdLAoJCQljYWNoZSwgZXhjbHVzaXZlLCBpLCBjdXIsIG9sZCwgb250eXBlLCBzcGVjaWFsLCBoYW5kbGUsIGV2ZW50UGF0aCwgYnViYmxlVHlwZTsKCgkJLy8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93CgkJaWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIHR5cGUuaW5kZXhPZiggIiEiICkgPj0gMCApIHsKCQkJLy8gRXhjbHVzaXZlIGV2ZW50cyB0cmlnZ2VyIG9ubHkgZm9yIHRoZSBleGFjdCBldmVudCAobm8gbmFtZXNwYWNlcykKCQkJdHlwZSA9IHR5cGUuc2xpY2UoMCwgLTEpOwoJCQlleGNsdXNpdmUgPSB0cnVlOwoJCX0KCgkJaWYgKCB0eXBlLmluZGV4T2YoICIuIiApID49IDAgKSB7CgkJCS8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKCkKCQkJbmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoIi4iKTsKCQkJdHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTsKCQkJbmFtZXNwYWNlcy5zb3J0KCk7CgkJfQoKCQlpZiAoICghZWxlbSB8fCBqUXVlcnkuZXZlbnQuY3VzdG9tRXZlbnRbIHR5cGUgXSkgJiYgIWpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSApIHsKCQkJLy8gTm8galF1ZXJ5IGhhbmRsZXJzIGZvciB0aGlzIGV2ZW50IHR5cGUsIGFuZCBpdCBjYW4ndCBoYXZlIGlubGluZSBoYW5kbGVycwoJCQlyZXR1cm47CgkJfQoKCQkvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gRXZlbnQsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZwoJCWV2ZW50ID0gdHlwZW9mIGV2ZW50ID09PSAib2JqZWN0IiA/CgkJCS8vIGpRdWVyeS5FdmVudCBvYmplY3QKCQkJZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gPyBldmVudCA6CgkJCS8vIE9iamVjdCBsaXRlcmFsCgkJCW5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIGV2ZW50ICkgOgoJCQkvLyBKdXN0IHRoZSBldmVudCB0eXBlIChzdHJpbmcpCgkJCW5ldyBqUXVlcnkuRXZlbnQoIHR5cGUgKTsKCgkJZXZlbnQudHlwZSA9IHR5cGU7CgkJZXZlbnQuaXNUcmlnZ2VyID0gdHJ1ZTsKCQlldmVudC5leGNsdXNpdmUgPSBleGNsdXNpdmU7CgkJZXZlbnQubmFtZXNwYWNlID0gbmFtZXNwYWNlcy5qb2luKCAiLiIgKTsKCQlldmVudC5uYW1lc3BhY2VfcmUgPSBldmVudC5uYW1lc3BhY2U/IG5ldyBSZWdFeHAoIihefFxcLikiICsgbmFtZXNwYWNlcy5qb2luKCJcXC4oPzouKlxcLik/IikgKyAiKFxcLnwkKSIpIDogbnVsbDsKCQlvbnR5cGUgPSB0eXBlLmluZGV4T2YoICI6IiApIDwgMCA/ICJvbiIgKyB0eXBlIDogIiI7CgoJCS8vIEhhbmRsZSBhIGdsb2JhbCB0cmlnZ2VyCgkJaWYgKCAhZWxlbSApIHsKCgkJCS8vIFRPRE86IFN0b3AgdGF1bnRpbmcgdGhlIGRhdGEgY2FjaGU7IHJlbW92ZSBnbG9iYWwgZXZlbnRzIGFuZCBhbHdheXMgYXR0YWNoIHRvIGRvY3VtZW50CgkJCWNhY2hlID0galF1ZXJ5LmNhY2hlOwoJCQlmb3IgKCBpIGluIGNhY2hlICkgewoJCQkJaWYgKCBjYWNoZVsgaSBdLmV2ZW50cyAmJiBjYWNoZVsgaSBdLmV2ZW50c1sgdHlwZSBdICkgewoJCQkJCWpRdWVyeS5ldmVudC50cmlnZ2VyKCBldmVudCwgZGF0YSwgY2FjaGVbIGkgXS5oYW5kbGUuZWxlbSwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJCXJldHVybjsKCQl9CgoJCS8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZAoJCWV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDsKCQlpZiAoICFldmVudC50YXJnZXQgKSB7CgkJCWV2ZW50LnRhcmdldCA9IGVsZW07CgkJfQoKCQkvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0CgkJZGF0YSA9IGRhdGEgIT0gbnVsbCA/IGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSA6IFtdOwoJCWRhdGEudW5zaGlmdCggZXZlbnQgKTsKCgkJLy8gQWxsb3cgc3BlY2lhbCBldmVudHMgdG8gZHJhdyBvdXRzaWRlIHRoZSBsaW5lcwoJCXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9OwoJCWlmICggc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJpZ2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpCgkJLy8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNCkKCQlldmVudFBhdGggPSBbWyBlbGVtLCBzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGUgXV07CgkJaWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHsKCgkJCWJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlOwoJCQljdXIgPSByZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApID8gZWxlbSA6IGVsZW0ucGFyZW50Tm9kZTsKCQkJb2xkID0gbnVsbDsKCQkJZm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkgewoJCQkJZXZlbnRQYXRoLnB1c2goWyBjdXIsIGJ1YmJsZVR5cGUgXSk7CgkJCQlvbGQgPSBjdXI7CgkJCX0KCgkJCS8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKQoJCQlpZiAoIG9sZCAmJiBvbGQgPT09IGVsZW0ub3duZXJEb2N1bWVudCApIHsKCQkJCWV2ZW50UGF0aC5wdXNoKFsgb2xkLmRlZmF1bHRWaWV3IHx8IG9sZC5wYXJlbnRXaW5kb3cgfHwgd2luZG93LCBidWJibGVUeXBlIF0pOwoJCQl9CgkJfQoKCQkvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoCgkJZm9yICggaSA9IDA7IGkgPCBldmVudFBhdGgubGVuZ3RoICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOyBpKysgKSB7CgoJCQljdXIgPSBldmVudFBhdGhbaV1bMF07CgkJCWV2ZW50LnR5cGUgPSBldmVudFBhdGhbaV1bMV07CgoJCQloYW5kbGUgPSAoIGpRdWVyeS5fZGF0YSggY3VyLCAiZXZlbnRzIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSAmJiBqUXVlcnkuX2RhdGEoIGN1ciwgImhhbmRsZSIgKTsKCQkJaWYgKCBoYW5kbGUgKSB7CgkJCQloYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApOwoJCQl9CgkJCS8vIE5vdGUgdGhhdCB0aGlzIGlzIGEgYmFyZSBKUyBmdW5jdGlvbiBhbmQgbm90IGEgalF1ZXJ5IGhhbmRsZXIKCQkJaGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07CgkJCWlmICggaGFuZGxlICYmIGpRdWVyeS5hY2NlcHREYXRhKCBjdXIgKSAmJiBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApID09PSBmYWxzZSApIHsKCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCX0KCQl9CgkJZXZlbnQudHlwZSA9IHR5cGU7CgoJCS8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3cKCQlpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkgewoKCQkJaWYgKCAoIXNwZWNpYWwuX2RlZmF1bHQgfHwgc3BlY2lhbC5fZGVmYXVsdC5hcHBseSggZWxlbS5vd25lckRvY3VtZW50LCBkYXRhICkgPT09IGZhbHNlKSAmJgoJCQkJISh0eXBlID09PSAiY2xpY2siICYmIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgImEiICkpICYmIGpRdWVyeS5hY2NlcHREYXRhKCBlbGVtICkgKSB7CgoJCQkJLy8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIG5hbWUgYXMgdGhlIGV2ZW50LgoJCQkJLy8gQ2FuJ3QgdXNlIGFuIC5pc0Z1bmN0aW9uKCkgY2hlY2sgaGVyZSBiZWNhdXNlIElFNi83IGZhaWxzIHRoYXQgdGVzdC4KCQkJCS8vIERvbid0IGRvIGRlZmF1bHQgYWN0aW9ucyBvbiB3aW5kb3csIHRoYXQncyB3aGVyZSBnbG9iYWwgdmFyaWFibGVzIGJlICgjNjE3MCkKCQkJCS8vIElFPDkgZGllcyBvbiBmb2N1cy9ibHVyIHRvIGhpZGRlbiBlbGVtZW50ICgjMTQ4NikKCQkJCWlmICggb250eXBlICYmIGVsZW1bIHR5cGUgXSAmJiAoKHR5cGUgIT09ICJmb2N1cyIgJiYgdHlwZSAhPT0gImJsdXIiKSB8fCBldmVudC50YXJnZXQub2Zmc2V0V2lkdGggIT09IDApICYmICFqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHsKCgkJCQkJLy8gRG9uJ3QgcmUtdHJpZ2dlciBhbiBvbkZPTyBldmVudCB3aGVuIHdlIGNhbGwgaXRzIEZPTygpIG1ldGhvZAoJCQkJCW9sZCA9IGVsZW1bIG9udHlwZSBdOwoKCQkJCQlpZiAoIG9sZCApIHsKCQkJCQkJZWxlbVsgb250eXBlIF0gPSBudWxsOwoJCQkJCX0KCgkJCQkJLy8gUHJldmVudCByZS10cmlnZ2VyaW5nIG9mIHRoZSBzYW1lIGV2ZW50LCBzaW5jZSB3ZSBhbHJlYWR5IGJ1YmJsZWQgaXQgYWJvdmUKCQkJCQlqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTsKCQkJCQllbGVtWyB0eXBlIF0oKTsKCQkJCQlqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdW5kZWZpbmVkOwoKCQkJCQlpZiAoIG9sZCApIHsKCQkJCQkJZWxlbVsgb250eXBlIF0gPSBvbGQ7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gZXZlbnQucmVzdWx0OwoJfSwKCglkaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3QKCQlldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIGV2ZW50IHx8IHdpbmRvdy5ldmVudCApOwoKCQl2YXIgaGFuZGxlcnMgPSAoIChqUXVlcnkuX2RhdGEoIHRoaXMsICJldmVudHMiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdKSwKCQkJZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsCgkJCWFyZ3MgPSBbXS5zbGljZS5jYWxsKCBhcmd1bWVudHMsIDAgKSwKCQkJcnVuX2FsbCA9ICFldmVudC5leGNsdXNpdmUgJiYgIWV2ZW50Lm5hbWVzcGFjZSwKCQkJc3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge30sCgkJCWhhbmRsZXJRdWV1ZSA9IFtdLAoJCQlpLCBqLCBjdXIsIGpxY3VyLCByZXQsIHNlbE1hdGNoLCBtYXRjaGVkLCBtYXRjaGVzLCBoYW5kbGVPYmosIHNlbCwgcmVsYXRlZDsKCgkJLy8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnQKCQlhcmdzWzBdID0gZXZlbnQ7CgkJZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzOwoKCQkvLyBDYWxsIHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBsZXQgaXQgYmFpbCBpZiBkZXNpcmVkCgkJaWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIERldGVybWluZSBoYW5kbGVycyB0aGF0IHNob3VsZCBydW4gaWYgdGhlcmUgYXJlIGRlbGVnYXRlZCBldmVudHMKCQkvLyBBdm9pZCBub24tbGVmdC1jbGljayBidWJibGluZyBpbiBGaXJlZm94ICgjMzg2MSkKCQlpZiAoIGRlbGVnYXRlQ291bnQgJiYgIShldmVudC5idXR0b24gJiYgZXZlbnQudHlwZSA9PT0gImNsaWNrIikgKSB7CgoJCQkvLyBQcmVnZW5lcmF0ZSBhIHNpbmdsZSBqUXVlcnkgb2JqZWN0IGZvciByZXVzZSB3aXRoIC5pcygpCgkJCWpxY3VyID0galF1ZXJ5KHRoaXMpOwoJCQlqcWN1ci5jb250ZXh0ID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXM7CgoJCQlmb3IgKCBjdXIgPSBldmVudC50YXJnZXQ7IGN1ciAhPSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkgewoKCQkJCS8vIERvbid0IHByb2Nlc3MgZXZlbnRzIG9uIGRpc2FibGVkIGVsZW1lbnRzICgjNjkxMSwgIzgxNjUpCgkJCQlpZiAoIGN1ci5kaXNhYmxlZCAhPT0gdHJ1ZSApIHsKCQkJCQlzZWxNYXRjaCA9IHt9OwoJCQkJCW1hdGNoZXMgPSBbXTsKCQkJCQlqcWN1clswXSA9IGN1cjsKCQkJCQlmb3IgKCBpID0gMDsgaSA8IGRlbGVnYXRlQ291bnQ7IGkrKyApIHsKCQkJCQkJaGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTsKCQkJCQkJc2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yOwoKCQkJCQkJaWYgKCBzZWxNYXRjaFsgc2VsIF0gPT09IHVuZGVmaW5lZCApIHsKCQkJCQkJCXNlbE1hdGNoWyBzZWwgXSA9ICgKCQkJCQkJCQloYW5kbGVPYmoucXVpY2sgPyBxdWlja0lzKCBjdXIsIGhhbmRsZU9iai5xdWljayApIDoganFjdXIuaXMoIHNlbCApCgkJCQkJCQkpOwoJCQkJCQl9CgkJCQkJCWlmICggc2VsTWF0Y2hbIHNlbCBdICkgewoJCQkJCQkJbWF0Y2hlcy5wdXNoKCBoYW5kbGVPYmogKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQlpZiAoIG1hdGNoZXMubGVuZ3RoICkgewoJCQkJCQloYW5kbGVyUXVldWUucHVzaCh7IGVsZW06IGN1ciwgbWF0Y2hlczogbWF0Y2hlcyB9KTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgoJCS8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnMKCQlpZiAoIGhhbmRsZXJzLmxlbmd0aCA+IGRlbGVnYXRlQ291bnQgKSB7CgkJCWhhbmRsZXJRdWV1ZS5wdXNoKHsgZWxlbTogdGhpcywgbWF0Y2hlczogaGFuZGxlcnMuc2xpY2UoIGRlbGVnYXRlQ291bnQgKSB9KTsKCQl9CgoJCS8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzCgkJZm9yICggaSA9IDA7IGkgPCBoYW5kbGVyUXVldWUubGVuZ3RoICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOyBpKysgKSB7CgkJCW1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkgXTsKCQkJZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTsKCgkJCWZvciAoIGogPSAwOyBqIDwgbWF0Y2hlZC5tYXRjaGVzLmxlbmd0aCAmJiAhZXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKTsgaisrICkgewoJCQkJaGFuZGxlT2JqID0gbWF0Y2hlZC5tYXRjaGVzWyBqIF07CgoJCQkJLy8gVHJpZ2dlcmVkIGV2ZW50IG11c3QgZWl0aGVyIDEpIGJlIG5vbi1leGNsdXNpdmUgYW5kIGhhdmUgbm8gbmFtZXNwYWNlLCBvcgoJCQkJLy8gMikgaGF2ZSBuYW1lc3BhY2UocykgYSBzdWJzZXQgb3IgZXF1YWwgdG8gdGhvc2UgaW4gdGhlIGJvdW5kIGV2ZW50IChib3RoIGNhbiBoYXZlIG5vIG5hbWVzcGFjZSkuCgkJCQlpZiAoIHJ1bl9hbGwgfHwgKCFldmVudC5uYW1lc3BhY2UgJiYgIWhhbmRsZU9iai5uYW1lc3BhY2UpIHx8IGV2ZW50Lm5hbWVzcGFjZV9yZSAmJiBldmVudC5uYW1lc3BhY2VfcmUudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgewoKCQkJCQlldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7CgkJCQkJZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqOwoKCQkJCQlyZXQgPSAoIChqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30pLmhhbmRsZSB8fCBoYW5kbGVPYmouaGFuZGxlciApCgkJCQkJCQkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApOwoKCQkJCQlpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkgewoJCQkJCQlldmVudC5yZXN1bHQgPSByZXQ7CgkJCQkJCWlmICggcmV0ID09PSBmYWxzZSApIHsKCQkJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJCQlldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCgkJLy8gQ2FsbCB0aGUgcG9zdERpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZQoJCWlmICggc3BlY2lhbC5wb3N0RGlzcGF0Y2ggKSB7CgkJCXNwZWNpYWwucG9zdERpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICk7CgkJfQoKCQlyZXR1cm4gZXZlbnQucmVzdWx0OwoJfSwKCgkvLyBJbmNsdWRlcyBzb21lIGV2ZW50IHByb3BzIHNoYXJlZCBieSBLZXlFdmVudCBhbmQgTW91c2VFdmVudAoJLy8gKioqIGF0dHJDaGFuZ2UgYXR0ck5hbWUgcmVsYXRlZE5vZGUgc3JjRWxlbWVudCAgYXJlIG5vdCBub3JtYWxpemVkLCBub24tVzNDLCBkZXByZWNhdGVkLCB3aWxsIGJlIHJlbW92ZWQgaW4gMS44ICoqKgoJcHJvcHM6ICJhdHRyQ2hhbmdlIGF0dHJOYW1lIHJlbGF0ZWROb2RlIHNyY0VsZW1lbnQgYWx0S2V5IGJ1YmJsZXMgY2FuY2VsYWJsZSBjdHJsS2V5IGN1cnJlbnRUYXJnZXQgZXZlbnRQaGFzZSBtZXRhS2V5IHJlbGF0ZWRUYXJnZXQgc2hpZnRLZXkgdGFyZ2V0IHRpbWVTdGFtcCB2aWV3IHdoaWNoIi5zcGxpdCgiICIpLAoKCWZpeEhvb2tzOiB7fSwKCglrZXlIb29rczogewoJCXByb3BzOiAiY2hhciBjaGFyQ29kZSBrZXkga2V5Q29kZSIuc3BsaXQoIiAiKSwKCQlmaWx0ZXI6IGZ1bmN0aW9uKCBldmVudCwgb3JpZ2luYWwgKSB7CgoJCQkvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVudHMKCQkJaWYgKCBldmVudC53aGljaCA9PSBudWxsICkgewoJCQkJZXZlbnQud2hpY2ggPSBvcmlnaW5hbC5jaGFyQ29kZSAhPSBudWxsID8gb3JpZ2luYWwuY2hhckNvZGUgOiBvcmlnaW5hbC5rZXlDb2RlOwoJCQl9CgoJCQlyZXR1cm4gZXZlbnQ7CgkJfQoJfSwKCgltb3VzZUhvb2tzOiB7CgkJcHJvcHM6ICJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgZnJvbUVsZW1lbnQgb2Zmc2V0WCBvZmZzZXRZIHBhZ2VYIHBhZ2VZIHNjcmVlblggc2NyZWVuWSB0b0VsZW1lbnQiLnNwbGl0KCIgIiksCgkJZmlsdGVyOiBmdW5jdGlvbiggZXZlbnQsIG9yaWdpbmFsICkgewoJCQl2YXIgZXZlbnREb2MsIGRvYywgYm9keSwKCQkJCWJ1dHRvbiA9IG9yaWdpbmFsLmJ1dHRvbiwKCQkJCWZyb21FbGVtZW50ID0gb3JpZ2luYWwuZnJvbUVsZW1lbnQ7CgoJCQkvLyBDYWxjdWxhdGUgcGFnZVgvWSBpZiBtaXNzaW5nIGFuZCBjbGllbnRYL1kgYXZhaWxhYmxlCgkJCWlmICggZXZlbnQucGFnZVggPT0gbnVsbCAmJiBvcmlnaW5hbC5jbGllbnRYICE9IG51bGwgKSB7CgkJCQlldmVudERvYyA9IGV2ZW50LnRhcmdldC5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50OwoJCQkJZG9jID0gZXZlbnREb2MuZG9jdW1lbnRFbGVtZW50OwoJCQkJYm9keSA9IGV2ZW50RG9jLmJvZHk7CgoJCQkJZXZlbnQucGFnZVggPSBvcmlnaW5hbC5jbGllbnRYICsgKCBkb2MgJiYgZG9jLnNjcm9sbExlZnQgfHwgYm9keSAmJiBib2R5LnNjcm9sbExlZnQgfHwgMCApIC0gKCBkb2MgJiYgZG9jLmNsaWVudExlZnQgfHwgYm9keSAmJiBib2R5LmNsaWVudExlZnQgfHwgMCApOwoJCQkJZXZlbnQucGFnZVkgPSBvcmlnaW5hbC5jbGllbnRZICsgKCBkb2MgJiYgZG9jLnNjcm9sbFRvcCAgfHwgYm9keSAmJiBib2R5LnNjcm9sbFRvcCAgfHwgMCApIC0gKCBkb2MgJiYgZG9jLmNsaWVudFRvcCAgfHwgYm9keSAmJiBib2R5LmNsaWVudFRvcCAgfHwgMCApOwoJCQl9CgoJCQkvLyBBZGQgcmVsYXRlZFRhcmdldCwgaWYgbmVjZXNzYXJ5CgkJCWlmICggIWV2ZW50LnJlbGF0ZWRUYXJnZXQgJiYgZnJvbUVsZW1lbnQgKSB7CgkJCQlldmVudC5yZWxhdGVkVGFyZ2V0ID0gZnJvbUVsZW1lbnQgPT09IGV2ZW50LnRhcmdldCA/IG9yaWdpbmFsLnRvRWxlbWVudCA6IGZyb21FbGVtZW50OwoJCQl9CgoJCQkvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0CgkJCS8vIE5vdGU6IGJ1dHRvbiBpcyBub3Qgbm9ybWFsaXplZCwgc28gZG9uJ3QgdXNlIGl0CgkJCWlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICkgewoJCQkJZXZlbnQud2hpY2ggPSAoIGJ1dHRvbiAmIDEgPyAxIDogKCBidXR0b24gJiAyID8gMyA6ICggYnV0dG9uICYgNCA/IDIgOiAwICkgKSApOwoJCQl9CgoJCQlyZXR1cm4gZXZlbnQ7CgkJfQoJfSwKCglmaXg6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoIGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdICkgewoJCQlyZXR1cm4gZXZlbnQ7CgkJfQoKCQkvLyBDcmVhdGUgYSB3cml0YWJsZSBjb3B5IG9mIHRoZSBldmVudCBvYmplY3QgYW5kIG5vcm1hbGl6ZSBzb21lIHByb3BlcnRpZXMKCQl2YXIgaSwgcHJvcCwKCQkJb3JpZ2luYWxFdmVudCA9IGV2ZW50LAoJCQlmaXhIb29rID0galF1ZXJ5LmV2ZW50LmZpeEhvb2tzWyBldmVudC50eXBlIF0gfHwge30sCgkJCWNvcHkgPSBmaXhIb29rLnByb3BzID8gdGhpcy5wcm9wcy5jb25jYXQoIGZpeEhvb2sucHJvcHMgKSA6IHRoaXMucHJvcHM7CgoJCWV2ZW50ID0galF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7CgoJCWZvciAoIGkgPSBjb3B5Lmxlbmd0aDsgaTsgKSB7CgkJCXByb3AgPSBjb3B5WyAtLWkgXTsKCQkJZXZlbnRbIHByb3AgXSA9IG9yaWdpbmFsRXZlbnRbIHByb3AgXTsKCQl9CgoJCS8vIEZpeCB0YXJnZXQgcHJvcGVydHksIGlmIG5lY2Vzc2FyeSAoIzE5MjUsIElFIDYvNy84ICYgU2FmYXJpMikKCQlpZiAoICFldmVudC50YXJnZXQgKSB7CgkJCWV2ZW50LnRhcmdldCA9IG9yaWdpbmFsRXZlbnQuc3JjRWxlbWVudCB8fCBkb2N1bWVudDsKCQl9CgoJCS8vIFRhcmdldCBzaG91bGQgbm90IGJlIGEgdGV4dCBub2RlICgjNTA0LCBTYWZhcmkpCgkJaWYgKCBldmVudC50YXJnZXQubm9kZVR5cGUgPT09IDMgKSB7CgkJCWV2ZW50LnRhcmdldCA9IGV2ZW50LnRhcmdldC5wYXJlbnROb2RlOwoJCX0KCgkJLy8gRm9yIG1vdXNlL2tleSBldmVudHM7IGFkZCBtZXRhS2V5IGlmIGl0J3Mgbm90IHRoZXJlICgjMzM2OCwgSUU2LzcvOCkKCQlpZiAoIGV2ZW50Lm1ldGFLZXkgPT09IHVuZGVmaW5lZCApIHsKCQkJZXZlbnQubWV0YUtleSA9IGV2ZW50LmN0cmxLZXk7CgkJfQoKCQlyZXR1cm4gZml4SG9vay5maWx0ZXI/IGZpeEhvb2suZmlsdGVyKCBldmVudCwgb3JpZ2luYWxFdmVudCApIDogZXZlbnQ7Cgl9LAoKCXNwZWNpYWw6IHsKCQlyZWFkeTogewoJCQkvLyBNYWtlIHN1cmUgdGhlIHJlYWR5IGV2ZW50IGlzIHNldHVwCgkJCXNldHVwOiBqUXVlcnkuYmluZFJlYWR5CgkJfSwKCgkJbG9hZDogewoJCQkvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkCgkJCW5vQnViYmxlOiB0cnVlCgkJfSwKCgkJZm9jdXM6IHsKCQkJZGVsZWdhdGVUeXBlOiAiZm9jdXNpbiIKCQl9LAoJCWJsdXI6IHsKCQkJZGVsZWdhdGVUeXBlOiAiZm9jdXNvdXQiCgkJfSwKCgkJYmVmb3JldW5sb2FkOiB7CgkJCXNldHVwOiBmdW5jdGlvbiggZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSB7CgkJCQkvLyBXZSBvbmx5IHdhbnQgdG8gZG8gdGhpcyBzcGVjaWFsIGNhc2Ugb24gd2luZG93cwoJCQkJaWYgKCBqUXVlcnkuaXNXaW5kb3coIHRoaXMgKSApIHsKCQkJCQl0aGlzLm9uYmVmb3JldW5sb2FkID0gZXZlbnRIYW5kbGU7CgkJCQl9CgkJCX0sCgoJCQl0ZWFyZG93bjogZnVuY3Rpb24oIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgewoJCQkJaWYgKCB0aGlzLm9uYmVmb3JldW5sb2FkID09PSBldmVudEhhbmRsZSApIHsKCQkJCQl0aGlzLm9uYmVmb3JldW5sb2FkID0gbnVsbDsKCQkJCX0KCQkJfQoJCX0KCX0sCgoJc2ltdWxhdGU6IGZ1bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCwgYnViYmxlICkgewoJCS8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZS4KCQkvLyBGYWtlIG9yaWdpbmFsRXZlbnQgdG8gYXZvaWQgZG9ub3IncyBzdG9wUHJvcGFnYXRpb24sIGJ1dCBpZiB0aGUKCQkvLyBzaW11bGF0ZWQgZXZlbnQgcHJldmVudHMgZGVmYXVsdCB0aGVuIHdlIGRvIHRoZSBzYW1lIG9uIHRoZSBkb25vci4KCQl2YXIgZSA9IGpRdWVyeS5leHRlbmQoCgkJCW5ldyBqUXVlcnkuRXZlbnQoKSwKCQkJZXZlbnQsCgkJCXsgdHlwZTogdHlwZSwKCQkJCWlzU2ltdWxhdGVkOiB0cnVlLAoJCQkJb3JpZ2luYWxFdmVudDoge30KCQkJfQoJCSk7CgkJaWYgKCBidWJibGUgKSB7CgkJCWpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7CgkJfSBlbHNlIHsKCQkJalF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmNhbGwoIGVsZW0sIGUgKTsKCQl9CgkJaWYgKCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpICkgewoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCX0KCX0KfTsKCi8vIFNvbWUgcGx1Z2lucyBhcmUgdXNpbmcsIGJ1dCBpdCdzIHVuZG9jdW1lbnRlZC9kZXByZWNhdGVkIGFuZCB3aWxsIGJlIHJlbW92ZWQuCi8vIFRoZSAxLjcgc3BlY2lhbCBldmVudCBpbnRlcmZhY2Ugc2hvdWxkIHByb3ZpZGUgYWxsIHRoZSBob29rcyBuZWVkZWQgbm93LgpqUXVlcnkuZXZlbnQuaGFuZGxlID0galF1ZXJ5LmV2ZW50LmRpc3BhdGNoOwoKalF1ZXJ5LnJlbW92ZUV2ZW50ID0gZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciA/CglmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkgewoJCWlmICggZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICkgewoJCQllbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSwgZmFsc2UgKTsKCQl9Cgl9IDoKCWZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7CgkJaWYgKCBlbGVtLmRldGFjaEV2ZW50ICkgewoJCQllbGVtLmRldGFjaEV2ZW50KCAib24iICsgdHlwZSwgaGFuZGxlICk7CgkJfQoJfTsKCmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkgewoJLy8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkCglpZiAoICEodGhpcyBpbnN0YW5jZW9mIGpRdWVyeS5FdmVudCkgKSB7CgkJcmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTsKCX0KCgkvLyBFdmVudCBvYmplY3QKCWlmICggc3JjICYmIHNyYy50eXBlICkgewoJCXRoaXMub3JpZ2luYWxFdmVudCA9IHNyYzsKCQl0aGlzLnR5cGUgPSBzcmMudHlwZTsKCgkJLy8gRXZlbnRzIGJ1YmJsaW5nIHVwIHRoZSBkb2N1bWVudCBtYXkgaGF2ZSBiZWVuIG1hcmtlZCBhcyBwcmV2ZW50ZWQKCQkvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJlZTsgcmVmbGVjdCB0aGUgY29ycmVjdCB2YWx1ZS4KCQl0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9ICggc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHwgc3JjLnJldHVyblZhbHVlID09PSBmYWxzZSB8fAoJCQlzcmMuZ2V0UHJldmVudERlZmF1bHQgJiYgc3JjLmdldFByZXZlbnREZWZhdWx0KCkgKSA/IHJldHVyblRydWUgOiByZXR1cm5GYWxzZTsKCgkvLyBFdmVudCB0eXBlCgl9IGVsc2UgewoJCXRoaXMudHlwZSA9IHNyYzsKCX0KCgkvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVjdAoJaWYgKCBwcm9wcyApIHsKCQlqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApOwoJfQoKCS8vIENyZWF0ZSBhIHRpbWVzdGFtcCBpZiBpbmNvbWluZyBldmVudCBkb2Vzbid0IGhhdmUgb25lCgl0aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IGpRdWVyeS5ub3coKTsKCgkvLyBNYXJrIGl0IGFzIGZpeGVkCgl0aGlzWyBqUXVlcnkuZXhwYW5kbyBdID0gdHJ1ZTsKfTsKCmZ1bmN0aW9uIHJldHVybkZhbHNlKCkgewoJcmV0dXJuIGZhbHNlOwp9CmZ1bmN0aW9uIHJldHVyblRydWUoKSB7CglyZXR1cm4gdHJ1ZTsKfQoKLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nCi8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMDMvV0QtRE9NLUxldmVsLTMtRXZlbnRzLTIwMDMwMzMxL2VjbWEtc2NyaXB0LWJpbmRpbmcuaHRtbApqUXVlcnkuRXZlbnQucHJvdG90eXBlID0gewoJcHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkgewoJCXRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTsKCgkJdmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7CgkJaWYgKCAhZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gaWYgcHJldmVudERlZmF1bHQgZXhpc3RzIHJ1biBpdCBvbiB0aGUgb3JpZ2luYWwgZXZlbnQKCQlpZiAoIGUucHJldmVudERlZmF1bHQgKSB7CgkJCWUucHJldmVudERlZmF1bHQoKTsKCgkJLy8gb3RoZXJ3aXNlIHNldCB0aGUgcmV0dXJuVmFsdWUgcHJvcGVydHkgb2YgdGhlIG9yaWdpbmFsIGV2ZW50IHRvIGZhbHNlIChJRSkKCQl9IGVsc2UgewoJCQllLnJldHVyblZhbHVlID0gZmFsc2U7CgkJfQoJfSwKCXN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7CgkJdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7CgoJCXZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50OwoJCWlmICggIWUgKSB7CgkJCXJldHVybjsKCQl9CgkJLy8gaWYgc3RvcFByb3BhZ2F0aW9uIGV4aXN0cyBydW4gaXQgb24gdGhlIG9yaWdpbmFsIGV2ZW50CgkJaWYgKCBlLnN0b3BQcm9wYWdhdGlvbiApIHsKCQkJZS5zdG9wUHJvcGFnYXRpb24oKTsKCQl9CgkJLy8gb3RoZXJ3aXNlIHNldCB0aGUgY2FuY2VsQnViYmxlIHByb3BlcnR5IG9mIHRoZSBvcmlnaW5hbCBldmVudCB0byB0cnVlIChJRSkKCQllLmNhbmNlbEJ1YmJsZSA9IHRydWU7Cgl9LAoJc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHsKCQl0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTsKCQl0aGlzLnN0b3BQcm9wYWdhdGlvbigpOwoJfSwKCWlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsCglpc1Byb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsCglpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UKfTsKCi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrcwpqUXVlcnkuZWFjaCh7Cgltb3VzZWVudGVyOiAibW91c2VvdmVyIiwKCW1vdXNlbGVhdmU6ICJtb3VzZW91dCIKfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHsKCWpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7CgkJZGVsZWdhdGVUeXBlOiBmaXgsCgkJYmluZFR5cGU6IGZpeCwKCgkJaGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXZhciB0YXJnZXQgPSB0aGlzLAoJCQkJcmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsCgkJCQloYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmosCgkJCQlzZWxlY3RvciA9IGhhbmRsZU9iai5zZWxlY3RvciwKCQkJCXJldDsKCgkJCS8vIEZvciBtb3VzZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC4KCQkJLy8gTkI6IE5vIHJlbGF0ZWRUYXJnZXQgaWYgdGhlIG1vdXNlIGxlZnQvZW50ZXJlZCB0aGUgYnJvd3NlciB3aW5kb3cKCQkJaWYgKCAhcmVsYXRlZCB8fCAocmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApKSApIHsKCQkJCWV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7CgkJCQlyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCQlldmVudC50eXBlID0gZml4OwoJCQl9CgkJCXJldHVybiByZXQ7CgkJfQoJfTsKfSk7CgovLyBJRSBzdWJtaXQgZGVsZWdhdGlvbgppZiAoICFqUXVlcnkuc3VwcG9ydC5zdWJtaXRCdWJibGVzICkgewoKCWpRdWVyeS5ldmVudC5zcGVjaWFsLnN1Ym1pdCA9IHsKCQlzZXR1cDogZnVuY3Rpb24oKSB7CgkJCS8vIE9ubHkgbmVlZCB0aGlzIGZvciBkZWxlZ2F0ZWQgZm9ybSBzdWJtaXQgZXZlbnRzCgkJCWlmICggalF1ZXJ5Lm5vZGVOYW1lKCB0aGlzLCAiZm9ybSIgKSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoKCQkJLy8gTGF6eS1hZGQgYSBzdWJtaXQgaGFuZGxlciB3aGVuIGEgZGVzY2VuZGFudCBmb3JtIG1heSBwb3RlbnRpYWxseSBiZSBzdWJtaXR0ZWQKCQkJalF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgImNsaWNrLl9zdWJtaXQga2V5cHJlc3MuX3N1Ym1pdCIsIGZ1bmN0aW9uKCBlICkgewoJCQkJLy8gTm9kZSBuYW1lIGNoZWNrIGF2b2lkcyBhIFZNTC1yZWxhdGVkIGNyYXNoIGluIElFICgjOTgwNykKCQkJCXZhciBlbGVtID0gZS50YXJnZXQsCgkJCQkJZm9ybSA9IGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgImlucHV0IiApIHx8IGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgImJ1dHRvbiIgKSA/IGVsZW0uZm9ybSA6IHVuZGVmaW5lZDsKCQkJCWlmICggZm9ybSAmJiAhZm9ybS5fc3VibWl0X2F0dGFjaGVkICkgewoJCQkJCWpRdWVyeS5ldmVudC5hZGQoIGZvcm0sICJzdWJtaXQuX3N1Ym1pdCIsIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCQkJZXZlbnQuX3N1Ym1pdF9idWJibGUgPSB0cnVlOwoJCQkJCX0pOwoJCQkJCWZvcm0uX3N1Ym1pdF9hdHRhY2hlZCA9IHRydWU7CgkJCQl9CgkJCX0pOwoJCQkvLyByZXR1cm4gdW5kZWZpbmVkIHNpbmNlIHdlIGRvbid0IG5lZWQgYW4gZXZlbnQgbGlzdGVuZXIKCQl9LAoJCQoJCXBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkvLyBJZiBmb3JtIHdhcyBzdWJtaXR0ZWQgYnkgdGhlIHVzZXIsIGJ1YmJsZSB0aGUgZXZlbnQgdXAgdGhlIHRyZWUKCQkJaWYgKCBldmVudC5fc3VibWl0X2J1YmJsZSApIHsKCQkJCWRlbGV0ZSBldmVudC5fc3VibWl0X2J1YmJsZTsKCQkJCWlmICggdGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1RyaWdnZXIgKSB7CgkJCQkJalF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCAic3VibWl0IiwgdGhpcy5wYXJlbnROb2RlLCBldmVudCwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfSwKCgkJdGVhcmRvd246IGZ1bmN0aW9uKCkgewoJCQkvLyBPbmx5IG5lZWQgdGhpcyBmb3IgZGVsZWdhdGVkIGZvcm0gc3VibWl0IGV2ZW50cwoJCQlpZiAoIGpRdWVyeS5ub2RlTmFtZSggdGhpcywgImZvcm0iICkgKSB7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCgkJCS8vIFJlbW92ZSBkZWxlZ2F0ZWQgaGFuZGxlcnM7IGNsZWFuRGF0YSBldmVudHVhbGx5IHJlYXBzIHN1Ym1pdCBoYW5kbGVycyBhdHRhY2hlZCBhYm92ZQoJCQlqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCAiLl9zdWJtaXQiICk7CgkJfQoJfTsKfQoKLy8gSUUgY2hhbmdlIGRlbGVnYXRpb24gYW5kIGNoZWNrYm94L3JhZGlvIGZpeAppZiAoICFqUXVlcnkuc3VwcG9ydC5jaGFuZ2VCdWJibGVzICkgewoKCWpRdWVyeS5ldmVudC5zcGVjaWFsLmNoYW5nZSA9IHsKCgkJc2V0dXA6IGZ1bmN0aW9uKCkgewoKCQkJaWYgKCByZm9ybUVsZW1zLnRlc3QoIHRoaXMubm9kZU5hbWUgKSApIHsKCQkJCS8vIElFIGRvZXNuJ3QgZmlyZSBjaGFuZ2Ugb24gYSBjaGVjay9yYWRpbyB1bnRpbCBibHVyOyB0cmlnZ2VyIGl0IG9uIGNsaWNrCgkJCQkvLyBhZnRlciBhIHByb3BlcnR5Y2hhbmdlLiBFYXQgdGhlIGJsdXItY2hhbmdlIGluIHNwZWNpYWwuY2hhbmdlLmhhbmRsZS4KCQkJCS8vIFRoaXMgc3RpbGwgZmlyZXMgb25jaGFuZ2UgYSBzZWNvbmQgdGltZSBmb3IgY2hlY2svcmFkaW8gYWZ0ZXIgYmx1ci4KCQkJCWlmICggdGhpcy50eXBlID09PSAiY2hlY2tib3giIHx8IHRoaXMudHlwZSA9PT0gInJhZGlvIiApIHsKCQkJCQlqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCAicHJvcGVydHljaGFuZ2UuX2NoYW5nZSIsIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50LnByb3BlcnR5TmFtZSA9PT0gImNoZWNrZWQiICkgewoJCQkJCQkJdGhpcy5fanVzdF9jaGFuZ2VkID0gdHJ1ZTsKCQkJCQkJfQoJCQkJCX0pOwoJCQkJCWpRdWVyeS5ldmVudC5hZGQoIHRoaXMsICJjbGljay5fY2hhbmdlIiwgZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJCQlpZiAoIHRoaXMuX2p1c3RfY2hhbmdlZCAmJiAhZXZlbnQuaXNUcmlnZ2VyICkgewoJCQkJCQkJdGhpcy5fanVzdF9jaGFuZ2VkID0gZmFsc2U7CgkJCQkJCQlqUXVlcnkuZXZlbnQuc2ltdWxhdGUoICJjaGFuZ2UiLCB0aGlzLCBldmVudCwgdHJ1ZSApOwoJCQkJCQl9CgkJCQkJfSk7CgkJCQl9CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQkJLy8gRGVsZWdhdGVkIGV2ZW50OyBsYXp5LWFkZCBhIGNoYW5nZSBoYW5kbGVyIG9uIGRlc2NlbmRhbnQgaW5wdXRzCgkJCWpRdWVyeS5ldmVudC5hZGQoIHRoaXMsICJiZWZvcmVhY3RpdmF0ZS5fY2hhbmdlIiwgZnVuY3Rpb24oIGUgKSB7CgkJCQl2YXIgZWxlbSA9IGUudGFyZ2V0OwoKCQkJCWlmICggcmZvcm1FbGVtcy50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgIWVsZW0uX2NoYW5nZV9hdHRhY2hlZCApIHsKCQkJCQlqUXVlcnkuZXZlbnQuYWRkKCBlbGVtLCAiY2hhbmdlLl9jaGFuZ2UiLCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkJCWlmICggdGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1NpbXVsYXRlZCAmJiAhZXZlbnQuaXNUcmlnZ2VyICkgewoJCQkJCQkJalF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCAiY2hhbmdlIiwgdGhpcy5wYXJlbnROb2RlLCBldmVudCwgdHJ1ZSApOwoJCQkJCQl9CgkJCQkJfSk7CgkJCQkJZWxlbS5fY2hhbmdlX2F0dGFjaGVkID0gdHJ1ZTsKCQkJCX0KCQkJfSk7CgkJfSwKCgkJaGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXZhciBlbGVtID0gZXZlbnQudGFyZ2V0OwoKCQkJLy8gU3dhbGxvdyBuYXRpdmUgY2hhbmdlIGV2ZW50cyBmcm9tIGNoZWNrYm94L3JhZGlvLCB3ZSBhbHJlYWR5IHRyaWdnZXJlZCB0aGVtIGFib3ZlCgkJCWlmICggdGhpcyAhPT0gZWxlbSB8fCBldmVudC5pc1NpbXVsYXRlZCB8fCBldmVudC5pc1RyaWdnZXIgfHwgKGVsZW0udHlwZSAhPT0gInJhZGlvIiAmJiBlbGVtLnR5cGUgIT09ICJjaGVja2JveCIpICkgewoJCQkJcmV0dXJuIGV2ZW50LmhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJfQoJCX0sCgoJCXRlYXJkb3duOiBmdW5jdGlvbigpIHsKCQkJalF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgIi5fY2hhbmdlIiApOwoKCQkJcmV0dXJuIHJmb3JtRWxlbXMudGVzdCggdGhpcy5ub2RlTmFtZSApOwoJCX0KCX07Cn0KCi8vIENyZWF0ZSAiYnViYmxpbmciIGZvY3VzIGFuZCBibHVyIGV2ZW50cwppZiAoICFqUXVlcnkuc3VwcG9ydC5mb2N1c2luQnViYmxlcyApIHsKCWpRdWVyeS5lYWNoKHsgZm9jdXM6ICJmb2N1c2luIiwgYmx1cjogImZvY3Vzb3V0IiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkgewoKCQkvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0CgkJdmFyIGF0dGFjaGVzID0gMCwKCQkJaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICksIHRydWUgKTsKCQkJfTsKCgkJalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0gewoJCQlzZXR1cDogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIGF0dGFjaGVzKysgPT09IDAgKSB7CgkJCQkJZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApOwoJCQkJfQoJCQl9LAoJCQl0ZWFyZG93bjogZnVuY3Rpb24oKSB7CgkJCQlpZiAoIC0tYXR0YWNoZXMgPT09IDAgKSB7CgkJCQkJZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfTsKCX0pOwp9CgpqUXVlcnkuZm4uZXh0ZW5kKHsKCglvbjogZnVuY3Rpb24oIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIC8qSU5URVJOQUwqLyBvbmUgKSB7CgkJdmFyIG9yaWdGbiwgdHlwZTsKCgkJLy8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzCgkJaWYgKCB0eXBlb2YgdHlwZXMgPT09ICJvYmplY3QiICkgewoJCQkvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKQoJCQlpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gInN0cmluZyIgKSB7IC8vICYmIHNlbGVjdG9yICE9IG51bGwKCQkJCS8vICggdHlwZXMtT2JqZWN0LCBkYXRhICkKCQkJCWRhdGEgPSBkYXRhIHx8IHNlbGVjdG9yOwoJCQkJc2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJCX0KCQkJZm9yICggdHlwZSBpbiB0eXBlcyApIHsKCQkJCXRoaXMub24oIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTsKCQkJfQoJCQlyZXR1cm4gdGhpczsKCQl9CgoJCWlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7CgkJCS8vICggdHlwZXMsIGZuICkKCQkJZm4gPSBzZWxlY3RvcjsKCQkJZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkOwoJCX0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7CgkJCWlmICggdHlwZW9mIHNlbGVjdG9yID09PSAic3RyaW5nIiApIHsKCQkJCS8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApCgkJCQlmbiA9IGRhdGE7CgkJCQlkYXRhID0gdW5kZWZpbmVkOwoJCQl9IGVsc2UgewoJCQkJLy8gKCB0eXBlcywgZGF0YSwgZm4gKQoJCQkJZm4gPSBkYXRhOwoJCQkJZGF0YSA9IHNlbGVjdG9yOwoJCQkJc2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJCX0KCQl9CgkJaWYgKCBmbiA9PT0gZmFsc2UgKSB7CgkJCWZuID0gcmV0dXJuRmFsc2U7CgkJfSBlbHNlIGlmICggIWZuICkgewoJCQlyZXR1cm4gdGhpczsKCQl9CgoJCWlmICggb25lID09PSAxICkgewoJCQlvcmlnRm4gPSBmbjsKCQkJZm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkvLyBDYW4gdXNlIGFuIGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm8KCQkJCWpRdWVyeSgpLm9mZiggZXZlbnQgKTsKCQkJCXJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQl9OwoJCQkvLyBVc2Ugc2FtZSBndWlkIHNvIGNhbGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGbgoJCQlmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTsKCQl9CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTsKCQl9KTsKCX0sCglvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkgewoJCXJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7Cgl9LAoJb2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBmbiApIHsKCQlpZiAoIHR5cGVzICYmIHR5cGVzLnByZXZlbnREZWZhdWx0ICYmIHR5cGVzLmhhbmRsZU9iaiApIHsKCQkJLy8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudAoJCQl2YXIgaGFuZGxlT2JqID0gdHlwZXMuaGFuZGxlT2JqOwoJCQlqUXVlcnkoIHR5cGVzLmRlbGVnYXRlVGFyZ2V0ICkub2ZmKAoJCQkJaGFuZGxlT2JqLm5hbWVzcGFjZSA/IGhhbmRsZU9iai5vcmlnVHlwZSArICIuIiArIGhhbmRsZU9iai5uYW1lc3BhY2UgOiBoYW5kbGVPYmoub3JpZ1R5cGUsCgkJCQloYW5kbGVPYmouc2VsZWN0b3IsCgkJCQloYW5kbGVPYmouaGFuZGxlcgoJCQkpOwoJCQlyZXR1cm4gdGhpczsKCQl9CgkJaWYgKCB0eXBlb2YgdHlwZXMgPT09ICJvYmplY3QiICkgewoJCQkvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKQoJCQlmb3IgKCB2YXIgdHlwZSBpbiB0eXBlcyApIHsKCQkJCXRoaXMub2ZmKCB0eXBlLCBzZWxlY3RvciwgdHlwZXNbIHR5cGUgXSApOwoJCQl9CgkJCXJldHVybiB0aGlzOwoJCX0KCQlpZiAoIHNlbGVjdG9yID09PSBmYWxzZSB8fCB0eXBlb2Ygc2VsZWN0b3IgPT09ICJmdW5jdGlvbiIgKSB7CgkJCS8vICggdHlwZXMgWywgZm5dICkKCQkJZm4gPSBzZWxlY3RvcjsKCQkJc2VsZWN0b3IgPSB1bmRlZmluZWQ7CgkJfQoJCWlmICggZm4gPT09IGZhbHNlICkgewoJCQlmbiA9IHJldHVybkZhbHNlOwoJCX0KCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQlqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCB0eXBlcywgZm4sIHNlbGVjdG9yICk7CgkJfSk7Cgl9LAoKCWJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7CgkJcmV0dXJuIHRoaXMub24oIHR5cGVzLCBudWxsLCBkYXRhLCBmbiApOwoJfSwKCXVuYmluZDogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHsKCQlyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApOwoJfSwKCglsaXZlOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkgewoJCWpRdWVyeSggdGhpcy5jb250ZXh0ICkub24oIHR5cGVzLCB0aGlzLnNlbGVjdG9yLCBkYXRhLCBmbiApOwoJCXJldHVybiB0aGlzOwoJfSwKCWRpZTogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHsKCQlqUXVlcnkoIHRoaXMuY29udGV4dCApLm9mZiggdHlwZXMsIHRoaXMuc2VsZWN0b3IgfHwgIioqIiwgZm4gKTsKCQlyZXR1cm4gdGhpczsKCX0sCgoJZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkgewoJCXJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7Cgl9LAoJdW5kZWxlZ2F0ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCB0eXBlcywgZm4gKSB7CgkJLy8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKQoJCXJldHVybiBhcmd1bWVudHMubGVuZ3RoID09IDE/IHRoaXMub2ZmKCBzZWxlY3RvciwgIioqIiApIDogdGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciwgZm4gKTsKCX0sCgoJdHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7CgkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHsKCQkJalF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXMgKTsKCQl9KTsKCX0sCgl0cmlnZ2VySGFuZGxlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7CgkJaWYgKCB0aGlzWzBdICkgewoJCQlyZXR1cm4galF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXNbMF0sIHRydWUgKTsKCQl9Cgl9LAoKCXRvZ2dsZTogZnVuY3Rpb24oIGZuICkgewoJCS8vIFNhdmUgcmVmZXJlbmNlIHRvIGFyZ3VtZW50cyBmb3IgYWNjZXNzIGluIGNsb3N1cmUKCQl2YXIgYXJncyA9IGFyZ3VtZW50cywKCQkJZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKywKCQkJaSA9IDAsCgkJCXRvZ2dsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkvLyBGaWd1cmUgb3V0IHdoaWNoIGZ1bmN0aW9uIHRvIGV4ZWN1dGUKCQkJCXZhciBsYXN0VG9nZ2xlID0gKCBqUXVlcnkuX2RhdGEoIHRoaXMsICJsYXN0VG9nZ2xlIiArIGZuLmd1aWQgKSB8fCAwICkgJSBpOwoJCQkJalF1ZXJ5Ll9kYXRhKCB0aGlzLCAibGFzdFRvZ2dsZSIgKyBmbi5ndWlkLCBsYXN0VG9nZ2xlICsgMSApOwoKCQkJCS8vIE1ha2Ugc3VyZSB0aGF0IGNsaWNrcyBzdG9wCgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKCQkJCS8vIGFuZCBleGVjdXRlIHRoZSBmdW5jdGlvbgoJCQkJcmV0dXJuIGFyZ3NbIGxhc3RUb2dnbGUgXS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgfHwgZmFsc2U7CgkJCX07CgoJCS8vIGxpbmsgYWxsIHRoZSBmdW5jdGlvbnMsIHNvIGFueSBvZiB0aGVtIGNhbiB1bmJpbmQgdGhpcyBjbGljayBoYW5kbGVyCgkJdG9nZ2xlci5ndWlkID0gZ3VpZDsKCQl3aGlsZSAoIGkgPCBhcmdzLmxlbmd0aCApIHsKCQkJYXJnc1sgaSsrIF0uZ3VpZCA9IGd1aWQ7CgkJfQoKCQlyZXR1cm4gdGhpcy5jbGljayggdG9nZ2xlciApOwoJfSwKCglob3ZlcjogZnVuY3Rpb24oIGZuT3ZlciwgZm5PdXQgKSB7CgkJcmV0dXJuIHRoaXMubW91c2VlbnRlciggZm5PdmVyICkubW91c2VsZWF2ZSggZm5PdXQgfHwgZm5PdmVyICk7Cgl9Cn0pOwoKalF1ZXJ5LmVhY2goICgiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgIiArCgkibW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgIiArCgkiY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBlcnJvciBjb250ZXh0bWVudSIpLnNwbGl0KCIgIiksIGZ1bmN0aW9uKCBpLCBuYW1lICkgewoKCS8vIEhhbmRsZSBldmVudCBiaW5kaW5nCglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBkYXRhLCBmbiApIHsKCQlpZiAoIGZuID09IG51bGwgKSB7CgkJCWZuID0gZGF0YTsKCQkJZGF0YSA9IG51bGw7CgkJfQoKCQlyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDAgPwoJCQl0aGlzLm9uKCBuYW1lLCBudWxsLCBkYXRhLCBmbiApIDoKCQkJdGhpcy50cmlnZ2VyKCBuYW1lICk7Cgl9OwoKCWlmICggalF1ZXJ5LmF0dHJGbiApIHsKCQlqUXVlcnkuYXR0ckZuWyBuYW1lIF0gPSB0cnVlOwoJfQoKCWlmICggcmtleUV2ZW50LnRlc3QoIG5hbWUgKSApIHsKCQlqUXVlcnkuZXZlbnQuZml4SG9va3NbIG5hbWUgXSA9IGpRdWVyeS5ldmVudC5rZXlIb29rczsKCX0KCglpZiAoIHJtb3VzZUV2ZW50LnRlc3QoIG5hbWUgKSApIHsKCQlqUXVlcnkuZXZlbnQuZml4SG9va3NbIG5hbWUgXSA9IGpRdWVyeS5ldmVudC5tb3VzZUhvb2tzOwoJfQp9KTsKCgoKLyohCiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lCiAqICBDb3B5cmlnaHQgMjAxMSwgVGhlIERvam8gRm91bmRhdGlvbgogKiAgUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCwgQlNELCBhbmQgR1BMIExpY2Vuc2VzLgogKiAgTW9yZSBpbmZvcm1hdGlvbjogaHR0cDovL3NpenpsZWpzLmNvbS8KICovCihmdW5jdGlvbigpewoKdmFyIGNodW5rZXIgPSAvKCg/OlwoKD86XChbXigpXStcKXxbXigpXSspK1wpfFxbKD86XFtbXlxbXF1dKlxdfFsnIl1bXiciXSpbJyJdfFteXFtcXSciXSspK1xdfFxcLnxbXiA+K34sKFxbXFxdKykrfFs+K35dKShccyosXHMqKT8oKD86LnxccnxcbikqKS9nLAoJZXhwYW5kbyA9ICJzaXpjYWNoZSIgKyAoTWF0aC5yYW5kb20oKSArICcnKS5yZXBsYWNlKCcuJywgJycpLAoJZG9uZSA9IDAsCgl0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcsCgloYXNEdXBsaWNhdGUgPSBmYWxzZSwKCWJhc2VIYXNEdXBsaWNhdGUgPSB0cnVlLAoJckJhY2tzbGFzaCA9IC9cXC9nLAoJclJldHVybiA9IC9cclxuL2csCglyTm9uV29yZCA9IC9cVy87CgovLyBIZXJlIHdlIGNoZWNrIGlmIHRoZSBKYXZhU2NyaXB0IGVuZ2luZSBpcyB1c2luZyBzb21lIHNvcnQgb2YKLy8gb3B0aW1pemF0aW9uIHdoZXJlIGl0IGRvZXMgbm90IGFsd2F5cyBjYWxsIG91ciBjb21wYXJpc2lvbgovLyBmdW5jdGlvbi4gSWYgdGhhdCBpcyB0aGUgY2FzZSwgZGlzY2FyZCB0aGUgaGFzRHVwbGljYXRlIHZhbHVlLgovLyAgIFRodXMgZmFyIHRoYXQgaW5jbHVkZXMgR29vZ2xlIENocm9tZS4KWzAsIDBdLnNvcnQoZnVuY3Rpb24oKSB7CgliYXNlSGFzRHVwbGljYXRlID0gZmFsc2U7CglyZXR1cm4gMDsKfSk7Cgp2YXIgU2l6emxlID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkgewoJcmVzdWx0cyA9IHJlc3VsdHMgfHwgW107Cgljb250ZXh0ID0gY29udGV4dCB8fCBkb2N1bWVudDsKCgl2YXIgb3JpZ0NvbnRleHQgPSBjb250ZXh0OwoKCWlmICggY29udGV4dC5ub2RlVHlwZSAhPT0gMSAmJiBjb250ZXh0Lm5vZGVUeXBlICE9PSA5ICkgewoJCXJldHVybiBbXTsKCX0KCglpZiAoICFzZWxlY3RvciB8fCB0eXBlb2Ygc2VsZWN0b3IgIT09ICJzdHJpbmciICkgewoJCXJldHVybiByZXN1bHRzOwoJfQoKCXZhciBtLCBzZXQsIGNoZWNrU2V0LCBleHRyYSwgcmV0LCBjdXIsIHBvcCwgaSwKCQlwcnVuZSA9IHRydWUsCgkJY29udGV4dFhNTCA9IFNpenpsZS5pc1hNTCggY29udGV4dCApLAoJCXBhcnRzID0gW10sCgkJc29GYXIgPSBzZWxlY3RvcjsKCgkvLyBSZXNldCB0aGUgcG9zaXRpb24gb2YgdGhlIGNodW5rZXIgcmVnZXhwIChzdGFydCBmcm9tIGhlYWQpCglkbyB7CgkJY2h1bmtlci5leGVjKCAiIiApOwoJCW0gPSBjaHVua2VyLmV4ZWMoIHNvRmFyICk7CgoJCWlmICggbSApIHsKCQkJc29GYXIgPSBtWzNdOwoKCQkJcGFydHMucHVzaCggbVsxXSApOwoKCQkJaWYgKCBtWzJdICkgewoJCQkJZXh0cmEgPSBtWzNdOwoJCQkJYnJlYWs7CgkJCX0KCQl9Cgl9IHdoaWxlICggbSApOwoKCWlmICggcGFydHMubGVuZ3RoID4gMSAmJiBvcmlnUE9TLmV4ZWMoIHNlbGVjdG9yICkgKSB7CgoJCWlmICggcGFydHMubGVuZ3RoID09PSAyICYmIEV4cHIucmVsYXRpdmVbIHBhcnRzWzBdIF0gKSB7CgkJCXNldCA9IHBvc1Byb2Nlc3MoIHBhcnRzWzBdICsgcGFydHNbMV0sIGNvbnRleHQsIHNlZWQgKTsKCgkJfSBlbHNlIHsKCQkJc2V0ID0gRXhwci5yZWxhdGl2ZVsgcGFydHNbMF0gXSA/CgkJCQlbIGNvbnRleHQgXSA6CgkJCQlTaXp6bGUoIHBhcnRzLnNoaWZ0KCksIGNvbnRleHQgKTsKCgkJCXdoaWxlICggcGFydHMubGVuZ3RoICkgewoJCQkJc2VsZWN0b3IgPSBwYXJ0cy5zaGlmdCgpOwoKCQkJCWlmICggRXhwci5yZWxhdGl2ZVsgc2VsZWN0b3IgXSApIHsKCQkJCQlzZWxlY3RvciArPSBwYXJ0cy5zaGlmdCgpOwoJCQkJfQoKCQkJCXNldCA9IHBvc1Byb2Nlc3MoIHNlbGVjdG9yLCBzZXQsIHNlZWQgKTsKCQkJfQoJCX0KCgl9IGVsc2UgewoJCS8vIFRha2UgYSBzaG9ydGN1dCBhbmQgc2V0IHRoZSBjb250ZXh0IGlmIHRoZSByb290IHNlbGVjdG9yIGlzIGFuIElECgkJLy8gKGJ1dCBub3QgaWYgaXQnbGwgYmUgZmFzdGVyIGlmIHRoZSBpbm5lciBzZWxlY3RvciBpcyBhbiBJRCkKCQlpZiAoICFzZWVkICYmIHBhcnRzLmxlbmd0aCA+IDEgJiYgY29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiAhY29udGV4dFhNTCAmJgoJCQkJRXhwci5tYXRjaC5JRC50ZXN0KHBhcnRzWzBdKSAmJiAhRXhwci5tYXRjaC5JRC50ZXN0KHBhcnRzW3BhcnRzLmxlbmd0aCAtIDFdKSApIHsKCgkJCXJldCA9IFNpenpsZS5maW5kKCBwYXJ0cy5zaGlmdCgpLCBjb250ZXh0LCBjb250ZXh0WE1MICk7CgkJCWNvbnRleHQgPSByZXQuZXhwciA/CgkJCQlTaXp6bGUuZmlsdGVyKCByZXQuZXhwciwgcmV0LnNldCApWzBdIDoKCQkJCXJldC5zZXRbMF07CgkJfQoKCQlpZiAoIGNvbnRleHQgKSB7CgkJCXJldCA9IHNlZWQgPwoJCQkJeyBleHByOiBwYXJ0cy5wb3AoKSwgc2V0OiBtYWtlQXJyYXkoc2VlZCkgfSA6CgkJCQlTaXp6bGUuZmluZCggcGFydHMucG9wKCksIHBhcnRzLmxlbmd0aCA9PT0gMSAmJiAocGFydHNbMF0gPT09ICJ+IiB8fCBwYXJ0c1swXSA9PT0gIisiKSAmJiBjb250ZXh0LnBhcmVudE5vZGUgPyBjb250ZXh0LnBhcmVudE5vZGUgOiBjb250ZXh0LCBjb250ZXh0WE1MICk7CgoJCQlzZXQgPSByZXQuZXhwciA/CgkJCQlTaXp6bGUuZmlsdGVyKCByZXQuZXhwciwgcmV0LnNldCApIDoKCQkJCXJldC5zZXQ7CgoJCQlpZiAoIHBhcnRzLmxlbmd0aCA+IDAgKSB7CgkJCQljaGVja1NldCA9IG1ha2VBcnJheSggc2V0ICk7CgoJCQl9IGVsc2UgewoJCQkJcHJ1bmUgPSBmYWxzZTsKCQkJfQoKCQkJd2hpbGUgKCBwYXJ0cy5sZW5ndGggKSB7CgkJCQljdXIgPSBwYXJ0cy5wb3AoKTsKCQkJCXBvcCA9IGN1cjsKCgkJCQlpZiAoICFFeHByLnJlbGF0aXZlWyBjdXIgXSApIHsKCQkJCQljdXIgPSAiIjsKCQkJCX0gZWxzZSB7CgkJCQkJcG9wID0gcGFydHMucG9wKCk7CgkJCQl9CgoJCQkJaWYgKCBwb3AgPT0gbnVsbCApIHsKCQkJCQlwb3AgPSBjb250ZXh0OwoJCQkJfQoKCQkJCUV4cHIucmVsYXRpdmVbIGN1ciBdKCBjaGVja1NldCwgcG9wLCBjb250ZXh0WE1MICk7CgkJCX0KCgkJfSBlbHNlIHsKCQkJY2hlY2tTZXQgPSBwYXJ0cyA9IFtdOwoJCX0KCX0KCglpZiAoICFjaGVja1NldCApIHsKCQljaGVja1NldCA9IHNldDsKCX0KCglpZiAoICFjaGVja1NldCApIHsKCQlTaXp6bGUuZXJyb3IoIGN1ciB8fCBzZWxlY3RvciApOwoJfQoKCWlmICggdG9TdHJpbmcuY2FsbChjaGVja1NldCkgPT09ICJbb2JqZWN0IEFycmF5XSIgKSB7CgkJaWYgKCAhcHJ1bmUgKSB7CgkJCXJlc3VsdHMucHVzaC5hcHBseSggcmVzdWx0cywgY2hlY2tTZXQgKTsKCgkJfSBlbHNlIGlmICggY29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID09PSAxICkgewoJCQlmb3IgKCBpID0gMDsgY2hlY2tTZXRbaV0gIT0gbnVsbDsgaSsrICkgewoJCQkJaWYgKCBjaGVja1NldFtpXSAmJiAoY2hlY2tTZXRbaV0gPT09IHRydWUgfHwgY2hlY2tTZXRbaV0ubm9kZVR5cGUgPT09IDEgJiYgU2l6emxlLmNvbnRhaW5zKGNvbnRleHQsIGNoZWNrU2V0W2ldKSkgKSB7CgkJCQkJcmVzdWx0cy5wdXNoKCBzZXRbaV0gKTsKCQkJCX0KCQkJfQoKCQl9IGVsc2UgewoJCQlmb3IgKCBpID0gMDsgY2hlY2tTZXRbaV0gIT0gbnVsbDsgaSsrICkgewoJCQkJaWYgKCBjaGVja1NldFtpXSAmJiBjaGVja1NldFtpXS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQlyZXN1bHRzLnB1c2goIHNldFtpXSApOwoJCQkJfQoJCQl9CgkJfQoKCX0gZWxzZSB7CgkJbWFrZUFycmF5KCBjaGVja1NldCwgcmVzdWx0cyApOwoJfQoKCWlmICggZXh0cmEgKSB7CgkJU2l6emxlKCBleHRyYSwgb3JpZ0NvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTsKCQlTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApOwoJfQoKCXJldHVybiByZXN1bHRzOwp9OwoKU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHsKCWlmICggc29ydE9yZGVyICkgewoJCWhhc0R1cGxpY2F0ZSA9IGJhc2VIYXNEdXBsaWNhdGU7CgkJcmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTsKCgkJaWYgKCBoYXNEdXBsaWNhdGUgKSB7CgkJCWZvciAoIHZhciBpID0gMTsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKysgKSB7CgkJCQlpZiAoIHJlc3VsdHNbaV0gPT09IHJlc3VsdHNbIGkgLSAxIF0gKSB7CgkJCQkJcmVzdWx0cy5zcGxpY2UoIGktLSwgMSApOwoJCQkJfQoJCQl9CgkJfQoJfQoKCXJldHVybiByZXN1bHRzOwp9OwoKU2l6emxlLm1hdGNoZXMgPSBmdW5jdGlvbiggZXhwciwgc2V0ICkgewoJcmV0dXJuIFNpenpsZSggZXhwciwgbnVsbCwgbnVsbCwgc2V0ICk7Cn07CgpTaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIG5vZGUsIGV4cHIgKSB7CglyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBudWxsLCBbbm9kZV0gKS5sZW5ndGggPiAwOwp9OwoKU2l6emxlLmZpbmQgPSBmdW5jdGlvbiggZXhwciwgY29udGV4dCwgaXNYTUwgKSB7Cgl2YXIgc2V0LCBpLCBsZW4sIG1hdGNoLCB0eXBlLCBsZWZ0OwoKCWlmICggIWV4cHIgKSB7CgkJcmV0dXJuIFtdOwoJfQoKCWZvciAoIGkgPSAwLCBsZW4gPSBFeHByLm9yZGVyLmxlbmd0aDsgaSA8IGxlbjsgaSsrICkgewoJCXR5cGUgPSBFeHByLm9yZGVyW2ldOwoKCQlpZiAoIChtYXRjaCA9IEV4cHIubGVmdE1hdGNoWyB0eXBlIF0uZXhlYyggZXhwciApKSApIHsKCQkJbGVmdCA9IG1hdGNoWzFdOwoJCQltYXRjaC5zcGxpY2UoIDEsIDEgKTsKCgkJCWlmICggbGVmdC5zdWJzdHIoIGxlZnQubGVuZ3RoIC0gMSApICE9PSAiXFwiICkgewoJCQkJbWF0Y2hbMV0gPSAobWF0Y2hbMV0gfHwgIiIpLnJlcGxhY2UoIHJCYWNrc2xhc2gsICIiICk7CgkJCQlzZXQgPSBFeHByLmZpbmRbIHR5cGUgXSggbWF0Y2gsIGNvbnRleHQsIGlzWE1MICk7CgoJCQkJaWYgKCBzZXQgIT0gbnVsbCApIHsKCQkJCQlleHByID0gZXhwci5yZXBsYWNlKCBFeHByLm1hdGNoWyB0eXBlIF0sICIiICk7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0KCQl9Cgl9CgoJaWYgKCAhc2V0ICkgewoJCXNldCA9IHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVkIiA/CgkJCWNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoICIqIiApIDoKCQkJW107Cgl9CgoJcmV0dXJuIHsgc2V0OiBzZXQsIGV4cHI6IGV4cHIgfTsKfTsKClNpenpsZS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgc2V0LCBpbnBsYWNlLCBub3QgKSB7Cgl2YXIgbWF0Y2gsIGFueUZvdW5kLAoJCXR5cGUsIGZvdW5kLCBpdGVtLCBmaWx0ZXIsIGxlZnQsCgkJaSwgcGFzcywKCQlvbGQgPSBleHByLAoJCXJlc3VsdCA9IFtdLAoJCWN1ckxvb3AgPSBzZXQsCgkJaXNYTUxGaWx0ZXIgPSBzZXQgJiYgc2V0WzBdICYmIFNpenpsZS5pc1hNTCggc2V0WzBdICk7CgoJd2hpbGUgKCBleHByICYmIHNldC5sZW5ndGggKSB7CgkJZm9yICggdHlwZSBpbiBFeHByLmZpbHRlciApIHsKCQkJaWYgKCAobWF0Y2ggPSBFeHByLmxlZnRNYXRjaFsgdHlwZSBdLmV4ZWMoIGV4cHIgKSkgIT0gbnVsbCAmJiBtYXRjaFsyXSApIHsKCQkJCWZpbHRlciA9IEV4cHIuZmlsdGVyWyB0eXBlIF07CgkJCQlsZWZ0ID0gbWF0Y2hbMV07CgoJCQkJYW55Rm91bmQgPSBmYWxzZTsKCgkJCQltYXRjaC5zcGxpY2UoMSwxKTsKCgkJCQlpZiAoIGxlZnQuc3Vic3RyKCBsZWZ0Lmxlbmd0aCAtIDEgKSA9PT0gIlxcIiApIHsKCQkJCQljb250aW51ZTsKCQkJCX0KCgkJCQlpZiAoIGN1ckxvb3AgPT09IHJlc3VsdCApIHsKCQkJCQlyZXN1bHQgPSBbXTsKCQkJCX0KCgkJCQlpZiAoIEV4cHIucHJlRmlsdGVyWyB0eXBlIF0gKSB7CgkJCQkJbWF0Y2ggPSBFeHByLnByZUZpbHRlclsgdHlwZSBdKCBtYXRjaCwgY3VyTG9vcCwgaW5wbGFjZSwgcmVzdWx0LCBub3QsIGlzWE1MRmlsdGVyICk7CgoJCQkJCWlmICggIW1hdGNoICkgewoJCQkJCQlhbnlGb3VuZCA9IGZvdW5kID0gdHJ1ZTsKCgkJCQkJfSBlbHNlIGlmICggbWF0Y2ggPT09IHRydWUgKSB7CgkJCQkJCWNvbnRpbnVlOwoJCQkJCX0KCQkJCX0KCgkJCQlpZiAoIG1hdGNoICkgewoJCQkJCWZvciAoIGkgPSAwOyAoaXRlbSA9IGN1ckxvb3BbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJCQkJaWYgKCBpdGVtICkgewoJCQkJCQkJZm91bmQgPSBmaWx0ZXIoIGl0ZW0sIG1hdGNoLCBpLCBjdXJMb29wICk7CgkJCQkJCQlwYXNzID0gbm90IF4gZm91bmQ7CgoJCQkJCQkJaWYgKCBpbnBsYWNlICYmIGZvdW5kICE9IG51bGwgKSB7CgkJCQkJCQkJaWYgKCBwYXNzICkgewoJCQkJCQkJCQlhbnlGb3VuZCA9IHRydWU7CgoJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJCWN1ckxvb3BbaV0gPSBmYWxzZTsKCQkJCQkJCQl9CgoJCQkJCQkJfSBlbHNlIGlmICggcGFzcyApIHsKCQkJCQkJCQlyZXN1bHQucHVzaCggaXRlbSApOwoJCQkJCQkJCWFueUZvdW5kID0gdHJ1ZTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0KCQkJCX0KCgkJCQlpZiAoIGZvdW5kICE9PSB1bmRlZmluZWQgKSB7CgkJCQkJaWYgKCAhaW5wbGFjZSApIHsKCQkJCQkJY3VyTG9vcCA9IHJlc3VsdDsKCQkJCQl9CgoJCQkJCWV4cHIgPSBleHByLnJlcGxhY2UoIEV4cHIubWF0Y2hbIHR5cGUgXSwgIiIgKTsKCgkJCQkJaWYgKCAhYW55Rm91bmQgKSB7CgkJCQkJCXJldHVybiBbXTsKCQkJCQl9CgoJCQkJCWJyZWFrOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBJbXByb3BlciBleHByZXNzaW9uCgkJaWYgKCBleHByID09PSBvbGQgKSB7CgkJCWlmICggYW55Rm91bmQgPT0gbnVsbCApIHsKCQkJCVNpenpsZS5lcnJvciggZXhwciApOwoKCQkJfSBlbHNlIHsKCQkJCWJyZWFrOwoJCQl9CgkJfQoKCQlvbGQgPSBleHByOwoJfQoKCXJldHVybiBjdXJMb29wOwp9OwoKU2l6emxlLmVycm9yID0gZnVuY3Rpb24oIG1zZyApIHsKCXRocm93IG5ldyBFcnJvciggIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246ICIgKyBtc2cgKTsKfTsKCi8qKgogKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyZWl2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2RlcwogKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW0KICovCnZhciBnZXRUZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHsKICAgIHZhciBpLCBub2RlLAoJCW5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZSwKCQlyZXQgPSAiIjsKCglpZiAoIG5vZGVUeXBlICkgewoJCWlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkgewoJCQkvLyBVc2UgdGV4dENvbnRlbnQgfHwgaW5uZXJUZXh0IGZvciBlbGVtZW50cwoJCQlpZiAoIHR5cGVvZiBlbGVtLnRleHRDb250ZW50ID09PSAnc3RyaW5nJyApIHsKCQkJCXJldHVybiBlbGVtLnRleHRDb250ZW50OwoJCQl9IGVsc2UgaWYgKCB0eXBlb2YgZWxlbS5pbm5lclRleHQgPT09ICdzdHJpbmcnICkgewoJCQkJLy8gUmVwbGFjZSBJRSdzIGNhcnJpYWdlIHJldHVybnMKCQkJCXJldHVybiBlbGVtLmlubmVyVGV4dC5yZXBsYWNlKCByUmV0dXJuLCAnJyApOwoJCQl9IGVsc2UgewoJCQkJLy8gVHJhdmVyc2UgaXQncyBjaGlsZHJlbgoJCQkJZm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcpIHsKCQkJCQlyZXQgKz0gZ2V0VGV4dCggZWxlbSApOwoJCQkJfQoJCQl9CgkJfSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7CgkJCXJldHVybiBlbGVtLm5vZGVWYWx1ZTsKCQl9Cgl9IGVsc2UgewoKCQkvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheQoJCWZvciAoIGkgPSAwOyAobm9kZSA9IGVsZW1baV0pOyBpKysgKSB7CgkJCS8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzCgkJCWlmICggbm9kZS5ub2RlVHlwZSAhPT0gOCApIHsKCQkJCXJldCArPSBnZXRUZXh0KCBub2RlICk7CgkJCX0KCQl9Cgl9CglyZXR1cm4gcmV0Owp9OwoKdmFyIEV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0gewoJb3JkZXI6IFsgIklEIiwgIk5BTUUiLCAiVEFHIiBdLAoKCW1hdGNoOiB7CgkJSUQ6IC8jKCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspLywKCQlDTEFTUzogL1wuKCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspLywKCQlOQU1FOiAvXFtuYW1lPVsnIl0qKCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspWyciXSpcXS8sCgkJQVRUUjogL1xbXHMqKCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspXHMqKD86KFxTPz0pXHMqKD86KFsnIl0pKC4qPylcM3woIz8oPzpbXHdcdTAwYzAtXHVGRkZGXC1dfFxcLikqKXwpfClccypcXS8sCgkJVEFHOiAvXigoPzpbXHdcdTAwYzAtXHVGRkZGXCpcLV18XFwuKSspLywKCQlDSElMRDogLzoob25seXxudGh8bGFzdHxmaXJzdCktY2hpbGQoPzpcKFxzKihldmVufG9kZHwoPzpbK1wtXT9cZCt8KD86WytcLV0/XGQqKT9uXHMqKD86WytcLV1ccypcZCspPykpXHMqXCkpPy8sCgkJUE9TOiAvOihudGh8ZXF8Z3R8bHR8Zmlyc3R8bGFzdHxldmVufG9kZCkoPzpcKChcZCopXCkpPyg/PVteXC1dfCQpLywKCQlQU0VVRE86IC86KCg/Oltcd1x1MDBjMC1cdUZGRkZcLV18XFwuKSspKD86XCgoWyciXT8pKCg/OlwoW15cKV0rXCl8W15cKFwpXSopKylcMlwpKT8vCgl9LAoKCWxlZnRNYXRjaDoge30sCgoJYXR0ck1hcDogewoJCSJjbGFzcyI6ICJjbGFzc05hbWUiLAoJCSJmb3IiOiAiaHRtbEZvciIKCX0sCgoJYXR0ckhhbmRsZTogewoJCWhyZWY6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoICJocmVmIiApOwoJCX0sCgkJdHlwZTogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggInR5cGUiICk7CgkJfQoJfSwKCglyZWxhdGl2ZTogewoJCSIrIjogZnVuY3Rpb24oY2hlY2tTZXQsIHBhcnQpewoJCQl2YXIgaXNQYXJ0U3RyID0gdHlwZW9mIHBhcnQgPT09ICJzdHJpbmciLAoJCQkJaXNUYWcgPSBpc1BhcnRTdHIgJiYgIXJOb25Xb3JkLnRlc3QoIHBhcnQgKSwKCQkJCWlzUGFydFN0ck5vdFRhZyA9IGlzUGFydFN0ciAmJiAhaXNUYWc7CgoJCQlpZiAoIGlzVGFnICkgewoJCQkJcGFydCA9IHBhcnQudG9Mb3dlckNhc2UoKTsKCQkJfQoKCQkJZm9yICggdmFyIGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoLCBlbGVtOyBpIDwgbDsgaSsrICkgewoJCQkJaWYgKCAoZWxlbSA9IGNoZWNrU2V0W2ldKSApIHsKCQkJCQl3aGlsZSAoIChlbGVtID0gZWxlbS5wcmV2aW91c1NpYmxpbmcpICYmIGVsZW0ubm9kZVR5cGUgIT09IDEgKSB7fQoKCQkJCQljaGVja1NldFtpXSA9IGlzUGFydFN0ck5vdFRhZyB8fCBlbGVtICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gcGFydCA/CgkJCQkJCWVsZW0gfHwgZmFsc2UgOgoJCQkJCQllbGVtID09PSBwYXJ0OwoJCQkJfQoJCQl9CgoJCQlpZiAoIGlzUGFydFN0ck5vdFRhZyApIHsKCQkJCVNpenpsZS5maWx0ZXIoIHBhcnQsIGNoZWNrU2V0LCB0cnVlICk7CgkJCX0KCQl9LAoKCQkiPiI6IGZ1bmN0aW9uKCBjaGVja1NldCwgcGFydCApIHsKCQkJdmFyIGVsZW0sCgkJCQlpc1BhcnRTdHIgPSB0eXBlb2YgcGFydCA9PT0gInN0cmluZyIsCgkJCQlpID0gMCwKCQkJCWwgPSBjaGVja1NldC5sZW5ndGg7CgoJCQlpZiAoIGlzUGFydFN0ciAmJiAhck5vbldvcmQudGVzdCggcGFydCApICkgewoJCQkJcGFydCA9IHBhcnQudG9Mb3dlckNhc2UoKTsKCgkJCQlmb3IgKCA7IGkgPCBsOyBpKysgKSB7CgkJCQkJZWxlbSA9IGNoZWNrU2V0W2ldOwoKCQkJCQlpZiAoIGVsZW0gKSB7CgkJCQkJCXZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7CgkJCQkJCWNoZWNrU2V0W2ldID0gcGFyZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IHBhcnQgPyBwYXJlbnQgOiBmYWxzZTsKCQkJCQl9CgkJCQl9CgoJCQl9IGVsc2UgewoJCQkJZm9yICggOyBpIDwgbDsgaSsrICkgewoJCQkJCWVsZW0gPSBjaGVja1NldFtpXTsKCgkJCQkJaWYgKCBlbGVtICkgewoJCQkJCQljaGVja1NldFtpXSA9IGlzUGFydFN0ciA/CgkJCQkJCQllbGVtLnBhcmVudE5vZGUgOgoJCQkJCQkJZWxlbS5wYXJlbnROb2RlID09PSBwYXJ0OwoJCQkJCX0KCQkJCX0KCgkJCQlpZiAoIGlzUGFydFN0ciApIHsKCQkJCQlTaXp6bGUuZmlsdGVyKCBwYXJ0LCBjaGVja1NldCwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfSwKCgkJIiI6IGZ1bmN0aW9uKGNoZWNrU2V0LCBwYXJ0LCBpc1hNTCl7CgkJCXZhciBub2RlQ2hlY2ssCgkJCQlkb25lTmFtZSA9IGRvbmUrKywKCQkJCWNoZWNrRm4gPSBkaXJDaGVjazsKCgkJCWlmICggdHlwZW9mIHBhcnQgPT09ICJzdHJpbmciICYmICFyTm9uV29yZC50ZXN0KCBwYXJ0ICkgKSB7CgkJCQlwYXJ0ID0gcGFydC50b0xvd2VyQ2FzZSgpOwoJCQkJbm9kZUNoZWNrID0gcGFydDsKCQkJCWNoZWNrRm4gPSBkaXJOb2RlQ2hlY2s7CgkJCX0KCgkJCWNoZWNrRm4oICJwYXJlbnROb2RlIiwgcGFydCwgZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICk7CgkJfSwKCgkJIn4iOiBmdW5jdGlvbiggY2hlY2tTZXQsIHBhcnQsIGlzWE1MICkgewoJCQl2YXIgbm9kZUNoZWNrLAoJCQkJZG9uZU5hbWUgPSBkb25lKyssCgkJCQljaGVja0ZuID0gZGlyQ2hlY2s7CgoJCQlpZiAoIHR5cGVvZiBwYXJ0ID09PSAic3RyaW5nIiAmJiAhck5vbldvcmQudGVzdCggcGFydCApICkgewoJCQkJcGFydCA9IHBhcnQudG9Mb3dlckNhc2UoKTsKCQkJCW5vZGVDaGVjayA9IHBhcnQ7CgkJCQljaGVja0ZuID0gZGlyTm9kZUNoZWNrOwoJCQl9CgoJCQljaGVja0ZuKCAicHJldmlvdXNTaWJsaW5nIiwgcGFydCwgZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICk7CgkJfQoJfSwKCglmaW5kOiB7CgkJSUQ6IGZ1bmN0aW9uKCBtYXRjaCwgY29udGV4dCwgaXNYTUwgKSB7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09ICJ1bmRlZmluZWQiICYmICFpc1hNTCApIHsKCQkJCXZhciBtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZChtYXRjaFsxXSk7CgkJCQkvLyBDaGVjayBwYXJlbnROb2RlIHRvIGNhdGNoIHdoZW4gQmxhY2tiZXJyeSA0LjYgcmV0dXJucwoJCQkJLy8gbm9kZXMgdGhhdCBhcmUgbm8gbG9uZ2VyIGluIHRoZSBkb2N1bWVudCAjNjk2MwoJCQkJcmV0dXJuIG0gJiYgbS5wYXJlbnROb2RlID8gW21dIDogW107CgkJCX0KCQl9LAoKCQlOQU1FOiBmdW5jdGlvbiggbWF0Y2gsIGNvbnRleHQgKSB7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUgIT09ICJ1bmRlZmluZWQiICkgewoJCQkJdmFyIHJldCA9IFtdLAoJCQkJCXJlc3VsdHMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlOYW1lKCBtYXRjaFsxXSApOwoKCQkJCWZvciAoIHZhciBpID0gMCwgbCA9IHJlc3VsdHMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCWlmICggcmVzdWx0c1tpXS5nZXRBdHRyaWJ1dGUoIm5hbWUiKSA9PT0gbWF0Y2hbMV0gKSB7CgkJCQkJCXJldC5wdXNoKCByZXN1bHRzW2ldICk7CgkJCQkJfQoJCQkJfQoKCQkJCXJldHVybiByZXQubGVuZ3RoID09PSAwID8gbnVsbCA6IHJldDsKCQkJfQoJCX0sCgoJCVRBRzogZnVuY3Rpb24oIG1hdGNoLCBjb250ZXh0ICkgewoJCQlpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVkIiApIHsKCQkJCXJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBtYXRjaFsxXSApOwoJCQl9CgkJfQoJfSwKCXByZUZpbHRlcjogewoJCUNMQVNTOiBmdW5jdGlvbiggbWF0Y2gsIGN1ckxvb3AsIGlucGxhY2UsIHJlc3VsdCwgbm90LCBpc1hNTCApIHsKCQkJbWF0Y2ggPSAiICIgKyBtYXRjaFsxXS5yZXBsYWNlKCByQmFja3NsYXNoLCAiIiApICsgIiAiOwoKCQkJaWYgKCBpc1hNTCApIHsKCQkJCXJldHVybiBtYXRjaDsKCQkJfQoKCQkJZm9yICggdmFyIGkgPSAwLCBlbGVtOyAoZWxlbSA9IGN1ckxvb3BbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJCWlmICggZWxlbSApIHsKCQkJCQlpZiAoIG5vdCBeIChlbGVtLmNsYXNzTmFtZSAmJiAoIiAiICsgZWxlbS5jbGFzc05hbWUgKyAiICIpLnJlcGxhY2UoL1tcdFxuXHJdL2csICIgIikuaW5kZXhPZihtYXRjaCkgPj0gMCkgKSB7CgkJCQkJCWlmICggIWlucGxhY2UgKSB7CgkJCQkJCQlyZXN1bHQucHVzaCggZWxlbSApOwoJCQkJCQl9CgoJCQkJCX0gZWxzZSBpZiAoIGlucGxhY2UgKSB7CgkJCQkJCWN1ckxvb3BbaV0gPSBmYWxzZTsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJCXJldHVybiBmYWxzZTsKCQl9LAoKCQlJRDogZnVuY3Rpb24oIG1hdGNoICkgewoJCQlyZXR1cm4gbWF0Y2hbMV0ucmVwbGFjZSggckJhY2tzbGFzaCwgIiIgKTsKCQl9LAoKCQlUQUc6IGZ1bmN0aW9uKCBtYXRjaCwgY3VyTG9vcCApIHsKCQkJcmV0dXJuIG1hdGNoWzFdLnJlcGxhY2UoIHJCYWNrc2xhc2gsICIiICkudG9Mb3dlckNhc2UoKTsKCQl9LAoKCQlDSElMRDogZnVuY3Rpb24oIG1hdGNoICkgewoJCQlpZiAoIG1hdGNoWzFdID09PSAibnRoIiApIHsKCQkJCWlmICggIW1hdGNoWzJdICkgewoJCQkJCVNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTsKCQkJCX0KCgkJCQltYXRjaFsyXSA9IG1hdGNoWzJdLnJlcGxhY2UoL15cK3xccyovZywgJycpOwoKCQkJCS8vIHBhcnNlIGVxdWF0aW9ucyBsaWtlICdldmVuJywgJ29kZCcsICc1JywgJzJuJywgJzNuKzInLCAnNG4tMScsICctbis2JwoJCQkJdmFyIHRlc3QgPSAvKC0/KShcZCopKD86bihbK1wtXT9cZCopKT8vLmV4ZWMoCgkJCQkJbWF0Y2hbMl0gPT09ICJldmVuIiAmJiAiMm4iIHx8IG1hdGNoWzJdID09PSAib2RkIiAmJiAiMm4rMSIgfHwKCQkJCQkhL1xELy50ZXN0KCBtYXRjaFsyXSApICYmICIwbisiICsgbWF0Y2hbMl0gfHwgbWF0Y2hbMl0pOwoKCQkJCS8vIGNhbGN1bGF0ZSB0aGUgbnVtYmVycyAoZmlyc3QpbisobGFzdCkgaW5jbHVkaW5nIGlmIHRoZXkgYXJlIG5lZ2F0aXZlCgkJCQltYXRjaFsyXSA9ICh0ZXN0WzFdICsgKHRlc3RbMl0gfHwgMSkpIC0gMDsKCQkJCW1hdGNoWzNdID0gdGVzdFszXSAtIDA7CgkJCX0KCQkJZWxzZSBpZiAoIG1hdGNoWzJdICkgewoJCQkJU2l6emxlLmVycm9yKCBtYXRjaFswXSApOwoJCQl9CgoJCQkvLyBUT0RPOiBNb3ZlIHRvIG5vcm1hbCBjYWNoaW5nIHN5c3RlbQoJCQltYXRjaFswXSA9IGRvbmUrKzsKCgkJCXJldHVybiBtYXRjaDsKCQl9LAoKCQlBVFRSOiBmdW5jdGlvbiggbWF0Y2gsIGN1ckxvb3AsIGlucGxhY2UsIHJlc3VsdCwgbm90LCBpc1hNTCApIHsKCQkJdmFyIG5hbWUgPSBtYXRjaFsxXSA9IG1hdGNoWzFdLnJlcGxhY2UoIHJCYWNrc2xhc2gsICIiICk7CgoJCQlpZiAoICFpc1hNTCAmJiBFeHByLmF0dHJNYXBbbmFtZV0gKSB7CgkJCQltYXRjaFsxXSA9IEV4cHIuYXR0ck1hcFtuYW1lXTsKCQkJfQoKCQkJLy8gSGFuZGxlIGlmIGFuIHVuLXF1b3RlZCB2YWx1ZSB3YXMgdXNlZAoJCQltYXRjaFs0XSA9ICggbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgIiIgKS5yZXBsYWNlKCByQmFja3NsYXNoLCAiIiApOwoKCQkJaWYgKCBtYXRjaFsyXSA9PT0gIn49IiApIHsKCQkJCW1hdGNoWzRdID0gIiAiICsgbWF0Y2hbNF0gKyAiICI7CgkJCX0KCgkJCXJldHVybiBtYXRjaDsKCQl9LAoKCQlQU0VVRE86IGZ1bmN0aW9uKCBtYXRjaCwgY3VyTG9vcCwgaW5wbGFjZSwgcmVzdWx0LCBub3QgKSB7CgkJCWlmICggbWF0Y2hbMV0gPT09ICJub3QiICkgewoJCQkJLy8gSWYgd2UncmUgZGVhbGluZyB3aXRoIGEgY29tcGxleCBleHByZXNzaW9uLCBvciBhIHNpbXBsZSBvbmUKCQkJCWlmICggKCBjaHVua2VyLmV4ZWMobWF0Y2hbM10pIHx8ICIiICkubGVuZ3RoID4gMSB8fCAvXlx3Ly50ZXN0KG1hdGNoWzNdKSApIHsKCQkJCQltYXRjaFszXSA9IFNpenpsZShtYXRjaFszXSwgbnVsbCwgbnVsbCwgY3VyTG9vcCk7CgoJCQkJfSBlbHNlIHsKCQkJCQl2YXIgcmV0ID0gU2l6emxlLmZpbHRlcihtYXRjaFszXSwgY3VyTG9vcCwgaW5wbGFjZSwgdHJ1ZSBeIG5vdCk7CgoJCQkJCWlmICggIWlucGxhY2UgKSB7CgkJCQkJCXJlc3VsdC5wdXNoLmFwcGx5KCByZXN1bHQsIHJldCApOwoJCQkJCX0KCgkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoKCQkJfSBlbHNlIGlmICggRXhwci5tYXRjaC5QT1MudGVzdCggbWF0Y2hbMF0gKSB8fCBFeHByLm1hdGNoLkNISUxELnRlc3QoIG1hdGNoWzBdICkgKSB7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoKCQkJcmV0dXJuIG1hdGNoOwoJCX0sCgoJCVBPUzogZnVuY3Rpb24oIG1hdGNoICkgewoJCQltYXRjaC51bnNoaWZ0KCB0cnVlICk7CgoJCQlyZXR1cm4gbWF0Y2g7CgkJfQoJfSwKCglmaWx0ZXJzOiB7CgkJZW5hYmxlZDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLmRpc2FibGVkID09PSBmYWxzZSAmJiBlbGVtLnR5cGUgIT09ICJoaWRkZW4iOwoJCX0sCgoJCWRpc2FibGVkOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWU7CgkJfSwKCgkJY2hlY2tlZDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLmNoZWNrZWQgPT09IHRydWU7CgkJfSwKCgkJc2VsZWN0ZWQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQkvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0CgkJCS8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHkKCQkJaWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7CgkJCQllbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDsKCQkJfQoKCQkJcmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7CgkJfSwKCgkJcGFyZW50OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuICEhZWxlbS5maXJzdENoaWxkOwoJCX0sCgoJCWVtcHR5OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuICFlbGVtLmZpcnN0Q2hpbGQ7CgkJfSwKCgkJaGFzOiBmdW5jdGlvbiggZWxlbSwgaSwgbWF0Y2ggKSB7CgkJCXJldHVybiAhIVNpenpsZSggbWF0Y2hbM10sIGVsZW0gKS5sZW5ndGg7CgkJfSwKCgkJaGVhZGVyOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuICgvaFxkL2kpLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTsKCQl9LAoKCQl0ZXh0OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZSggInR5cGUiICksIHR5cGUgPSBlbGVtLnR5cGU7CgkJCS8vIElFNiBhbmQgNyB3aWxsIG1hcCBlbGVtLnR5cGUgdG8gJ3RleHQnIGZvciBuZXcgSFRNTDUgdHlwZXMgKHNlYXJjaCwgZXRjKQoJCQkvLyB1c2UgZ2V0QXR0cmlidXRlIGluc3RlYWQgdG8gdGVzdCB0aGlzIGNhc2UKCQkJcmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiAmJiAidGV4dCIgPT09IHR5cGUgJiYgKCBhdHRyID09PSB0eXBlIHx8IGF0dHIgPT09IG51bGwgKTsKCQl9LAoKCQlyYWRpbzogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJpbnB1dCIgJiYgInJhZGlvIiA9PT0gZWxlbS50eXBlOwoJCX0sCgoJCWNoZWNrYm94OiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiAmJiAiY2hlY2tib3giID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJZmlsZTogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJpbnB1dCIgJiYgImZpbGUiID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJcGFzc3dvcmQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAiaW5wdXQiICYmICJwYXNzd29yZCIgPT09IGVsZW0udHlwZTsKCQl9LAoKCQlzdWJtaXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQkJcmV0dXJuIChuYW1lID09PSAiaW5wdXQiIHx8IG5hbWUgPT09ICJidXR0b24iKSAmJiAic3VibWl0IiA9PT0gZWxlbS50eXBlOwoJCX0sCgoJCWltYWdlOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gImlucHV0IiAmJiAiaW1hZ2UiID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJcmVzZXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQl2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQkJcmV0dXJuIChuYW1lID09PSAiaW5wdXQiIHx8IG5hbWUgPT09ICJidXR0b24iKSAmJiAicmVzZXQiID09PSBlbGVtLnR5cGU7CgkJfSwKCgkJYnV0dG9uOiBmdW5jdGlvbiggZWxlbSApIHsKCQkJdmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgkJCXJldHVybiBuYW1lID09PSAiaW5wdXQiICYmICJidXR0b24iID09PSBlbGVtLnR5cGUgfHwgbmFtZSA9PT0gImJ1dHRvbiI7CgkJfSwKCgkJaW5wdXQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCQlyZXR1cm4gKC9pbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uL2kpLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTsKCQl9LAoKCQlmb2N1czogZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiBlbGVtID09PSBlbGVtLm93bmVyRG9jdW1lbnQuYWN0aXZlRWxlbWVudDsKCQl9Cgl9LAoJc2V0RmlsdGVyczogewoJCWZpcnN0OiBmdW5jdGlvbiggZWxlbSwgaSApIHsKCQkJcmV0dXJuIGkgPT09IDA7CgkJfSwKCgkJbGFzdDogZnVuY3Rpb24oIGVsZW0sIGksIG1hdGNoLCBhcnJheSApIHsKCQkJcmV0dXJuIGkgPT09IGFycmF5Lmxlbmd0aCAtIDE7CgkJfSwKCgkJZXZlbjogZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJCXJldHVybiBpICUgMiA9PT0gMDsKCQl9LAoKCQlvZGQ6IGZ1bmN0aW9uKCBlbGVtLCBpICkgewoJCQlyZXR1cm4gaSAlIDIgPT09IDE7CgkJfSwKCgkJbHQ6IGZ1bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsKCQkJcmV0dXJuIGkgPCBtYXRjaFszXSAtIDA7CgkJfSwKCgkJZ3Q6IGZ1bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsKCQkJcmV0dXJuIGkgPiBtYXRjaFszXSAtIDA7CgkJfSwKCgkJbnRoOiBmdW5jdGlvbiggZWxlbSwgaSwgbWF0Y2ggKSB7CgkJCXJldHVybiBtYXRjaFszXSAtIDAgPT09IGk7CgkJfSwKCgkJZXE6IGZ1bmN0aW9uKCBlbGVtLCBpLCBtYXRjaCApIHsKCQkJcmV0dXJuIG1hdGNoWzNdIC0gMCA9PT0gaTsKCQl9Cgl9LAoJZmlsdGVyOiB7CgkJUFNFVURPOiBmdW5jdGlvbiggZWxlbSwgbWF0Y2gsIGksIGFycmF5ICkgewoJCQl2YXIgbmFtZSA9IG1hdGNoWzFdLAoJCQkJZmlsdGVyID0gRXhwci5maWx0ZXJzWyBuYW1lIF07CgoJCQlpZiAoIGZpbHRlciApIHsKCQkJCXJldHVybiBmaWx0ZXIoIGVsZW0sIGksIG1hdGNoLCBhcnJheSApOwoKCQkJfSBlbHNlIGlmICggbmFtZSA9PT0gImNvbnRhaW5zIiApIHsKCQkJCXJldHVybiAoZWxlbS50ZXh0Q29udGVudCB8fCBlbGVtLmlubmVyVGV4dCB8fCBnZXRUZXh0KFsgZWxlbSBdKSB8fCAiIikuaW5kZXhPZihtYXRjaFszXSkgPj0gMDsKCgkJCX0gZWxzZSBpZiAoIG5hbWUgPT09ICJub3QiICkgewoJCQkJdmFyIG5vdCA9IG1hdGNoWzNdOwoKCQkJCWZvciAoIHZhciBqID0gMCwgbCA9IG5vdC5sZW5ndGg7IGogPCBsOyBqKysgKSB7CgkJCQkJaWYgKCBub3Rbal0gPT09IGVsZW0gKSB7CgkJCQkJCXJldHVybiBmYWxzZTsKCQkJCQl9CgkJCQl9CgoJCQkJcmV0dXJuIHRydWU7CgoJCQl9IGVsc2UgewoJCQkJU2l6emxlLmVycm9yKCBuYW1lICk7CgkJCX0KCQl9LAoKCQlDSElMRDogZnVuY3Rpb24oIGVsZW0sIG1hdGNoICkgewoJCQl2YXIgZmlyc3QsIGxhc3QsCgkJCQlkb25lTmFtZSwgcGFyZW50LCBjYWNoZSwKCQkJCWNvdW50LCBkaWZmLAoJCQkJdHlwZSA9IG1hdGNoWzFdLAoJCQkJbm9kZSA9IGVsZW07CgoJCQlzd2l0Y2ggKCB0eXBlICkgewoJCQkJY2FzZSAib25seSI6CgkJCQljYXNlICJmaXJzdCI6CgkJCQkJd2hpbGUgKCAobm9kZSA9IG5vZGUucHJldmlvdXNTaWJsaW5nKSApIHsKCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBlID09PSAxICkgewoJCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQlpZiAoIHR5cGUgPT09ICJmaXJzdCIgKSB7CgkJCQkJCXJldHVybiB0cnVlOwoJCQkJCX0KCgkJCQkJbm9kZSA9IGVsZW07CgoJCQkJCS8qIGZhbGxzIHRocm91Z2ggKi8KCQkJCWNhc2UgImxhc3QiOgoJCQkJCXdoaWxlICggKG5vZGUgPSBub2RlLm5leHRTaWJsaW5nKSApIHsKCQkJCQkJaWYgKCBub2RlLm5vZGVUeXBlID09PSAxICkgewoJCQkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQlyZXR1cm4gdHJ1ZTsKCgkJCQljYXNlICJudGgiOgoJCQkJCWZpcnN0ID0gbWF0Y2hbMl07CgkJCQkJbGFzdCA9IG1hdGNoWzNdOwoKCQkJCQlpZiAoIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgKSB7CgkJCQkJCXJldHVybiB0cnVlOwoJCQkJCX0KCgkJCQkJZG9uZU5hbWUgPSBtYXRjaFswXTsKCQkJCQlwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7CgoJCQkJCWlmICggcGFyZW50ICYmIChwYXJlbnRbIGV4cGFuZG8gXSAhPT0gZG9uZU5hbWUgfHwgIWVsZW0ubm9kZUluZGV4KSApIHsKCQkJCQkJY291bnQgPSAwOwoKCQkJCQkJZm9yICggbm9kZSA9IHBhcmVudC5maXJzdENoaWxkOyBub2RlOyBub2RlID0gbm9kZS5uZXh0U2libGluZyApIHsKCQkJCQkJCWlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQkJCQlub2RlLm5vZGVJbmRleCA9ICsrY291bnQ7CgkJCQkJCQl9CgkJCQkJCX0KCgkJCQkJCXBhcmVudFsgZXhwYW5kbyBdID0gZG9uZU5hbWU7CgkJCQkJfQoKCQkJCQlkaWZmID0gZWxlbS5ub2RlSW5kZXggLSBsYXN0OwoKCQkJCQlpZiAoIGZpcnN0ID09PSAwICkgewoJCQkJCQlyZXR1cm4gZGlmZiA9PT0gMDsKCgkJCQkJfSBlbHNlIHsKCQkJCQkJcmV0dXJuICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7CgkJCQkJfQoJCQl9CgkJfSwKCgkJSUQ6IGZ1bmN0aW9uKCBlbGVtLCBtYXRjaCApIHsKCQkJcmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoImlkIikgPT09IG1hdGNoOwoJCX0sCgoJCVRBRzogZnVuY3Rpb24oIGVsZW0sIG1hdGNoICkgewoJCQlyZXR1cm4gKG1hdGNoID09PSAiKiIgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSkgfHwgISFlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbWF0Y2g7CgkJfSwKCgkJQ0xBU1M6IGZ1bmN0aW9uKCBlbGVtLCBtYXRjaCApIHsKCQkJcmV0dXJuICgiICIgKyAoZWxlbS5jbGFzc05hbWUgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoImNsYXNzIikpICsgIiAiKQoJCQkJLmluZGV4T2YoIG1hdGNoICkgPiAtMTsKCQl9LAoKCQlBVFRSOiBmdW5jdGlvbiggZWxlbSwgbWF0Y2ggKSB7CgkJCXZhciBuYW1lID0gbWF0Y2hbMV0sCgkJCQlyZXN1bHQgPSBTaXp6bGUuYXR0ciA/CgkJCQkJU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKSA6CgkJCQkJRXhwci5hdHRySGFuZGxlWyBuYW1lIF0gPwoJCQkJCUV4cHIuYXR0ckhhbmRsZVsgbmFtZSBdKCBlbGVtICkgOgoJCQkJCWVsZW1bIG5hbWUgXSAhPSBudWxsID8KCQkJCQkJZWxlbVsgbmFtZSBdIDoKCQkJCQkJZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSwKCQkJCXZhbHVlID0gcmVzdWx0ICsgIiIsCgkJCQl0eXBlID0gbWF0Y2hbMl0sCgkJCQljaGVjayA9IG1hdGNoWzRdOwoKCQkJcmV0dXJuIHJlc3VsdCA9PSBudWxsID8KCQkJCXR5cGUgPT09ICIhPSIgOgoJCQkJIXR5cGUgJiYgU2l6emxlLmF0dHIgPwoJCQkJcmVzdWx0ICE9IG51bGwgOgoJCQkJdHlwZSA9PT0gIj0iID8KCQkJCXZhbHVlID09PSBjaGVjayA6CgkJCQl0eXBlID09PSAiKj0iID8KCQkJCXZhbHVlLmluZGV4T2YoY2hlY2spID49IDAgOgoJCQkJdHlwZSA9PT0gIn49IiA/CgkJCQkoIiAiICsgdmFsdWUgKyAiICIpLmluZGV4T2YoY2hlY2spID49IDAgOgoJCQkJIWNoZWNrID8KCQkJCXZhbHVlICYmIHJlc3VsdCAhPT0gZmFsc2UgOgoJCQkJdHlwZSA9PT0gIiE9IiA/CgkJCQl2YWx1ZSAhPT0gY2hlY2sgOgoJCQkJdHlwZSA9PT0gIl49IiA/CgkJCQl2YWx1ZS5pbmRleE9mKGNoZWNrKSA9PT0gMCA6CgkJCQl0eXBlID09PSAiJD0iID8KCQkJCXZhbHVlLnN1YnN0cih2YWx1ZS5sZW5ndGggLSBjaGVjay5sZW5ndGgpID09PSBjaGVjayA6CgkJCQl0eXBlID09PSAifD0iID8KCQkJCXZhbHVlID09PSBjaGVjayB8fCB2YWx1ZS5zdWJzdHIoMCwgY2hlY2subGVuZ3RoICsgMSkgPT09IGNoZWNrICsgIi0iIDoKCQkJCWZhbHNlOwoJCX0sCgoJCVBPUzogZnVuY3Rpb24oIGVsZW0sIG1hdGNoLCBpLCBhcnJheSApIHsKCQkJdmFyIG5hbWUgPSBtYXRjaFsyXSwKCQkJCWZpbHRlciA9IEV4cHIuc2V0RmlsdGVyc1sgbmFtZSBdOwoKCQkJaWYgKCBmaWx0ZXIgKSB7CgkJCQlyZXR1cm4gZmlsdGVyKCBlbGVtLCBpLCBtYXRjaCwgYXJyYXkgKTsKCQkJfQoJCX0KCX0KfTsKCnZhciBvcmlnUE9TID0gRXhwci5tYXRjaC5QT1MsCglmZXNjYXBlID0gZnVuY3Rpb24oYWxsLCBudW0pewoJCXJldHVybiAiXFwiICsgKG51bSAtIDAgKyAxKTsKCX07Cgpmb3IgKCB2YXIgdHlwZSBpbiBFeHByLm1hdGNoICkgewoJRXhwci5tYXRjaFsgdHlwZSBdID0gbmV3IFJlZ0V4cCggRXhwci5tYXRjaFsgdHlwZSBdLnNvdXJjZSArICgvKD8hW15cW10qXF0pKD8hW15cKF0qXCkpLy5zb3VyY2UpICk7CglFeHByLmxlZnRNYXRjaFsgdHlwZSBdID0gbmV3IFJlZ0V4cCggLyheKD86LnxccnxcbikqPykvLnNvdXJjZSArIEV4cHIubWF0Y2hbIHR5cGUgXS5zb3VyY2UucmVwbGFjZSgvXFwoXGQrKS9nLCBmZXNjYXBlKSApOwp9Ci8vIEV4cG9zZSBvcmlnUE9TCi8vICJnbG9iYWwiIGFzIGluIHJlZ2FyZGxlc3Mgb2YgcmVsYXRpb24gdG8gYnJhY2tldHMvcGFyZW5zCkV4cHIubWF0Y2guZ2xvYmFsUE9TID0gb3JpZ1BPUzsKCnZhciBtYWtlQXJyYXkgPSBmdW5jdGlvbiggYXJyYXksIHJlc3VsdHMgKSB7CglhcnJheSA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBhcnJheSwgMCApOwoKCWlmICggcmVzdWx0cyApIHsKCQlyZXN1bHRzLnB1c2guYXBwbHkoIHJlc3VsdHMsIGFycmF5ICk7CgkJcmV0dXJuIHJlc3VsdHM7Cgl9CgoJcmV0dXJuIGFycmF5Owp9OwoKLy8gUGVyZm9ybSBhIHNpbXBsZSBjaGVjayB0byBkZXRlcm1pbmUgaWYgdGhlIGJyb3dzZXIgaXMgY2FwYWJsZSBvZgovLyBjb252ZXJ0aW5nIGEgTm9kZUxpc3QgdG8gYW4gYXJyYXkgdXNpbmcgYnVpbHRpbiBtZXRob2RzLgovLyBBbHNvIHZlcmlmaWVzIHRoYXQgdGhlIHJldHVybmVkIGFycmF5IGhvbGRzIERPTSBub2RlcwovLyAod2hpY2ggaXMgbm90IHRoZSBjYXNlIGluIHRoZSBCbGFja2JlcnJ5IGJyb3dzZXIpCnRyeSB7CglBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNoaWxkTm9kZXMsIDAgKVswXS5ub2RlVHlwZTsKCi8vIFByb3ZpZGUgYSBmYWxsYmFjayBtZXRob2QgaWYgaXQgZG9lcyBub3Qgd29yawp9IGNhdGNoKCBlICkgewoJbWFrZUFycmF5ID0gZnVuY3Rpb24oIGFycmF5LCByZXN1bHRzICkgewoJCXZhciBpID0gMCwKCQkJcmV0ID0gcmVzdWx0cyB8fCBbXTsKCgkJaWYgKCB0b1N0cmluZy5jYWxsKGFycmF5KSA9PT0gIltvYmplY3QgQXJyYXldIiApIHsKCQkJQXJyYXkucHJvdG90eXBlLnB1c2guYXBwbHkoIHJldCwgYXJyYXkgKTsKCgkJfSBlbHNlIHsKCQkJaWYgKCB0eXBlb2YgYXJyYXkubGVuZ3RoID09PSAibnVtYmVyIiApIHsKCQkJCWZvciAoIHZhciBsID0gYXJyYXkubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCXJldC5wdXNoKCBhcnJheVtpXSApOwoJCQkJfQoKCQkJfSBlbHNlIHsKCQkJCWZvciAoIDsgYXJyYXlbaV07IGkrKyApIHsKCQkJCQlyZXQucHVzaCggYXJyYXlbaV0gKTsKCQkJCX0KCQkJfQoJCX0KCgkJcmV0dXJuIHJldDsKCX07Cn0KCnZhciBzb3J0T3JkZXIsIHNpYmxpbmdDaGVjazsKCmlmICggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICkgewoJc29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7CgkJaWYgKCBhID09PSBiICkgewoJCQloYXNEdXBsaWNhdGUgPSB0cnVlOwoJCQlyZXR1cm4gMDsKCQl9CgoJCWlmICggIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gfHwgIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb24gKSB7CgkJCXJldHVybiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uID8gLTEgOiAxOwoJCX0KCgkJcmV0dXJuIGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikgJiA0ID8gLTEgOiAxOwoJfTsKCn0gZWxzZSB7Cglzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHsKCQkvLyBUaGUgbm9kZXMgYXJlIGlkZW50aWNhbCwgd2UgY2FuIGV4aXQgZWFybHkKCQlpZiAoIGEgPT09IGIgKSB7CgkJCWhhc0R1cGxpY2F0ZSA9IHRydWU7CgkJCXJldHVybiAwOwoKCQkvLyBGYWxsYmFjayB0byB1c2luZyBzb3VyY2VJbmRleCAoaW4gSUUpIGlmIGl0J3MgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXMKCQl9IGVsc2UgaWYgKCBhLnNvdXJjZUluZGV4ICYmIGIuc291cmNlSW5kZXggKSB7CgkJCXJldHVybiBhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDsKCQl9CgoJCXZhciBhbCwgYmwsCgkJCWFwID0gW10sCgkJCWJwID0gW10sCgkJCWF1cCA9IGEucGFyZW50Tm9kZSwKCQkJYnVwID0gYi5wYXJlbnROb2RlLAoJCQljdXIgPSBhdXA7CgoJCS8vIElmIHRoZSBub2RlcyBhcmUgc2libGluZ3MgKG9yIGlkZW50aWNhbCkgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2sKCQlpZiAoIGF1cCA9PT0gYnVwICkgewoJCQlyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7CgoJCS8vIElmIG5vIHBhcmVudHMgd2VyZSBmb3VuZCB0aGVuIHRoZSBub2RlcyBhcmUgZGlzY29ubmVjdGVkCgkJfSBlbHNlIGlmICggIWF1cCApIHsKCQkJcmV0dXJuIC0xOwoKCQl9IGVsc2UgaWYgKCAhYnVwICkgewoJCQlyZXR1cm4gMTsKCQl9CgoJCS8vIE90aGVyd2lzZSB0aGV5J3JlIHNvbWV3aGVyZSBlbHNlIGluIHRoZSB0cmVlIHNvIHdlIG5lZWQKCQkvLyB0byBidWlsZCB1cCBhIGZ1bGwgbGlzdCBvZiB0aGUgcGFyZW50Tm9kZXMgZm9yIGNvbXBhcmlzb24KCQl3aGlsZSAoIGN1ciApIHsKCQkJYXAudW5zaGlmdCggY3VyICk7CgkJCWN1ciA9IGN1ci5wYXJlbnROb2RlOwoJCX0KCgkJY3VyID0gYnVwOwoKCQl3aGlsZSAoIGN1ciApIHsKCQkJYnAudW5zaGlmdCggY3VyICk7CgkJCWN1ciA9IGN1ci5wYXJlbnROb2RlOwoJCX0KCgkJYWwgPSBhcC5sZW5ndGg7CgkJYmwgPSBicC5sZW5ndGg7CgoJCS8vIFN0YXJ0IHdhbGtpbmcgZG93biB0aGUgdHJlZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5CgkJZm9yICggdmFyIGkgPSAwOyBpIDwgYWwgJiYgaSA8IGJsOyBpKysgKSB7CgkJCWlmICggYXBbaV0gIT09IGJwW2ldICkgewoJCQkJcmV0dXJuIHNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ldICk7CgkJCX0KCQl9CgoJCS8vIFdlIGVuZGVkIHNvbWVwbGFjZSB1cCB0aGUgdHJlZSBzbyBkbyBhIHNpYmxpbmcgY2hlY2sKCQlyZXR1cm4gaSA9PT0gYWwgPwoJCQlzaWJsaW5nQ2hlY2soIGEsIGJwW2ldLCAtMSApIDoKCQkJc2libGluZ0NoZWNrKCBhcFtpXSwgYiwgMSApOwoJfTsKCglzaWJsaW5nQ2hlY2sgPSBmdW5jdGlvbiggYSwgYiwgcmV0ICkgewoJCWlmICggYSA9PT0gYiApIHsKCQkJcmV0dXJuIHJldDsKCQl9CgoJCXZhciBjdXIgPSBhLm5leHRTaWJsaW5nOwoKCQl3aGlsZSAoIGN1ciApIHsKCQkJaWYgKCBjdXIgPT09IGIgKSB7CgkJCQlyZXR1cm4gLTE7CgkJCX0KCgkJCWN1ciA9IGN1ci5uZXh0U2libGluZzsKCQl9CgoJCXJldHVybiAxOwoJfTsKfQoKLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZSBicm93c2VyIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZSB3aGVuCi8vIHF1ZXJ5aW5nIGJ5IGdldEVsZW1lbnRCeUlkIChhbmQgcHJvdmlkZSBhIHdvcmthcm91bmQpCihmdW5jdGlvbigpewoJLy8gV2UncmUgZ29pbmcgdG8gaW5qZWN0IGEgZmFrZSBpbnB1dCBlbGVtZW50IHdpdGggYSBzcGVjaWZpZWQgbmFtZQoJdmFyIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKSwKCQlpZCA9ICJzY3JpcHQiICsgKG5ldyBEYXRlKCkpLmdldFRpbWUoKSwKCQlyb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50OwoKCWZvcm0uaW5uZXJIVE1MID0gIjxhIG5hbWU9JyIgKyBpZCArICInLz4iOwoKCS8vIEluamVjdCBpdCBpbnRvIHRoZSByb290IGVsZW1lbnQsIGNoZWNrIGl0cyBzdGF0dXMsIGFuZCByZW1vdmUgaXQgcXVpY2tseQoJcm9vdC5pbnNlcnRCZWZvcmUoIGZvcm0sIHJvb3QuZmlyc3RDaGlsZCApOwoKCS8vIFRoZSB3b3JrYXJvdW5kIGhhcyB0byBkbyBhZGRpdGlvbmFsIGNoZWNrcyBhZnRlciBhIGdldEVsZW1lbnRCeUlkCgkvLyBXaGljaCBzbG93cyB0aGluZ3MgZG93biBmb3Igb3RoZXIgYnJvd3NlcnMgKGhlbmNlIHRoZSBicmFuY2hpbmcpCglpZiAoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBpZCApICkgewoJCUV4cHIuZmluZC5JRCA9IGZ1bmN0aW9uKCBtYXRjaCwgY29udGV4dCwgaXNYTUwgKSB7CgkJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09ICJ1bmRlZmluZWQiICYmICFpc1hNTCApIHsKCQkJCXZhciBtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZChtYXRjaFsxXSk7CgoJCQkJcmV0dXJuIG0gPwoJCQkJCW0uaWQgPT09IG1hdGNoWzFdIHx8IHR5cGVvZiBtLmdldEF0dHJpYnV0ZU5vZGUgIT09ICJ1bmRlZmluZWQiICYmIG0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKS5ub2RlVmFsdWUgPT09IG1hdGNoWzFdID8KCQkJCQkJW21dIDoKCQkJCQkJdW5kZWZpbmVkIDoKCQkJCQlbXTsKCQkJfQoJCX07CgoJCUV4cHIuZmlsdGVyLklEID0gZnVuY3Rpb24oIGVsZW0sIG1hdGNoICkgewoJCQl2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09ICJ1bmRlZmluZWQiICYmIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSgiaWQiKTsKCgkJCXJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxICYmIG5vZGUgJiYgbm9kZS5ub2RlVmFsdWUgPT09IG1hdGNoOwoJCX07Cgl9CgoJcm9vdC5yZW1vdmVDaGlsZCggZm9ybSApOwoKCS8vIHJlbGVhc2UgbWVtb3J5IGluIElFCglyb290ID0gZm9ybSA9IG51bGw7Cn0pKCk7CgooZnVuY3Rpb24oKXsKCS8vIENoZWNrIHRvIHNlZSBpZiB0aGUgYnJvd3NlciByZXR1cm5zIG9ubHkgZWxlbWVudHMKCS8vIHdoZW4gZG9pbmcgZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKQoKCS8vIENyZWF0ZSBhIGZha2UgZWxlbWVudAoJdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoJZGl2LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KCIiKSApOwoKCS8vIE1ha2Ugc3VyZSBubyBjb21tZW50cyBhcmUgZm91bmQKCWlmICggZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCIqIikubGVuZ3RoID4gMCApIHsKCQlFeHByLmZpbmQuVEFHID0gZnVuY3Rpb24oIG1hdGNoLCBjb250ZXh0ICkgewoJCQl2YXIgcmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIG1hdGNoWzFdICk7CgoJCQkvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzCgkJCWlmICggbWF0Y2hbMV0gPT09ICIqIiApIHsKCQkJCXZhciB0bXAgPSBbXTsKCgkJCQlmb3IgKCB2YXIgaSA9IDA7IHJlc3VsdHNbaV07IGkrKyApIHsKCQkJCQlpZiAoIHJlc3VsdHNbaV0ubm9kZVR5cGUgPT09IDEgKSB7CgkJCQkJCXRtcC5wdXNoKCByZXN1bHRzW2ldICk7CgkJCQkJfQoJCQkJfQoKCQkJCXJlc3VsdHMgPSB0bXA7CgkJCX0KCgkJCXJldHVybiByZXN1bHRzOwoJCX07Cgl9CgoJLy8gQ2hlY2sgdG8gc2VlIGlmIGFuIGF0dHJpYnV0ZSByZXR1cm5zIG5vcm1hbGl6ZWQgaHJlZiBhdHRyaWJ1dGVzCglkaXYuaW5uZXJIVE1MID0gIjxhIGhyZWY9JyMnPjwvYT4iOwoKCWlmICggZGl2LmZpcnN0Q2hpbGQgJiYgdHlwZW9mIGRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSAhPT0gInVuZGVmaW5lZCIgJiYKCQkJZGl2LmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCJocmVmIikgIT09ICIjIiApIHsKCgkJRXhwci5hdHRySGFuZGxlLmhyZWYgPSBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCAiaHJlZiIsIDIgKTsKCQl9OwoJfQoKCS8vIHJlbGVhc2UgbWVtb3J5IGluIElFCglkaXYgPSBudWxsOwp9KSgpOwoKaWYgKCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsICkgewoJKGZ1bmN0aW9uKCl7CgkJdmFyIG9sZFNpenpsZSA9IFNpenpsZSwKCQkJZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2IiksCgkJCWlkID0gIl9fc2l6emxlX18iOwoKCQlkaXYuaW5uZXJIVE1MID0gIjxwIGNsYXNzPSdURVNUJz48L3A+IjsKCgkJLy8gU2FmYXJpIGNhbid0IGhhbmRsZSB1cHBlcmNhc2Ugb3IgdW5pY29kZSBjaGFyYWN0ZXJzIHdoZW4KCQkvLyBpbiBxdWlya3MgbW9kZS4KCQlpZiAoIGRpdi5xdWVyeVNlbGVjdG9yQWxsICYmIGRpdi5xdWVyeVNlbGVjdG9yQWxsKCIuVEVTVCIpLmxlbmd0aCA9PT0gMCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJU2l6emxlID0gZnVuY3Rpb24oIHF1ZXJ5LCBjb250ZXh0LCBleHRyYSwgc2VlZCApIHsKCQkJY29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7CgoJCQkvLyBPbmx5IHVzZSBxdWVyeVNlbGVjdG9yQWxsIG9uIG5vbi1YTUwgZG9jdW1lbnRzCgkJCS8vIChJRCBzZWxlY3RvcnMgZG9uJ3Qgd29yayBpbiBub24tSFRNTCBkb2N1bWVudHMpCgkJCWlmICggIXNlZWQgJiYgIVNpenpsZS5pc1hNTChjb250ZXh0KSApIHsKCQkJCS8vIFNlZSBpZiB3ZSBmaW5kIGEgc2VsZWN0b3IgdG8gc3BlZWQgdXAKCQkJCXZhciBtYXRjaCA9IC9eKFx3KyQpfF5cLihbXHdcLV0rJCl8XiMoW1x3XC1dKyQpLy5leGVjKCBxdWVyeSApOwoKCQkJCWlmICggbWF0Y2ggJiYgKGNvbnRleHQubm9kZVR5cGUgPT09IDEgfHwgY29udGV4dC5ub2RlVHlwZSA9PT0gOSkgKSB7CgkJCQkJLy8gU3BlZWQtdXA6IFNpenpsZSgiVEFHIikKCQkJCQlpZiAoIG1hdGNoWzFdICkgewoJCQkJCQlyZXR1cm4gbWFrZUFycmF5KCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBxdWVyeSApLCBleHRyYSApOwoKCQkJCQkvLyBTcGVlZC11cDogU2l6emxlKCIuQ0xBU1MiKQoJCQkJCX0gZWxzZSBpZiAoIG1hdGNoWzJdICYmIEV4cHIuZmluZC5DTEFTUyAmJiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKSB7CgkJCQkJCXJldHVybiBtYWtlQXJyYXkoIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbWF0Y2hbMl0gKSwgZXh0cmEgKTsKCQkJCQl9CgkJCQl9CgoJCQkJaWYgKCBjb250ZXh0Lm5vZGVUeXBlID09PSA5ICkgewoJCQkJCS8vIFNwZWVkLXVwOiBTaXp6bGUoImJvZHkiKQoJCQkJCS8vIFRoZSBib2R5IGVsZW1lbnQgb25seSBleGlzdHMgb25jZSwgb3B0aW1pemUgZmluZGluZyBpdAoJCQkJCWlmICggcXVlcnkgPT09ICJib2R5IiAmJiBjb250ZXh0LmJvZHkgKSB7CgkJCQkJCXJldHVybiBtYWtlQXJyYXkoIFsgY29udGV4dC5ib2R5IF0sIGV4dHJhICk7CgoJCQkJCS8vIFNwZWVkLXVwOiBTaXp6bGUoIiNJRCIpCgkJCQkJfSBlbHNlIGlmICggbWF0Y2ggJiYgbWF0Y2hbM10gKSB7CgkJCQkJCXZhciBlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbM10gKTsKCgkJCQkJCS8vIENoZWNrIHBhcmVudE5vZGUgdG8gY2F0Y2ggd2hlbiBCbGFja2JlcnJ5IDQuNiByZXR1cm5zCgkJCQkJCS8vIG5vZGVzIHRoYXQgYXJlIG5vIGxvbmdlciBpbiB0aGUgZG9jdW1lbnQgIzY5NjMKCQkJCQkJaWYgKCBlbGVtICYmIGVsZW0ucGFyZW50Tm9kZSApIHsKCQkJCQkJCS8vIEhhbmRsZSB0aGUgY2FzZSB3aGVyZSBJRSBhbmQgT3BlcmEgcmV0dXJuIGl0ZW1zCgkJCQkJCQkvLyBieSBuYW1lIGluc3RlYWQgb2YgSUQKCQkJCQkJCWlmICggZWxlbS5pZCA9PT0gbWF0Y2hbM10gKSB7CgkJCQkJCQkJcmV0dXJuIG1ha2VBcnJheSggWyBlbGVtIF0sIGV4dHJhICk7CgkJCQkJCQl9CgoJCQkJCQl9IGVsc2UgewoJCQkJCQkJcmV0dXJuIG1ha2VBcnJheSggW10sIGV4dHJhICk7CgkJCQkJCX0KCQkJCQl9CgoJCQkJCXRyeSB7CgkJCQkJCXJldHVybiBtYWtlQXJyYXkoIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbChxdWVyeSksIGV4dHJhICk7CgkJCQkJfSBjYXRjaChxc2FFcnJvcikge30KCgkJCQkvLyBxU0Egd29ya3Mgc3RyYW5nZWx5IG9uIEVsZW1lbnQtcm9vdGVkIHF1ZXJpZXMKCQkJCS8vIFdlIGNhbiB3b3JrIGFyb3VuZCB0aGlzIGJ5IHNwZWNpZnlpbmcgYW4gZXh0cmEgSUQgb24gdGhlIHJvb3QKCQkJCS8vIGFuZCB3b3JraW5nIHVwIGZyb20gdGhlcmUgKFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGUgdGVjaG5pcXVlKQoJCQkJLy8gSUUgOCBkb2Vzbid0IHdvcmsgb24gb2JqZWN0IGVsZW1lbnRzCgkJCQl9IGVsc2UgaWYgKCBjb250ZXh0Lm5vZGVUeXBlID09PSAxICYmIGNvbnRleHQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gIm9iamVjdCIgKSB7CgkJCQkJdmFyIG9sZENvbnRleHQgPSBjb250ZXh0LAoJCQkJCQlvbGQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggImlkIiApLAoJCQkJCQluaWQgPSBvbGQgfHwgaWQsCgkJCQkJCWhhc1BhcmVudCA9IGNvbnRleHQucGFyZW50Tm9kZSwKCQkJCQkJcmVsYXRpdmVIaWVyYXJjaHlTZWxlY3RvciA9IC9eXHMqWyt+XS8udGVzdCggcXVlcnkgKTsKCgkJCQkJaWYgKCAhb2xkICkgewoJCQkJCQljb250ZXh0LnNldEF0dHJpYnV0ZSggImlkIiwgbmlkICk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJbmlkID0gbmlkLnJlcGxhY2UoIC8nL2csICJcXCQmIiApOwoJCQkJCX0KCQkJCQlpZiAoIHJlbGF0aXZlSGllcmFyY2h5U2VsZWN0b3IgJiYgaGFzUGFyZW50ICkgewoJCQkJCQljb250ZXh0ID0gY29udGV4dC5wYXJlbnROb2RlOwoJCQkJCX0KCgkJCQkJdHJ5IHsKCQkJCQkJaWYgKCAhcmVsYXRpdmVIaWVyYXJjaHlTZWxlY3RvciB8fCBoYXNQYXJlbnQgKSB7CgkJCQkJCQlyZXR1cm4gbWFrZUFycmF5KCBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoICJbaWQ9JyIgKyBuaWQgKyAiJ10gIiArIHF1ZXJ5ICksIGV4dHJhICk7CgkJCQkJCX0KCgkJCQkJfSBjYXRjaChwc2V1ZG9FcnJvcikgewoJCQkJCX0gZmluYWxseSB7CgkJCQkJCWlmICggIW9sZCApIHsKCQkJCQkJCW9sZENvbnRleHQucmVtb3ZlQXR0cmlidXRlKCAiaWQiICk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCXJldHVybiBvbGRTaXp6bGUocXVlcnksIGNvbnRleHQsIGV4dHJhLCBzZWVkKTsKCQl9OwoKCQlmb3IgKCB2YXIgcHJvcCBpbiBvbGRTaXp6bGUgKSB7CgkJCVNpenpsZVsgcHJvcCBdID0gb2xkU2l6emxlWyBwcm9wIF07CgkJfQoKCQkvLyByZWxlYXNlIG1lbW9yeSBpbiBJRQoJCWRpdiA9IG51bGw7Cgl9KSgpOwp9CgooZnVuY3Rpb24oKXsKCXZhciBodG1sID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LAoJCW1hdGNoZXMgPSBodG1sLm1hdGNoZXNTZWxlY3RvciB8fCBodG1sLm1vek1hdGNoZXNTZWxlY3RvciB8fCBodG1sLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fCBodG1sLm1zTWF0Y2hlc1NlbGVjdG9yOwoKCWlmICggbWF0Y2hlcyApIHsKCQkvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3IKCQkvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5IGZhaWxzIHRoaXMpCgkJdmFyIGRpc2Nvbm5lY3RlZE1hdGNoID0gIW1hdGNoZXMuY2FsbCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKSwgImRpdiIgKSwKCQkJcHNldWRvV29ya3MgPSBmYWxzZTsKCgkJdHJ5IHsKCQkJLy8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvbgoJCQkvLyBHZWNrbyBkb2VzIG5vdCBlcnJvciwgcmV0dXJucyBmYWxzZSBpbnN0ZWFkCgkJCW1hdGNoZXMuY2FsbCggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAiW3Rlc3QhPScnXTpzaXp6bGUiICk7CgoJCX0gY2F0Y2goIHBzZXVkb0Vycm9yICkgewoJCQlwc2V1ZG9Xb3JrcyA9IHRydWU7CgkJfQoKCQlTaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIG5vZGUsIGV4cHIgKSB7CgkJCS8vIE1ha2Ugc3VyZSB0aGF0IGF0dHJpYnV0ZSBzZWxlY3RvcnMgYXJlIHF1b3RlZAoJCQlleHByID0gZXhwci5yZXBsYWNlKC9cPVxzKihbXiciXF1dKilccypcXS9nLCAiPSckMSddIik7CgoJCQlpZiAoICFTaXp6bGUuaXNYTUwoIG5vZGUgKSApIHsKCQkJCXRyeSB7CgkJCQkJaWYgKCBwc2V1ZG9Xb3JrcyB8fCAhRXhwci5tYXRjaC5QU0VVRE8udGVzdCggZXhwciApICYmICEvIT0vLnRlc3QoIGV4cHIgKSApIHsKCQkJCQkJdmFyIHJldCA9IG1hdGNoZXMuY2FsbCggbm9kZSwgZXhwciApOwoKCQkJCQkJLy8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2RlcwoJCQkJCQlpZiAoIHJldCB8fCAhZGlzY29ubmVjdGVkTWF0Y2ggfHwKCQkJCQkJCQkvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudAoJCQkJCQkJCS8vIGZyYWdtZW50IGluIElFIDksIHNvIGNoZWNrIGZvciB0aGF0CgkJCQkJCQkJbm9kZS5kb2N1bWVudCAmJiBub2RlLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHsKCQkJCQkJCXJldHVybiByZXQ7CgkJCQkJCX0KCQkJCQl9CgkJCQl9IGNhdGNoKGUpIHt9CgkJCX0KCgkJCXJldHVybiBTaXp6bGUoZXhwciwgbnVsbCwgbnVsbCwgW25vZGVdKS5sZW5ndGggPiAwOwoJCX07Cgl9Cn0pKCk7CgooZnVuY3Rpb24oKXsKCXZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKCglkaXYuaW5uZXJIVE1MID0gIjxkaXYgY2xhc3M9J3Rlc3QgZSc+PC9kaXY+PGRpdiBjbGFzcz0ndGVzdCc+PC9kaXY+IjsKCgkvLyBPcGVyYSBjYW4ndCBmaW5kIGEgc2Vjb25kIGNsYXNzbmFtZSAoaW4gOS42KQoJLy8gQWxzbywgbWFrZSBzdXJlIHRoYXQgZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSBhY3R1YWxseSBleGlzdHMKCWlmICggIWRpdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lIHx8IGRpdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJlIikubGVuZ3RoID09PSAwICkgewoJCXJldHVybjsKCX0KCgkvLyBTYWZhcmkgY2FjaGVzIGNsYXNzIGF0dHJpYnV0ZXMsIGRvZXNuJ3QgY2F0Y2ggY2hhbmdlcyAoaW4gMy4yKQoJZGl2Lmxhc3RDaGlsZC5jbGFzc05hbWUgPSAiZSI7CgoJaWYgKCBkaXYuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZSIpLmxlbmd0aCA9PT0gMSApIHsKCQlyZXR1cm47Cgl9CgoJRXhwci5vcmRlci5zcGxpY2UoMSwgMCwgIkNMQVNTIik7CglFeHByLmZpbmQuQ0xBU1MgPSBmdW5jdGlvbiggbWF0Y2gsIGNvbnRleHQsIGlzWE1MICkgewoJCWlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gInVuZGVmaW5lZCIgJiYgIWlzWE1MICkgewoJCQlyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKG1hdGNoWzFdKTsKCQl9Cgl9OwoKCS8vIHJlbGVhc2UgbWVtb3J5IGluIElFCglkaXYgPSBudWxsOwp9KSgpOwoKZnVuY3Rpb24gZGlyTm9kZUNoZWNrKCBkaXIsIGN1ciwgZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICkgewoJZm9yICggdmFyIGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCXZhciBlbGVtID0gY2hlY2tTZXRbaV07CgoJCWlmICggZWxlbSApIHsKCQkJdmFyIG1hdGNoID0gZmFsc2U7CgoJCQllbGVtID0gZWxlbVtkaXJdOwoKCQkJd2hpbGUgKCBlbGVtICkgewoJCQkJaWYgKCBlbGVtWyBleHBhbmRvIF0gPT09IGRvbmVOYW1lICkgewoJCQkJCW1hdGNoID0gY2hlY2tTZXRbZWxlbS5zaXpzZXRdOwoJCQkJCWJyZWFrOwoJCQkJfQoKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhaXNYTUwgKXsKCQkJCQllbGVtWyBleHBhbmRvIF0gPSBkb25lTmFtZTsKCQkJCQllbGVtLnNpenNldCA9IGk7CgkJCQl9CgoJCQkJaWYgKCBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IGN1ciApIHsKCQkJCQltYXRjaCA9IGVsZW07CgkJCQkJYnJlYWs7CgkJCQl9CgoJCQkJZWxlbSA9IGVsZW1bZGlyXTsKCQkJfQoKCQkJY2hlY2tTZXRbaV0gPSBtYXRjaDsKCQl9Cgl9Cn0KCmZ1bmN0aW9uIGRpckNoZWNrKCBkaXIsIGN1ciwgZG9uZU5hbWUsIGNoZWNrU2V0LCBub2RlQ2hlY2ssIGlzWE1MICkgewoJZm9yICggdmFyIGkgPSAwLCBsID0gY2hlY2tTZXQubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCXZhciBlbGVtID0gY2hlY2tTZXRbaV07CgoJCWlmICggZWxlbSApIHsKCQkJdmFyIG1hdGNoID0gZmFsc2U7CgoJCQllbGVtID0gZWxlbVtkaXJdOwoKCQkJd2hpbGUgKCBlbGVtICkgewoJCQkJaWYgKCBlbGVtWyBleHBhbmRvIF0gPT09IGRvbmVOYW1lICkgewoJCQkJCW1hdGNoID0gY2hlY2tTZXRbZWxlbS5zaXpzZXRdOwoJCQkJCWJyZWFrOwoJCQkJfQoKCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQlpZiAoICFpc1hNTCApIHsKCQkJCQkJZWxlbVsgZXhwYW5kbyBdID0gZG9uZU5hbWU7CgkJCQkJCWVsZW0uc2l6c2V0ID0gaTsKCQkJCQl9CgoJCQkJCWlmICggdHlwZW9mIGN1ciAhPT0gInN0cmluZyIgKSB7CgkJCQkJCWlmICggZWxlbSA9PT0gY3VyICkgewoJCQkJCQkJbWF0Y2ggPSB0cnVlOwoJCQkJCQkJYnJlYWs7CgkJCQkJCX0KCgkJCQkJfSBlbHNlIGlmICggU2l6emxlLmZpbHRlciggY3VyLCBbZWxlbV0gKS5sZW5ndGggPiAwICkgewoJCQkJCQltYXRjaCA9IGVsZW07CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCgkJCQllbGVtID0gZWxlbVtkaXJdOwoJCQl9CgoJCQljaGVja1NldFtpXSA9IG1hdGNoOwoJCX0KCX0KfQoKaWYgKCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY29udGFpbnMgKSB7CglTaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggYSwgYiApIHsKCQlyZXR1cm4gYSAhPT0gYiAmJiAoYS5jb250YWlucyA/IGEuY29udGFpbnMoYikgOiB0cnVlKTsKCX07Cgp9IGVsc2UgaWYgKCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24gKSB7CglTaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggYSwgYiApIHsKCQlyZXR1cm4gISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSAmIDE2KTsKCX07Cgp9IGVsc2UgewoJU2l6emxlLmNvbnRhaW5zID0gZnVuY3Rpb24oKSB7CgkJcmV0dXJuIGZhbHNlOwoJfTsKfQoKU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7CgkvLyBkb2N1bWVudEVsZW1lbnQgaXMgdmVyaWZpZWQgZm9yIGNhc2VzIHdoZXJlIGl0IGRvZXNuJ3QgeWV0IGV4aXN0CgkvLyAoc3VjaCBhcyBsb2FkaW5nIGlmcmFtZXMgaW4gSUUgLSAjNDgzMykKCXZhciBkb2N1bWVudEVsZW1lbnQgPSAoZWxlbSA/IGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtIDogMCkuZG9jdW1lbnRFbGVtZW50OwoKCXJldHVybiBkb2N1bWVudEVsZW1lbnQgPyBkb2N1bWVudEVsZW1lbnQubm9kZU5hbWUgIT09ICJIVE1MIiA6IGZhbHNlOwp9OwoKdmFyIHBvc1Byb2Nlc3MgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHNlZWQgKSB7Cgl2YXIgbWF0Y2gsCgkJdG1wU2V0ID0gW10sCgkJbGF0ZXIgPSAiIiwKCQlyb290ID0gY29udGV4dC5ub2RlVHlwZSA/IFtjb250ZXh0XSA6IGNvbnRleHQ7CgoJLy8gUG9zaXRpb24gc2VsZWN0b3JzIG11c3QgYmUgZG9uZSBhZnRlciB0aGUgZmlsdGVyCgkvLyBBbmQgc28gbXVzdCA6bm90KHBvc2l0aW9uYWwpIHNvIHdlIG1vdmUgYWxsIFBTRVVET3MgdG8gdGhlIGVuZAoJd2hpbGUgKCAobWF0Y2ggPSBFeHByLm1hdGNoLlBTRVVETy5leGVjKCBzZWxlY3RvciApKSApIHsKCQlsYXRlciArPSBtYXRjaFswXTsKCQlzZWxlY3RvciA9IHNlbGVjdG9yLnJlcGxhY2UoIEV4cHIubWF0Y2guUFNFVURPLCAiIiApOwoJfQoKCXNlbGVjdG9yID0gRXhwci5yZWxhdGl2ZVtzZWxlY3Rvcl0gPyBzZWxlY3RvciArICIqIiA6IHNlbGVjdG9yOwoKCWZvciAoIHZhciBpID0gMCwgbCA9IHJvb3QubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCVNpenpsZSggc2VsZWN0b3IsIHJvb3RbaV0sIHRtcFNldCwgc2VlZCApOwoJfQoKCXJldHVybiBTaXp6bGUuZmlsdGVyKCBsYXRlciwgdG1wU2V0ICk7Cn07CgovLyBFWFBPU0UKLy8gT3ZlcnJpZGUgc2l6emxlIGF0dHJpYnV0ZSByZXRyaWV2YWwKU2l6emxlLmF0dHIgPSBqUXVlcnkuYXR0cjsKU2l6emxlLnNlbGVjdG9ycy5hdHRyTWFwID0ge307CmpRdWVyeS5maW5kID0gU2l6emxlOwpqUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7CmpRdWVyeS5leHByWyI6Il0gPSBqUXVlcnkuZXhwci5maWx0ZXJzOwpqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNvcnQ7CmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7CmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDsKalF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRhaW5zOwoKCn0pKCk7CgoKdmFyIHJ1bnRpbCA9IC9VbnRpbCQvLAoJcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXZVbnRpbHxwcmV2QWxsKS8sCgkvLyBOb3RlOiBUaGlzIFJlZ0V4cCBzaG91bGQgYmUgaW1wcm92ZWQsIG9yIGxpa2VseSBwdWxsZWQgZnJvbSBTaXp6bGUKCXJtdWx0aXNlbGVjdG9yID0gLywvLAoJaXNTaW1wbGUgPSAvXi5bXjojXFtcLixdKiQvLAoJc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UsCglQT1MgPSBqUXVlcnkuZXhwci5tYXRjaC5nbG9iYWxQT1MsCgkvLyBtZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldAoJZ3VhcmFudGVlZFVuaXF1ZSA9IHsKCQljaGlsZHJlbjogdHJ1ZSwKCQljb250ZW50czogdHJ1ZSwKCQluZXh0OiB0cnVlLAoJCXByZXY6IHRydWUKCX07CgpqUXVlcnkuZm4uZXh0ZW5kKHsKCWZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgc2VsZiA9IHRoaXMsCgkJCWksIGw7CgoJCWlmICggdHlwZW9mIHNlbGVjdG9yICE9PSAic3RyaW5nIiApIHsKCQkJcmV0dXJuIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoZnVuY3Rpb24oKSB7CgkJCQlmb3IgKCBpID0gMCwgbCA9IHNlbGYubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJCWlmICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHsKCQkJCQkJcmV0dXJuIHRydWU7CgkJCQkJfQoJCQkJfQoJCQl9KTsKCQl9CgoJCXZhciByZXQgPSB0aGlzLnB1c2hTdGFjayggIiIsICJmaW5kIiwgc2VsZWN0b3IgKSwKCQkJbGVuZ3RoLCBuLCByOwoKCQlmb3IgKCBpID0gMCwgbCA9IHRoaXMubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQlsZW5ndGggPSByZXQubGVuZ3RoOwoJCQlqUXVlcnkuZmluZCggc2VsZWN0b3IsIHRoaXNbaV0sIHJldCApOwoKCQkJaWYgKCBpID4gMCApIHsKCQkJCS8vIE1ha2Ugc3VyZSB0aGF0IHRoZSByZXN1bHRzIGFyZSB1bmlxdWUKCQkJCWZvciAoIG4gPSBsZW5ndGg7IG4gPCByZXQubGVuZ3RoOyBuKysgKSB7CgkJCQkJZm9yICggciA9IDA7IHIgPCBsZW5ndGg7IHIrKyApIHsKCQkJCQkJaWYgKCByZXRbcl0gPT09IHJldFtuXSApIHsKCQkJCQkJCXJldC5zcGxpY2Uobi0tLCAxKTsKCQkJCQkJCWJyZWFrOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXR1cm4gcmV0OwoJfSwKCgloYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7CgkJdmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCApOwoJCXJldHVybiB0aGlzLmZpbHRlcihmdW5jdGlvbigpIHsKCQkJZm9yICggdmFyIGkgPSAwLCBsID0gdGFyZ2V0cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQlpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1tpXSApICkgewoJCQkJCXJldHVybiB0cnVlOwoJCQkJfQoJCQl9CgkJfSk7Cgl9LAoKCW5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KHRoaXMsIHNlbGVjdG9yLCBmYWxzZSksICJub3QiLCBzZWxlY3Rvcik7Cgl9LAoKCWZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KHRoaXMsIHNlbGVjdG9yLCB0cnVlKSwgImZpbHRlciIsIHNlbGVjdG9yICk7Cgl9LAoKCWlzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuICEhc2VsZWN0b3IgJiYgKAoJCQl0eXBlb2Ygc2VsZWN0b3IgPT09ICJzdHJpbmciID8KCQkJCS8vIElmIHRoaXMgaXMgYSBwb3NpdGlvbmFsIHNlbGVjdG9yLCBjaGVjayBtZW1iZXJzaGlwIGluIHRoZSByZXR1cm5lZCBzZXQKCQkJCS8vIHNvICQoInA6Zmlyc3QiKS5pcygicDpsYXN0Iikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvICJwIi4KCQkJCVBPUy50ZXN0KCBzZWxlY3RvciApID8KCQkJCQlqUXVlcnkoIHNlbGVjdG9yLCB0aGlzLmNvbnRleHQgKS5pbmRleCggdGhpc1swXSApID49IDAgOgoJCQkJCWpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCB0aGlzICkubGVuZ3RoID4gMCA6CgkJCQl0aGlzLmZpbHRlciggc2VsZWN0b3IgKS5sZW5ndGggPiAwICk7Cgl9LAoKCWNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7CgkJdmFyIHJldCA9IFtdLCBpLCBsLCBjdXIgPSB0aGlzWzBdOwoKCQkvLyBBcnJheSAoZGVwcmVjYXRlZCBhcyBvZiBqUXVlcnkgMS43KQoJCWlmICggalF1ZXJ5LmlzQXJyYXkoIHNlbGVjdG9ycyApICkgewoJCQl2YXIgbGV2ZWwgPSAxOwoKCQkJd2hpbGUgKCBjdXIgJiYgY3VyLm93bmVyRG9jdW1lbnQgJiYgY3VyICE9PSBjb250ZXh0ICkgewoJCQkJZm9yICggaSA9IDA7IGkgPCBzZWxlY3RvcnMubGVuZ3RoOyBpKysgKSB7CgoJCQkJCWlmICggalF1ZXJ5KCBjdXIgKS5pcyggc2VsZWN0b3JzWyBpIF0gKSApIHsKCQkJCQkJcmV0LnB1c2goeyBzZWxlY3Rvcjogc2VsZWN0b3JzWyBpIF0sIGVsZW06IGN1ciwgbGV2ZWw6IGxldmVsIH0pOwoJCQkJCX0KCQkJCX0KCgkJCQljdXIgPSBjdXIucGFyZW50Tm9kZTsKCQkJCWxldmVsKys7CgkJCX0KCgkJCXJldHVybiByZXQ7CgkJfQoKCQkvLyBTdHJpbmcKCQl2YXIgcG9zID0gUE9TLnRlc3QoIHNlbGVjdG9ycyApIHx8IHR5cGVvZiBzZWxlY3RvcnMgIT09ICJzdHJpbmciID8KCQkJCWpRdWVyeSggc2VsZWN0b3JzLCBjb250ZXh0IHx8IHRoaXMuY29udGV4dCApIDoKCQkJCTA7CgoJCWZvciAoIGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCWN1ciA9IHRoaXNbaV07CgoJCQl3aGlsZSAoIGN1ciApIHsKCQkJCWlmICggcG9zID8gcG9zLmluZGV4KGN1cikgPiAtMSA6IGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvcihjdXIsIHNlbGVjdG9ycykgKSB7CgkJCQkJcmV0LnB1c2goIGN1ciApOwoJCQkJCWJyZWFrOwoKCQkJCX0gZWxzZSB7CgkJCQkJY3VyID0gY3VyLnBhcmVudE5vZGU7CgkJCQkJaWYgKCAhY3VyIHx8ICFjdXIub3duZXJEb2N1bWVudCB8fCBjdXIgPT09IGNvbnRleHQgfHwgY3VyLm5vZGVUeXBlID09PSAxMSApIHsKCQkJCQkJYnJlYWs7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlyZXQgPSByZXQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWUoIHJldCApIDogcmV0OwoKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCwgImNsb3Nlc3QiLCBzZWxlY3RvcnMgKTsKCX0sCgoJLy8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbgoJLy8gdGhlIG1hdGNoZWQgc2V0IG9mIGVsZW1lbnRzCglpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7CgoJCS8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50CgkJaWYgKCAhZWxlbSApIHsKCQkJcmV0dXJuICggdGhpc1swXSAmJiB0aGlzWzBdLnBhcmVudE5vZGUgKSA/IHRoaXMucHJldkFsbCgpLmxlbmd0aCA6IC0xOwoJCX0KCgkJLy8gaW5kZXggaW4gc2VsZWN0b3IKCQlpZiAoIHR5cGVvZiBlbGVtID09PSAic3RyaW5nIiApIHsKCQkJcmV0dXJuIGpRdWVyeS5pbkFycmF5KCB0aGlzWzBdLCBqUXVlcnkoIGVsZW0gKSApOwoJCX0KCgkJLy8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgZGVzaXJlZCBlbGVtZW50CgkJcmV0dXJuIGpRdWVyeS5pbkFycmF5KAoJCQkvLyBJZiBpdCByZWNlaXZlcyBhIGpRdWVyeSBvYmplY3QsIHRoZSBmaXJzdCBlbGVtZW50IGlzIHVzZWQKCQkJZWxlbS5qcXVlcnkgPyBlbGVtWzBdIDogZWxlbSwgdGhpcyApOwoJfSwKCglhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHsKCQl2YXIgc2V0ID0gdHlwZW9mIHNlbGVjdG9yID09PSAic3RyaW5nIiA/CgkJCQlqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgOgoJCQkJalF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IgJiYgc2VsZWN0b3Iubm9kZVR5cGUgPyBbIHNlbGVjdG9yIF0gOiBzZWxlY3RvciApLAoJCQlhbGwgPSBqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIHNldCApOwoKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGlzRGlzY29ubmVjdGVkKCBzZXRbMF0gKSB8fCBpc0Rpc2Nvbm5lY3RlZCggYWxsWzBdICkgPwoJCQlhbGwgOgoJCQlqUXVlcnkudW5pcXVlKCBhbGwgKSApOwoJfSwKCglhbmRTZWxmOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5hZGQoIHRoaXMucHJldk9iamVjdCApOwoJfQp9KTsKCi8vIEEgcGFpbmZ1bGx5IHNpbXBsZSBjaGVjayB0byBzZWUgaWYgYW4gZWxlbWVudCBpcyBkaXNjb25uZWN0ZWQKLy8gZnJvbSBhIGRvY3VtZW50IChzaG91bGQgYmUgaW1wcm92ZWQsIHdoZXJlIGZlYXNpYmxlKS4KZnVuY3Rpb24gaXNEaXNjb25uZWN0ZWQoIG5vZGUgKSB7CglyZXR1cm4gIW5vZGUgfHwgIW5vZGUucGFyZW50Tm9kZSB8fCBub2RlLnBhcmVudE5vZGUubm9kZVR5cGUgPT09IDExOwp9CgpqUXVlcnkuZWFjaCh7CglwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7CgkJcmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDsKCX0sCglwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5LmRpciggZWxlbSwgInBhcmVudE5vZGUiICk7Cgl9LAoJcGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7CgkJcmV0dXJuIGpRdWVyeS5kaXIoIGVsZW0sICJwYXJlbnROb2RlIiwgdW50aWwgKTsKCX0sCgluZXh0OiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5Lm50aCggZWxlbSwgMiwgIm5leHRTaWJsaW5nIiApOwoJfSwKCXByZXY6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBqUXVlcnkubnRoKCBlbGVtLCAyLCAicHJldmlvdXNTaWJsaW5nIiApOwoJfSwKCW5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiBqUXVlcnkuZGlyKCBlbGVtLCAibmV4dFNpYmxpbmciICk7Cgl9LAoJcHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7CgkJcmV0dXJuIGpRdWVyeS5kaXIoIGVsZW0sICJwcmV2aW91c1NpYmxpbmciICk7Cgl9LAoJbmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7CgkJcmV0dXJuIGpRdWVyeS5kaXIoIGVsZW0sICJuZXh0U2libGluZyIsIHVudGlsICk7Cgl9LAoJcHJldlVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7CgkJcmV0dXJuIGpRdWVyeS5kaXIoIGVsZW0sICJwcmV2aW91c1NpYmxpbmciLCB1bnRpbCApOwoJfSwKCXNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5LnNpYmxpbmcoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApOwoJfSwKCWNoaWxkcmVuOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5LnNpYmxpbmcoIGVsZW0uZmlyc3RDaGlsZCApOwoJfSwKCWNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCAiaWZyYW1lIiApID8KCQkJZWxlbS5jb250ZW50RG9jdW1lbnQgfHwgZWxlbS5jb250ZW50V2luZG93LmRvY3VtZW50IDoKCQkJalF1ZXJ5Lm1ha2VBcnJheSggZWxlbS5jaGlsZE5vZGVzICk7Cgl9Cn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHsKCWpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHsKCQl2YXIgcmV0ID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7CgoJCWlmICggIXJ1bnRpbC50ZXN0KCBuYW1lICkgKSB7CgkJCXNlbGVjdG9yID0gdW50aWw7CgkJfQoKCQlpZiAoIHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciA9PT0gInN0cmluZyIgKSB7CgkJCXJldCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCByZXQgKTsKCQl9CgoJCXJldCA9IHRoaXMubGVuZ3RoID4gMSAmJiAhZ3VhcmFudGVlZFVuaXF1ZVsgbmFtZSBdID8galF1ZXJ5LnVuaXF1ZSggcmV0ICkgOiByZXQ7CgoJCWlmICggKHRoaXMubGVuZ3RoID4gMSB8fCBybXVsdGlzZWxlY3Rvci50ZXN0KCBzZWxlY3RvciApKSAmJiBycGFyZW50c3ByZXYudGVzdCggbmFtZSApICkgewoJCQlyZXQgPSByZXQucmV2ZXJzZSgpOwoJCX0KCgkJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCByZXQsIG5hbWUsIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLmpvaW4oIiwiKSApOwoJfTsKfSk7CgpqUXVlcnkuZXh0ZW5kKHsKCWZpbHRlcjogZnVuY3Rpb24oIGV4cHIsIGVsZW1zLCBub3QgKSB7CgkJaWYgKCBub3QgKSB7CgkJCWV4cHIgPSAiOm5vdCgiICsgZXhwciArICIpIjsKCQl9CgoJCXJldHVybiBlbGVtcy5sZW5ndGggPT09IDEgPwoJCQlqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoZWxlbXNbMF0sIGV4cHIpID8gWyBlbGVtc1swXSBdIDogW10gOgoJCQlqUXVlcnkuZmluZC5tYXRjaGVzKGV4cHIsIGVsZW1zKTsKCX0sCgoJZGlyOiBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHsKCQl2YXIgbWF0Y2hlZCA9IFtdLAoJCQljdXIgPSBlbGVtWyBkaXIgXTsKCgkJd2hpbGUgKCBjdXIgJiYgY3VyLm5vZGVUeXBlICE9PSA5ICYmICh1bnRpbCA9PT0gdW5kZWZpbmVkIHx8IGN1ci5ub2RlVHlwZSAhPT0gMSB8fCAhalF1ZXJ5KCBjdXIgKS5pcyggdW50aWwgKSkgKSB7CgkJCWlmICggY3VyLm5vZGVUeXBlID09PSAxICkgewoJCQkJbWF0Y2hlZC5wdXNoKCBjdXIgKTsKCQkJfQoJCQljdXIgPSBjdXJbZGlyXTsKCQl9CgkJcmV0dXJuIG1hdGNoZWQ7Cgl9LAoKCW50aDogZnVuY3Rpb24oIGN1ciwgcmVzdWx0LCBkaXIsIGVsZW0gKSB7CgkJcmVzdWx0ID0gcmVzdWx0IHx8IDE7CgkJdmFyIG51bSA9IDA7CgoJCWZvciAoIDsgY3VyOyBjdXIgPSBjdXJbZGlyXSApIHsKCQkJaWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgKytudW0gPT09IHJlc3VsdCApIHsKCQkJCWJyZWFrOwoJCQl9CgkJfQoKCQlyZXR1cm4gY3VyOwoJfSwKCglzaWJsaW5nOiBmdW5jdGlvbiggbiwgZWxlbSApIHsKCQl2YXIgciA9IFtdOwoKCQlmb3IgKCA7IG47IG4gPSBuLm5leHRTaWJsaW5nICkgewoJCQlpZiAoIG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHsKCQkJCXIucHVzaCggbiApOwoJCQl9CgkJfQoKCQlyZXR1cm4gcjsKCX0KfSk7CgovLyBJbXBsZW1lbnQgdGhlIGlkZW50aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdApmdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIGtlZXAgKSB7CgoJLy8gQ2FuJ3QgcGFzcyBudWxsIG9yIHVuZGVmaW5lZCB0byBpbmRleE9mIGluIEZpcmVmb3ggNAoJLy8gU2V0IHRvIDAgdG8gc2tpcCBzdHJpbmcgY2hlY2sKCXF1YWxpZmllciA9IHF1YWxpZmllciB8fCAwOwoKCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHF1YWxpZmllciApICkgewoJCXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJCXZhciByZXRWYWwgPSAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICk7CgkJCXJldHVybiByZXRWYWwgPT09IGtlZXA7CgkJfSk7CgoJfSBlbHNlIGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkgewoJCXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJCXJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApID09PSBrZWVwOwoJCX0pOwoKCX0gZWxzZSBpZiAoIHR5cGVvZiBxdWFsaWZpZXIgPT09ICJzdHJpbmciICkgewoJCXZhciBmaWx0ZXJlZCA9IGpRdWVyeS5ncmVwKGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHsKCQkJcmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7CgkJfSk7CgoJCWlmICggaXNTaW1wbGUudGVzdCggcXVhbGlmaWVyICkgKSB7CgkJCXJldHVybiBqUXVlcnkuZmlsdGVyKHF1YWxpZmllciwgZmlsdGVyZWQsICFrZWVwKTsKCQl9IGVsc2UgewoJCQlxdWFsaWZpZXIgPSBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGZpbHRlcmVkICk7CgkJfQoJfQoKCXJldHVybiBqUXVlcnkuZ3JlcChlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7CgkJcmV0dXJuICggalF1ZXJ5LmluQXJyYXkoIGVsZW0sIHF1YWxpZmllciApID49IDAgKSA9PT0ga2VlcDsKCX0pOwp9CgoKCgpmdW5jdGlvbiBjcmVhdGVTYWZlRnJhZ21lbnQoIGRvY3VtZW50ICkgewoJdmFyIGxpc3QgPSBub2RlTmFtZXMuc3BsaXQoICJ8IiApLAoJc2FmZUZyYWcgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CgoJaWYgKCBzYWZlRnJhZy5jcmVhdGVFbGVtZW50ICkgewoJCXdoaWxlICggbGlzdC5sZW5ndGggKSB7CgkJCXNhZmVGcmFnLmNyZWF0ZUVsZW1lbnQoCgkJCQlsaXN0LnBvcCgpCgkJCSk7CgkJfQoJfQoJcmV0dXJuIHNhZmVGcmFnOwp9Cgp2YXIgbm9kZU5hbWVzID0gImFiYnJ8YXJ0aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8ZGV0YWlsc3xmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8IiArCgkJImhlYWRlcnxoZ3JvdXB8bWFya3xtZXRlcnxuYXZ8b3V0cHV0fHByb2dyZXNzfHNlY3Rpb258c3VtbWFyeXx0aW1lfHZpZGVvIiwKCXJpbmxpbmVqUXVlcnkgPSAvIGpRdWVyeVxkKz0iKD86XGQrfG51bGwpIi9nLAoJcmxlYWRpbmdXaGl0ZXNwYWNlID0gL15ccysvLAoJcnhodG1sVGFnID0gLzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW1x3Ol0rKVtePl0qKVwvPi9pZywKCXJ0YWdOYW1lID0gLzwoW1x3Ol0rKS8sCglydGJvZHkgPSAvPHRib2R5L2ksCglyaHRtbCA9IC88fCYjP1x3KzsvLAoJcm5vSW5uZXJodG1sID0gLzwoPzpzY3JpcHR8c3R5bGUpL2ksCglybm9jYWNoZSA9IC88KD86c2NyaXB0fG9iamVjdHxlbWJlZHxvcHRpb258c3R5bGUpL2ksCglybm9zaGltY2FjaGUgPSBuZXcgUmVnRXhwKCI8KD86IiArIG5vZGVOYW1lcyArICIpW1xccy8+XSIsICJpIiksCgkvLyBjaGVja2VkPSJjaGVja2VkIiBvciBjaGVja2VkCglyY2hlY2tlZCA9IC9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQuKS9pLAoJcnNjcmlwdFR5cGUgPSAvXC8oamF2YXxlY21hKXNjcmlwdC9pLAoJcmNsZWFuU2NyaXB0ID0gL15ccyo8ISg/OlxbQ0RBVEFcW3xcLVwtKS8sCgl3cmFwTWFwID0gewoJCW9wdGlvbjogWyAxLCAiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPiIsICI8L3NlbGVjdD4iIF0sCgkJbGVnZW5kOiBbIDEsICI8ZmllbGRzZXQ+IiwgIjwvZmllbGRzZXQ+IiBdLAoJCXRoZWFkOiBbIDEsICI8dGFibGU+IiwgIjwvdGFibGU+IiBdLAoJCXRyOiBbIDIsICI8dGFibGU+PHRib2R5PiIsICI8L3Rib2R5PjwvdGFibGU+IiBdLAoJCXRkOiBbIDMsICI8dGFibGU+PHRib2R5Pjx0cj4iLCAiPC90cj48L3Rib2R5PjwvdGFibGU+IiBdLAoJCWNvbDogWyAyLCAiPHRhYmxlPjx0Ym9keT48L3Rib2R5Pjxjb2xncm91cD4iLCAiPC9jb2xncm91cD48L3RhYmxlPiIgXSwKCQlhcmVhOiBbIDEsICI8bWFwPiIsICI8L21hcD4iIF0sCgkJX2RlZmF1bHQ6IFsgMCwgIiIsICIiIF0KCX0sCglzYWZlRnJhZ21lbnQgPSBjcmVhdGVTYWZlRnJhZ21lbnQoIGRvY3VtZW50ICk7Cgp3cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247CndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7CndyYXBNYXAudGggPSB3cmFwTWFwLnRkOwoKLy8gSUUgY2FuJ3Qgc2VyaWFsaXplIDxsaW5rPiBhbmQgPHNjcmlwdD4gdGFncyBub3JtYWxseQppZiAoICFqUXVlcnkuc3VwcG9ydC5odG1sU2VyaWFsaXplICkgewoJd3JhcE1hcC5fZGVmYXVsdCA9IFsgMSwgImRpdjxkaXY+IiwgIjwvZGl2PiIgXTsKfQoKalF1ZXJ5LmZuLmV4dGVuZCh7Cgl0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJcmV0dXJuIGpRdWVyeS5hY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPwoJCQkJalF1ZXJ5LnRleHQoIHRoaXMgKSA6CgkJCQl0aGlzLmVtcHR5KCkuYXBwZW5kKCAoIHRoaXNbMF0gJiYgdGhpc1swXS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkuY3JlYXRlVGV4dE5vZGUoIHZhbHVlICkgKTsKCQl9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApOwoJfSwKCgl3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHsKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQkJalF1ZXJ5KHRoaXMpLndyYXBBbGwoIGh0bWwuY2FsbCh0aGlzLCBpKSApOwoJCQl9KTsKCQl9CgoJCWlmICggdGhpc1swXSApIHsKCQkJLy8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmQKCQkJdmFyIHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbMF0ub3duZXJEb2N1bWVudCApLmVxKDApLmNsb25lKHRydWUpOwoKCQkJaWYgKCB0aGlzWzBdLnBhcmVudE5vZGUgKSB7CgkJCQl3cmFwLmluc2VydEJlZm9yZSggdGhpc1swXSApOwoJCQl9CgoJCQl3cmFwLm1hcChmdW5jdGlvbigpIHsKCQkJCXZhciBlbGVtID0gdGhpczsKCgkJCQl3aGlsZSAoIGVsZW0uZmlyc3RDaGlsZCAmJiBlbGVtLmZpcnN0Q2hpbGQubm9kZVR5cGUgPT09IDEgKSB7CgkJCQkJZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsKCQkJCX0KCgkJCQlyZXR1cm4gZWxlbTsKCQkJfSkuYXBwZW5kKCB0aGlzICk7CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJd3JhcElubmVyOiBmdW5jdGlvbiggaHRtbCApIHsKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQkJalF1ZXJ5KHRoaXMpLndyYXBJbm5lciggaHRtbC5jYWxsKHRoaXMsIGkpICk7CgkJCX0pOwoJCX0KCgkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHsKCQkJdmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSwKCQkJCWNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpOwoKCQkJaWYgKCBjb250ZW50cy5sZW5ndGggKSB7CgkJCQljb250ZW50cy53cmFwQWxsKCBodG1sICk7CgoJCQl9IGVsc2UgewoJCQkJc2VsZi5hcHBlbmQoIGh0bWwgKTsKCQkJfQoJCX0pOwoJfSwKCgl3cmFwOiBmdW5jdGlvbiggaHRtbCApIHsKCQl2YXIgaXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICk7CgoJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQlqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBpc0Z1bmN0aW9uID8gaHRtbC5jYWxsKHRoaXMsIGkpIDogaHRtbCApOwoJCX0pOwoJfSwKCgl1bndyYXA6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLnBhcmVudCgpLmVhY2goZnVuY3Rpb24oKSB7CgkJCWlmICggIWpRdWVyeS5ub2RlTmFtZSggdGhpcywgImJvZHkiICkgKSB7CgkJCQlqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7CgkJCX0KCQl9KS5lbmQoKTsKCX0sCgoJYXBwZW5kOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsIHRydWUsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQlpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgKSB7CgkJCQl0aGlzLmFwcGVuZENoaWxkKCBlbGVtICk7CgkJCX0KCQl9KTsKCX0sCgoJcHJlcGVuZDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCB0cnVlLCBmdW5jdGlvbiggZWxlbSApIHsKCQkJaWYgKCB0aGlzLm5vZGVUeXBlID09PSAxICkgewoJCQkJdGhpcy5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMuZmlyc3RDaGlsZCApOwoJCQl9CgkJfSk7Cgl9LAoKCWJlZm9yZTogZnVuY3Rpb24oKSB7CgkJaWYgKCB0aGlzWzBdICYmIHRoaXNbMF0ucGFyZW50Tm9kZSApIHsKCQkJcmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLCBmYWxzZSwgZnVuY3Rpb24oIGVsZW0gKSB7CgkJCQl0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7CgkJCX0pOwoJCX0gZWxzZSBpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCXZhciBzZXQgPSBqUXVlcnkuY2xlYW4oIGFyZ3VtZW50cyApOwoJCQlzZXQucHVzaC5hcHBseSggc2V0LCB0aGlzLnRvQXJyYXkoKSApOwoJCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNldCwgImJlZm9yZSIsIGFyZ3VtZW50cyApOwoJCX0KCX0sCgoJYWZ0ZXI6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpc1swXSAmJiB0aGlzWzBdLnBhcmVudE5vZGUgKSB7CgkJCXJldHVybiB0aGlzLmRvbU1hbmlwKGFyZ3VtZW50cywgZmFsc2UsIGZ1bmN0aW9uKCBlbGVtICkgewoJCQkJdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApOwoJCQl9KTsKCQl9IGVsc2UgaWYgKCBhcmd1bWVudHMubGVuZ3RoICkgewoJCQl2YXIgc2V0ID0gdGhpcy5wdXNoU3RhY2soIHRoaXMsICJhZnRlciIsIGFyZ3VtZW50cyApOwoJCQlzZXQucHVzaC5hcHBseSggc2V0LCBqUXVlcnkuY2xlYW4oYXJndW1lbnRzKSApOwoJCQlyZXR1cm4gc2V0OwoJCX0KCX0sCgoJLy8ga2VlcERhdGEgaXMgZm9yIGludGVybmFsIHVzZSBvbmx5LS1kbyBub3QgZG9jdW1lbnQKCXJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yLCBrZWVwRGF0YSApIHsKCQlmb3IgKCB2YXIgaSA9IDAsIGVsZW07IChlbGVtID0gdGhpc1tpXSkgIT0gbnVsbDsgaSsrICkgewoJCQlpZiAoICFzZWxlY3RvciB8fCBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgWyBlbGVtIF0gKS5sZW5ndGggKSB7CgkJCQlpZiAoICFrZWVwRGF0YSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkgewoJCQkJCWpRdWVyeS5jbGVhbkRhdGEoIGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSApOwoJCQkJCWpRdWVyeS5jbGVhbkRhdGEoIFsgZWxlbSBdICk7CgkJCQl9CgoJCQkJaWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7CgkJCQkJZWxlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbGVtICk7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCgllbXB0eTogZnVuY3Rpb24oKSB7CgkJZm9yICggdmFyIGkgPSAwLCBlbGVtOyAoZWxlbSA9IHRoaXNbaV0pICE9IG51bGw7IGkrKyApIHsKCQkJLy8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzCgkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCWpRdWVyeS5jbGVhbkRhdGEoIGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIioiKSApOwoJCQl9CgoJCQkvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2RlcwoJCQl3aGlsZSAoIGVsZW0uZmlyc3RDaGlsZCApIHsKCQkJCWVsZW0ucmVtb3ZlQ2hpbGQoIGVsZW0uZmlyc3RDaGlsZCApOwoJCQl9CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJY2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHsKCQlkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzOwoJCWRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50czsKCgkJcmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbiAoKSB7CgkJCXJldHVybiBqUXVlcnkuY2xvbmUoIHRoaXMsIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7CgkJfSk7Cgl9LAoKCWh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQlyZXR1cm4galF1ZXJ5LmFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkgewoJCQl2YXIgZWxlbSA9IHRoaXNbMF0gfHwge30sCgkJCQlpID0gMCwKCQkJCWwgPSB0aGlzLmxlbmd0aDsKCgkJCWlmICggdmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxID8KCQkJCQllbGVtLmlubmVySFRNTC5yZXBsYWNlKCByaW5saW5lalF1ZXJ5LCAiIiApIDoKCQkJCQludWxsOwoJCQl9CgoKCQkJaWYgKCB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmciICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJgoJCQkJKCBqUXVlcnkuc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSB8fCAhcmxlYWRpbmdXaGl0ZXNwYWNlLnRlc3QoIHZhbHVlICkgKSAmJgoJCQkJIXdyYXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbIiIsICIiXSApWzFdLnRvTG93ZXJDYXNlKCkgXSApIHsKCgkJCQl2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoIHJ4aHRtbFRhZywgIjwkMT48LyQyPiIgKTsKCgkJCQl0cnkgewoJCQkJCWZvciAoOyBpIDwgbDsgaSsrICkgewoJCQkJCQkvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3MKCQkJCQkJZWxlbSA9IHRoaXNbaV0gfHwge307CgkJCQkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHsKCQkJCQkJCWpRdWVyeS5jbGVhbkRhdGEoIGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoICIqIiApICk7CgkJCQkJCQllbGVtLmlubmVySFRNTCA9IHZhbHVlOwoJCQkJCQl9CgkJCQkJfQoKCQkJCQllbGVtID0gMDsKCgkJCQkvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2QKCQkJCX0gY2F0Y2goZSkge30KCQkJfQoKCQkJaWYgKCBlbGVtICkgewoJCQkJdGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTsKCQkJfQoJCX0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7Cgl9LAoKCXJlcGxhY2VXaXRoOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJaWYgKCB0aGlzWzBdICYmIHRoaXNbMF0ucGFyZW50Tm9kZSApIHsKCQkJLy8gTWFrZSBzdXJlIHRoYXQgdGhlIGVsZW1lbnRzIGFyZSByZW1vdmVkIGZyb20gdGhlIERPTSBiZWZvcmUgdGhleSBhcmUgaW5zZXJ0ZWQKCQkJLy8gdGhpcyBjYW4gaGVscCBmaXggcmVwbGFjaW5nIGEgcGFyZW50IHdpdGggY2hpbGQgZWxlbWVudHMKCQkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHsKCQkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oaSkgewoJCQkJCXZhciBzZWxmID0galF1ZXJ5KHRoaXMpLCBvbGQgPSBzZWxmLmh0bWwoKTsKCQkJCQlzZWxmLnJlcGxhY2VXaXRoKCB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBvbGQgKSApOwoJCQkJfSk7CgkJCX0KCgkJCWlmICggdHlwZW9mIHZhbHVlICE9PSAic3RyaW5nIiApIHsKCQkJCXZhbHVlID0galF1ZXJ5KCB2YWx1ZSApLmRldGFjaCgpOwoJCQl9CgoJCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQkJdmFyIG5leHQgPSB0aGlzLm5leHRTaWJsaW5nLAoJCQkJCXBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTsKCgkJCQlqUXVlcnkoIHRoaXMgKS5yZW1vdmUoKTsKCgkJCQlpZiAoIG5leHQgKSB7CgkJCQkJalF1ZXJ5KG5leHQpLmJlZm9yZSggdmFsdWUgKTsKCQkJCX0gZWxzZSB7CgkJCQkJalF1ZXJ5KHBhcmVudCkuYXBwZW5kKCB2YWx1ZSApOwoJCQkJfQoJCQl9KTsKCQl9IGVsc2UgewoJCQlyZXR1cm4gdGhpcy5sZW5ndGggPwoJCQkJdGhpcy5wdXNoU3RhY2soIGpRdWVyeShqUXVlcnkuaXNGdW5jdGlvbih2YWx1ZSkgPyB2YWx1ZSgpIDogdmFsdWUpLCAicmVwbGFjZVdpdGgiLCB2YWx1ZSApIDoKCQkJCXRoaXM7CgkJfQoJfSwKCglkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQlyZXR1cm4gdGhpcy5yZW1vdmUoIHNlbGVjdG9yLCB0cnVlICk7Cgl9LAoKCWRvbU1hbmlwOiBmdW5jdGlvbiggYXJncywgdGFibGUsIGNhbGxiYWNrICkgewoJCXZhciByZXN1bHRzLCBmaXJzdCwgZnJhZ21lbnQsIHBhcmVudCwKCQkJdmFsdWUgPSBhcmdzWzBdLAoJCQlzY3JpcHRzID0gW107CgoJCS8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdAoJCWlmICggIWpRdWVyeS5zdXBwb3J0LmNoZWNrQ2xvbmUgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMyAmJiB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmciICYmIHJjaGVja2VkLnRlc3QoIHZhbHVlICkgKSB7CgkJCXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7CgkJCQlqUXVlcnkodGhpcykuZG9tTWFuaXAoIGFyZ3MsIHRhYmxlLCBjYWxsYmFjaywgdHJ1ZSApOwoJCQl9KTsKCQl9CgoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24odmFsdWUpICkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGkpIHsKCQkJCXZhciBzZWxmID0galF1ZXJ5KHRoaXMpOwoJCQkJYXJnc1swXSA9IHZhbHVlLmNhbGwodGhpcywgaSwgdGFibGUgPyBzZWxmLmh0bWwoKSA6IHVuZGVmaW5lZCk7CgkJCQlzZWxmLmRvbU1hbmlwKCBhcmdzLCB0YWJsZSwgY2FsbGJhY2sgKTsKCQkJfSk7CgkJfQoKCQlpZiAoIHRoaXNbMF0gKSB7CgkJCXBhcmVudCA9IHZhbHVlICYmIHZhbHVlLnBhcmVudE5vZGU7CgoJCQkvLyBJZiB3ZSdyZSBpbiBhIGZyYWdtZW50LCBqdXN0IHVzZSB0aGF0IGluc3RlYWQgb2YgYnVpbGRpbmcgYSBuZXcgb25lCgkJCWlmICggalF1ZXJ5LnN1cHBvcnQucGFyZW50Tm9kZSAmJiBwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlID09PSAxMSAmJiBwYXJlbnQuY2hpbGROb2Rlcy5sZW5ndGggPT09IHRoaXMubGVuZ3RoICkgewoJCQkJcmVzdWx0cyA9IHsgZnJhZ21lbnQ6IHBhcmVudCB9OwoKCQkJfSBlbHNlIHsKCQkJCXJlc3VsdHMgPSBqUXVlcnkuYnVpbGRGcmFnbWVudCggYXJncywgdGhpcywgc2NyaXB0cyApOwoJCQl9CgoJCQlmcmFnbWVudCA9IHJlc3VsdHMuZnJhZ21lbnQ7CgoJCQlpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkgewoJCQkJZmlyc3QgPSBmcmFnbWVudCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7CgkJCX0gZWxzZSB7CgkJCQlmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7CgkJCX0KCgkJCWlmICggZmlyc3QgKSB7CgkJCQl0YWJsZSA9IHRhYmxlICYmIGpRdWVyeS5ub2RlTmFtZSggZmlyc3QsICJ0ciIgKTsKCgkJCQlmb3IgKCB2YXIgaSA9IDAsIGwgPSB0aGlzLmxlbmd0aCwgbGFzdEluZGV4ID0gbCAtIDE7IGkgPCBsOyBpKysgKSB7CgkJCQkJY2FsbGJhY2suY2FsbCgKCQkJCQkJdGFibGUgPwoJCQkJCQkJcm9vdCh0aGlzW2ldLCBmaXJzdCkgOgoJCQkJCQkJdGhpc1tpXSwKCQkJCQkJLy8gTWFrZSBzdXJlIHRoYXQgd2UgZG8gbm90IGxlYWsgbWVtb3J5IGJ5IGluYWR2ZXJ0ZW50bHkgZGlzY2FyZGluZwoJCQkJCQkvLyB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgKHdoaWNoIG1pZ2h0IGhhdmUgYXR0YWNoZWQgZGF0YSkgaW5zdGVhZCBvZgoJCQkJCQkvLyB1c2luZyBpdDsgaW4gYWRkaXRpb24sIHVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgb2JqZWN0IGZvciB0aGUgbGFzdAoJCQkJCQkvLyBpdGVtIGluc3RlYWQgb2YgZmlyc3QgYmVjYXVzZSBpdCBjYW4gZW5kIHVwIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0bHkKCQkJCQkJLy8gaW4gY2VydGFpbiBzaXR1YXRpb25zIChCdWcgIzgwNzApLgoJCQkJCQkvLyBGcmFnbWVudHMgZnJvbSB0aGUgZnJhZ21lbnQgY2FjaGUgbXVzdCBhbHdheXMgYmUgY2xvbmVkIGFuZCBuZXZlciB1c2VkCgkJCQkJCS8vIGluIHBsYWNlLgoJCQkJCQlyZXN1bHRzLmNhY2hlYWJsZSB8fCAoIGwgPiAxICYmIGkgPCBsYXN0SW5kZXggKSA/CgkJCQkJCQlqUXVlcnkuY2xvbmUoIGZyYWdtZW50LCB0cnVlLCB0cnVlICkgOgoJCQkJCQkJZnJhZ21lbnQKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCQlpZiAoIHNjcmlwdHMubGVuZ3RoICkgewoJCQkJalF1ZXJ5LmVhY2goIHNjcmlwdHMsIGZ1bmN0aW9uKCBpLCBlbGVtICkgewoJCQkJCWlmICggZWxlbS5zcmMgKSB7CgkJCQkJCWpRdWVyeS5hamF4KHsKCQkJCQkJCXR5cGU6ICJHRVQiLAoJCQkJCQkJZ2xvYmFsOiBmYWxzZSwKCQkJCQkJCXVybDogZWxlbS5zcmMsCgkJCQkJCQlhc3luYzogZmFsc2UsCgkJCQkJCQlkYXRhVHlwZTogInNjcmlwdCIKCQkJCQkJfSk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJalF1ZXJ5Lmdsb2JhbEV2YWwoICggZWxlbS50ZXh0IHx8IGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lckhUTUwgfHwgIiIgKS5yZXBsYWNlKCByY2xlYW5TY3JpcHQsICIvKiQwKi8iICkgKTsKCQkJCQl9CgoJCQkJCWlmICggZWxlbS5wYXJlbnROb2RlICkgewoJCQkJCQllbGVtLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIGVsZW0gKTsKCQkJCQl9CgkJCQl9KTsKCQkJfQoJCX0KCgkJcmV0dXJuIHRoaXM7Cgl9Cn0pOwoKZnVuY3Rpb24gcm9vdCggZWxlbSwgY3VyICkgewoJcmV0dXJuIGpRdWVyeS5ub2RlTmFtZShlbGVtLCAidGFibGUiKSA/CgkJKGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoInRib2R5IilbMF0gfHwKCQllbGVtLmFwcGVuZENoaWxkKGVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0Ym9keSIpKSkgOgoJCWVsZW07Cn0KCmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7CgoJaWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxIHx8ICFqUXVlcnkuaGFzRGF0YSggc3JjICkgKSB7CgkJcmV0dXJuOwoJfQoKCXZhciB0eXBlLCBpLCBsLAoJCW9sZERhdGEgPSBqUXVlcnkuX2RhdGEoIHNyYyApLAoJCWN1ckRhdGEgPSBqUXVlcnkuX2RhdGEoIGRlc3QsIG9sZERhdGEgKSwKCQlldmVudHMgPSBvbGREYXRhLmV2ZW50czsKCglpZiAoIGV2ZW50cyApIHsKCQlkZWxldGUgY3VyRGF0YS5oYW5kbGU7CgkJY3VyRGF0YS5ldmVudHMgPSB7fTsKCgkJZm9yICggdHlwZSBpbiBldmVudHMgKSB7CgkJCWZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkgewoJCQkJalF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApOwoJCQl9CgkJfQoJfQoKCS8vIG1ha2UgdGhlIGNsb25lZCBwdWJsaWMgZGF0YSBvYmplY3QgYSBjb3B5IGZyb20gdGhlIG9yaWdpbmFsCglpZiAoIGN1ckRhdGEuZGF0YSApIHsKCQljdXJEYXRhLmRhdGEgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyRGF0YS5kYXRhICk7Cgl9Cn0KCmZ1bmN0aW9uIGNsb25lRml4QXR0cmlidXRlcyggc3JjLCBkZXN0ICkgewoJdmFyIG5vZGVOYW1lOwoKCS8vIFdlIGRvIG5vdCBuZWVkIHRvIGRvIGFueXRoaW5nIGZvciBub24tRWxlbWVudHMKCWlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHsKCQlyZXR1cm47Cgl9CgoJLy8gY2xlYXJBdHRyaWJ1dGVzIHJlbW92ZXMgdGhlIGF0dHJpYnV0ZXMsIHdoaWNoIHdlIGRvbid0IHdhbnQsCgkvLyBidXQgYWxzbyByZW1vdmVzIHRoZSBhdHRhY2hFdmVudCBldmVudHMsIHdoaWNoIHdlICpkbyogd2FudAoJaWYgKCBkZXN0LmNsZWFyQXR0cmlidXRlcyApIHsKCQlkZXN0LmNsZWFyQXR0cmlidXRlcygpOwoJfQoKCS8vIG1lcmdlQXR0cmlidXRlcywgaW4gY29udHJhc3QsIG9ubHkgbWVyZ2VzIGJhY2sgb24gdGhlCgkvLyBvcmlnaW5hbCBhdHRyaWJ1dGVzLCBub3QgdGhlIGV2ZW50cwoJaWYgKCBkZXN0Lm1lcmdlQXR0cmlidXRlcyApIHsKCQlkZXN0Lm1lcmdlQXR0cmlidXRlcyggc3JjICk7Cgl9CgoJbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgoJLy8gSUU2LTggZmFpbCB0byBjbG9uZSBjaGlsZHJlbiBpbnNpZGUgb2JqZWN0IGVsZW1lbnRzIHRoYXQgdXNlCgkvLyB0aGUgcHJvcHJpZXRhcnkgY2xhc3NpZCBhdHRyaWJ1dGUgdmFsdWUgKHJhdGhlciB0aGFuIHRoZSB0eXBlCgkvLyBhdHRyaWJ1dGUpIHRvIGlkZW50aWZ5IHRoZSB0eXBlIG9mIGNvbnRlbnQgdG8gZGlzcGxheQoJaWYgKCBub2RlTmFtZSA9PT0gIm9iamVjdCIgKSB7CgkJZGVzdC5vdXRlckhUTUwgPSBzcmMub3V0ZXJIVE1MOwoKCX0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSAiaW5wdXQiICYmIChzcmMudHlwZSA9PT0gImNoZWNrYm94IiB8fCBzcmMudHlwZSA9PT0gInJhZGlvIikgKSB7CgkJLy8gSUU2LTggZmFpbHMgdG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveAoJCS8vIG9yIHJhZGlvIGJ1dHRvbi4gV29yc2UsIElFNi03IGZhaWwgdG8gZ2l2ZSB0aGUgY2xvbmVkIGVsZW1lbnQKCQkvLyBhIGNoZWNrZWQgYXBwZWFyYW5jZSBpZiB0aGUgZGVmYXVsdENoZWNrZWQgdmFsdWUgaXNuJ3QgYWxzbyBzZXQKCQlpZiAoIHNyYy5jaGVja2VkICkgewoJCQlkZXN0LmRlZmF1bHRDaGVja2VkID0gZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7CgkJfQoKCQkvLyBJRTYtNyBnZXQgY29uZnVzZWQgYW5kIGVuZCB1cCBzZXR0aW5nIHRoZSB2YWx1ZSBvZiBhIGNsb25lZAoJCS8vIGNoZWNrYm94L3JhZGlvIGJ1dHRvbiB0byBhbiBlbXB0eSBzdHJpbmcgaW5zdGVhZCBvZiAib24iCgkJaWYgKCBkZXN0LnZhbHVlICE9PSBzcmMudmFsdWUgKSB7CgkJCWRlc3QudmFsdWUgPSBzcmMudmFsdWU7CgkJfQoKCS8vIElFNi04IGZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkCgkvLyBzdGF0ZSB3aGVuIGNsb25pbmcgb3B0aW9ucwoJfSBlbHNlIGlmICggbm9kZU5hbWUgPT09ICJvcHRpb24iICkgewoJCWRlc3Quc2VsZWN0ZWQgPSBzcmMuZGVmYXVsdFNlbGVjdGVkOwoKCS8vIElFNi04IGZhaWxzIHRvIHNldCB0aGUgZGVmYXVsdFZhbHVlIHRvIHRoZSBjb3JyZWN0IHZhbHVlIHdoZW4KCS8vIGNsb25pbmcgb3RoZXIgdHlwZXMgb2YgaW5wdXQgZmllbGRzCgl9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiB8fCBub2RlTmFtZSA9PT0gInRleHRhcmVhIiApIHsKCQlkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7CgoJLy8gSUUgYmxhbmtzIGNvbnRlbnRzIHdoZW4gY2xvbmluZyBzY3JpcHRzCgl9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gInNjcmlwdCIgJiYgZGVzdC50ZXh0ICE9PSBzcmMudGV4dCApIHsKCQlkZXN0LnRleHQgPSBzcmMudGV4dDsKCX0KCgkvLyBFdmVudCBkYXRhIGdldHMgcmVmZXJlbmNlZCBpbnN0ZWFkIG9mIGNvcGllZCBpZiB0aGUgZXhwYW5kbwoJLy8gZ2V0cyBjb3BpZWQgdG9vCglkZXN0LnJlbW92ZUF0dHJpYnV0ZSggalF1ZXJ5LmV4cGFuZG8gKTsKCgkvLyBDbGVhciBmbGFncyBmb3IgYnViYmxpbmcgc3BlY2lhbCBjaGFuZ2Uvc3VibWl0IGV2ZW50cywgdGhleSBtdXN0CgkvLyBiZSByZWF0dGFjaGVkIHdoZW4gdGhlIG5ld2x5IGNsb25lZCBldmVudHMgYXJlIGZpcnN0IGFjdGl2YXRlZAoJZGVzdC5yZW1vdmVBdHRyaWJ1dGUoICJfc3VibWl0X2F0dGFjaGVkIiApOwoJZGVzdC5yZW1vdmVBdHRyaWJ1dGUoICJfY2hhbmdlX2F0dGFjaGVkIiApOwp9CgpqUXVlcnkuYnVpbGRGcmFnbWVudCA9IGZ1bmN0aW9uKCBhcmdzLCBub2Rlcywgc2NyaXB0cyApIHsKCXZhciBmcmFnbWVudCwgY2FjaGVhYmxlLCBjYWNoZXJlc3VsdHMsIGRvYywKCWZpcnN0ID0gYXJnc1sgMCBdOwoKCS8vIG5vZGVzIG1heSBjb250YWluIGVpdGhlciBhbiBleHBsaWNpdCBkb2N1bWVudCBvYmplY3QsCgkvLyBhIGpRdWVyeSBjb2xsZWN0aW9uIG9yIGNvbnRleHQgb2JqZWN0LgoJLy8gSWYgbm9kZXNbMF0gY29udGFpbnMgYSB2YWxpZCBvYmplY3QgdG8gYXNzaWduIHRvIGRvYwoJaWYgKCBub2RlcyAmJiBub2Rlc1swXSApIHsKCQlkb2MgPSBub2Rlc1swXS5vd25lckRvY3VtZW50IHx8IG5vZGVzWzBdOwoJfQoKCS8vIEVuc3VyZSB0aGF0IGFuIGF0dHIgb2JqZWN0IGRvZXNuJ3QgaW5jb3JyZWN0bHkgc3RhbmQgaW4gYXMgYSBkb2N1bWVudCBvYmplY3QKCS8vIENocm9tZSBhbmQgRmlyZWZveCBzZWVtIHRvIGFsbG93IHRoaXMgdG8gb2NjdXIgYW5kIHdpbGwgdGhyb3cgZXhjZXB0aW9uCgkvLyBGaXhlcyAjODk1MAoJaWYgKCAhZG9jLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQgKSB7CgkJZG9jID0gZG9jdW1lbnQ7Cgl9CgoJLy8gT25seSBjYWNoZSAic21hbGwiICgxLzIgS0IpIEhUTUwgc3RyaW5ncyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggdGhlIG1haW4gZG9jdW1lbnQKCS8vIENsb25pbmcgb3B0aW9ucyBsb3NlcyB0aGUgc2VsZWN0ZWQgc3RhdGUsIHNvIGRvbid0IGNhY2hlIHRoZW0KCS8vIElFIDYgZG9lc24ndCBsaWtlIGl0IHdoZW4geW91IHB1dCA8b2JqZWN0PiBvciA8ZW1iZWQ+IGVsZW1lbnRzIGluIGEgZnJhZ21lbnQKCS8vIEFsc28sIFdlYktpdCBkb2VzIG5vdCBjbG9uZSAnY2hlY2tlZCcgYXR0cmlidXRlcyBvbiBjbG9uZU5vZGUsIHNvIGRvbid0IGNhY2hlCgkvLyBMYXN0bHksIElFNiw3LDggd2lsbCBub3QgY29ycmVjdGx5IHJldXNlIGNhY2hlZCBmcmFnbWVudHMgdGhhdCB3ZXJlIGNyZWF0ZWQgZnJvbSB1bmtub3duIGVsZW1zICMxMDUwMQoJaWYgKCBhcmdzLmxlbmd0aCA9PT0gMSAmJiB0eXBlb2YgZmlyc3QgPT09ICJzdHJpbmciICYmIGZpcnN0Lmxlbmd0aCA8IDUxMiAmJiBkb2MgPT09IGRvY3VtZW50ICYmCgkJZmlyc3QuY2hhckF0KDApID09PSAiPCIgJiYgIXJub2NhY2hlLnRlc3QoIGZpcnN0ICkgJiYKCQkoalF1ZXJ5LnN1cHBvcnQuY2hlY2tDbG9uZSB8fCAhcmNoZWNrZWQudGVzdCggZmlyc3QgKSkgJiYKCQkoalF1ZXJ5LnN1cHBvcnQuaHRtbDVDbG9uZSB8fCAhcm5vc2hpbWNhY2hlLnRlc3QoIGZpcnN0ICkpICkgewoKCQljYWNoZWFibGUgPSB0cnVlOwoKCQljYWNoZXJlc3VsdHMgPSBqUXVlcnkuZnJhZ21lbnRzWyBmaXJzdCBdOwoJCWlmICggY2FjaGVyZXN1bHRzICYmIGNhY2hlcmVzdWx0cyAhPT0gMSApIHsKCQkJZnJhZ21lbnQgPSBjYWNoZXJlc3VsdHM7CgkJfQoJfQoKCWlmICggIWZyYWdtZW50ICkgewoJCWZyYWdtZW50ID0gZG9jLmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTsKCQlqUXVlcnkuY2xlYW4oIGFyZ3MsIGRvYywgZnJhZ21lbnQsIHNjcmlwdHMgKTsKCX0KCglpZiAoIGNhY2hlYWJsZSApIHsKCQlqUXVlcnkuZnJhZ21lbnRzWyBmaXJzdCBdID0gY2FjaGVyZXN1bHRzID8gZnJhZ21lbnQgOiAxOwoJfQoKCXJldHVybiB7IGZyYWdtZW50OiBmcmFnbWVudCwgY2FjaGVhYmxlOiBjYWNoZWFibGUgfTsKfTsKCmpRdWVyeS5mcmFnbWVudHMgPSB7fTsKCmpRdWVyeS5lYWNoKHsKCWFwcGVuZFRvOiAiYXBwZW5kIiwKCXByZXBlbmRUbzogInByZXBlbmQiLAoJaW5zZXJ0QmVmb3JlOiAiYmVmb3JlIiwKCWluc2VydEFmdGVyOiAiYWZ0ZXIiLAoJcmVwbGFjZUFsbDogInJlcGxhY2VXaXRoIgp9LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQl2YXIgcmV0ID0gW10sCgkJCWluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSwKCQkJcGFyZW50ID0gdGhpcy5sZW5ndGggPT09IDEgJiYgdGhpc1swXS5wYXJlbnROb2RlOwoKCQlpZiAoIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgPT09IDExICYmIHBhcmVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSAmJiBpbnNlcnQubGVuZ3RoID09PSAxICkgewoJCQlpbnNlcnRbIG9yaWdpbmFsIF0oIHRoaXNbMF0gKTsKCQkJcmV0dXJuIHRoaXM7CgoJCX0gZWxzZSB7CgkJCWZvciAoIHZhciBpID0gMCwgbCA9IGluc2VydC5sZW5ndGg7IGkgPCBsOyBpKysgKSB7CgkJCQl2YXIgZWxlbXMgPSAoIGkgPiAwID8gdGhpcy5jbG9uZSh0cnVlKSA6IHRoaXMgKS5nZXQoKTsKCQkJCWpRdWVyeSggaW5zZXJ0W2ldIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7CgkJCQlyZXQgPSByZXQuY29uY2F0KCBlbGVtcyApOwoJCQl9CgoJCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCwgbmFtZSwgaW5zZXJ0LnNlbGVjdG9yICk7CgkJfQoJfTsKfSk7CgpmdW5jdGlvbiBnZXRBbGwoIGVsZW0gKSB7CglpZiAoIHR5cGVvZiBlbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSAidW5kZWZpbmVkIiApIHsKCQlyZXR1cm4gZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSggIioiICk7CgoJfSBlbHNlIGlmICggdHlwZW9mIGVsZW0ucXVlcnlTZWxlY3RvckFsbCAhPT0gInVuZGVmaW5lZCIgKSB7CgkJcmV0dXJuIGVsZW0ucXVlcnlTZWxlY3RvckFsbCggIioiICk7CgoJfSBlbHNlIHsKCQlyZXR1cm4gW107Cgl9Cn0KCi8vIFVzZWQgaW4gY2xlYW4sIGZpeGVzIHRoZSBkZWZhdWx0Q2hlY2tlZCBwcm9wZXJ0eQpmdW5jdGlvbiBmaXhEZWZhdWx0Q2hlY2tlZCggZWxlbSApIHsKCWlmICggZWxlbS50eXBlID09PSAiY2hlY2tib3giIHx8IGVsZW0udHlwZSA9PT0gInJhZGlvIiApIHsKCQllbGVtLmRlZmF1bHRDaGVja2VkID0gZWxlbS5jaGVja2VkOwoJfQp9Ci8vIEZpbmRzIGFsbCBpbnB1dHMgYW5kIHBhc3NlcyB0aGVtIHRvIGZpeERlZmF1bHRDaGVja2VkCmZ1bmN0aW9uIGZpbmRJbnB1dHMoIGVsZW0gKSB7Cgl2YXIgbm9kZU5hbWUgPSAoIGVsZW0ubm9kZU5hbWUgfHwgIiIgKS50b0xvd2VyQ2FzZSgpOwoJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQlmaXhEZWZhdWx0Q2hlY2tlZCggZWxlbSApOwoJLy8gU2tpcCBzY3JpcHRzLCBnZXQgb3RoZXIgY2hpbGRyZW4KCX0gZWxzZSBpZiAoIG5vZGVOYW1lICE9PSAic2NyaXB0IiAmJiB0eXBlb2YgZWxlbS5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gInVuZGVmaW5lZCIgKSB7CgkJalF1ZXJ5LmdyZXAoIGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoImlucHV0IiksIGZpeERlZmF1bHRDaGVja2VkICk7Cgl9Cn0KCi8vIERlcml2ZWQgRnJvbTogaHR0cDovL3d3dy5pZWNzcy5jb20vc2hpbXByb3ZlL2phdmFzY3JpcHQvc2hpbXByb3ZlLjEtMC0xLmpzCmZ1bmN0aW9uIHNoaW1DbG9uZU5vZGUoIGVsZW0gKSB7Cgl2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImRpdiIgKTsKCXNhZmVGcmFnbWVudC5hcHBlbmRDaGlsZCggZGl2ICk7CgoJZGl2LmlubmVySFRNTCA9IGVsZW0ub3V0ZXJIVE1MOwoJcmV0dXJuIGRpdi5maXJzdENoaWxkOwp9CgpqUXVlcnkuZXh0ZW5kKHsKCWNsb25lOiBmdW5jdGlvbiggZWxlbSwgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7CgkJdmFyIHNyY0VsZW1lbnRzLAoJCQlkZXN0RWxlbWVudHMsCgkJCWksCgkJCS8vIElFPD04IGRvZXMgbm90IHByb3Blcmx5IGNsb25lIGRldGFjaGVkLCB1bmtub3duIGVsZW1lbnQgbm9kZXMKCQkJY2xvbmUgPSBqUXVlcnkuc3VwcG9ydC5odG1sNUNsb25lIHx8IGpRdWVyeS5pc1hNTERvYyhlbGVtKSB8fCAhcm5vc2hpbWNhY2hlLnRlc3QoICI8IiArIGVsZW0ubm9kZU5hbWUgKyAiPiIgKSA/CgkJCQllbGVtLmNsb25lTm9kZSggdHJ1ZSApIDoKCQkJCXNoaW1DbG9uZU5vZGUoIGVsZW0gKTsKCgkJaWYgKCAoIWpRdWVyeS5zdXBwb3J0Lm5vQ2xvbmVFdmVudCB8fCAhalF1ZXJ5LnN1cHBvcnQubm9DbG9uZUNoZWNrZWQpICYmCgkJCQkoZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5vZGVUeXBlID09PSAxMSkgJiYgIWpRdWVyeS5pc1hNTERvYyhlbGVtKSApIHsKCQkJLy8gSUUgY29waWVzIGV2ZW50cyBib3VuZCB2aWEgYXR0YWNoRXZlbnQgd2hlbiB1c2luZyBjbG9uZU5vZGUuCgkJCS8vIENhbGxpbmcgZGV0YWNoRXZlbnQgb24gdGhlIGNsb25lIHdpbGwgYWxzbyByZW1vdmUgdGhlIGV2ZW50cwoJCQkvLyBmcm9tIHRoZSBvcmlnaW5hbC4gSW4gb3JkZXIgdG8gZ2V0IGFyb3VuZCB0aGlzLCB3ZSB1c2Ugc29tZQoJCQkvLyBwcm9wcmlldGFyeSBtZXRob2RzIHRvIGNsZWFyIHRoZSBldmVudHMuIFRoYW5rcyB0byBNb29Ub29scwoJCQkvLyBndXlzIGZvciB0aGlzIGhvdG5lc3MuCgoJCQljbG9uZUZpeEF0dHJpYnV0ZXMoIGVsZW0sIGNsb25lICk7CgoJCQkvLyBVc2luZyBTaXp6bGUgaGVyZSBpcyBjcmF6eSBzbG93LCBzbyB3ZSB1c2UgZ2V0RWxlbWVudHNCeVRhZ05hbWUgaW5zdGVhZAoJCQlzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApOwoJCQlkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7CgoJCQkvLyBXZWlyZCBpdGVyYXRpb24gYmVjYXVzZSBJRSB3aWxsIHJlcGxhY2UgdGhlIGxlbmd0aCBwcm9wZXJ0eQoJCQkvLyB3aXRoIGFuIGVsZW1lbnQgaWYgeW91IGFyZSBjbG9uaW5nIHRoZSBib2R5IGFuZCBvbmUgb2YgdGhlCgkJCS8vIGVsZW1lbnRzIG9uIHRoZSBwYWdlIGhhcyBhIG5hbWUgb3IgaWQgb2YgImxlbmd0aCIKCQkJZm9yICggaSA9IDA7IHNyY0VsZW1lbnRzW2ldOyArK2kgKSB7CgkJCQkvLyBFbnN1cmUgdGhhdCB0aGUgZGVzdGluYXRpb24gbm9kZSBpcyBub3QgbnVsbDsgRml4ZXMgIzk1ODcKCQkJCWlmICggZGVzdEVsZW1lbnRzW2ldICkgewoJCQkJCWNsb25lRml4QXR0cmlidXRlcyggc3JjRWxlbWVudHNbaV0sIGRlc3RFbGVtZW50c1tpXSApOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgdG8gdGhlIGNsb25lCgkJaWYgKCBkYXRhQW5kRXZlbnRzICkgewoJCQljbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTsKCgkJCWlmICggZGVlcERhdGFBbmRFdmVudHMgKSB7CgkJCQlzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApOwoJCQkJZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApOwoKCQkJCWZvciAoIGkgPSAwOyBzcmNFbGVtZW50c1tpXTsgKytpICkgewoJCQkJCWNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1tpXSwgZGVzdEVsZW1lbnRzW2ldICk7CgkJCQl9CgkJCX0KCQl9CgoJCXNyY0VsZW1lbnRzID0gZGVzdEVsZW1lbnRzID0gbnVsbDsKCgkJLy8gUmV0dXJuIHRoZSBjbG9uZWQgc2V0CgkJcmV0dXJuIGNsb25lOwoJfSwKCgljbGVhbjogZnVuY3Rpb24oIGVsZW1zLCBjb250ZXh0LCBmcmFnbWVudCwgc2NyaXB0cyApIHsKCQl2YXIgY2hlY2tTY3JpcHRUeXBlLCBzY3JpcHQsIGosCgkJCQlyZXQgPSBbXTsKCgkJY29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7CgoJCS8vICFjb250ZXh0LmNyZWF0ZUVsZW1lbnQgZmFpbHMgaW4gSUUgd2l0aCBhbiBlcnJvciBidXQgcmV0dXJucyB0eXBlb2YgJ29iamVjdCcKCQlpZiAoIHR5cGVvZiBjb250ZXh0LmNyZWF0ZUVsZW1lbnQgPT09ICJ1bmRlZmluZWQiICkgewoJCQljb250ZXh0ID0gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHRbMF0gJiYgY29udGV4dFswXS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50OwoJCX0KCgkJZm9yICggdmFyIGkgPSAwLCBlbGVtOyAoZWxlbSA9IGVsZW1zW2ldKSAhPSBudWxsOyBpKysgKSB7CgkJCWlmICggdHlwZW9mIGVsZW0gPT09ICJudW1iZXIiICkgewoJCQkJZWxlbSArPSAiIjsKCQkJfQoKCQkJaWYgKCAhZWxlbSApIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQkvLyBDb252ZXJ0IGh0bWwgc3RyaW5nIGludG8gRE9NIG5vZGVzCgkJCWlmICggdHlwZW9mIGVsZW0gPT09ICJzdHJpbmciICkgewoJCQkJaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkgewoJCQkJCWVsZW0gPSBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICk7CgkJCQl9IGVsc2UgewoJCQkJCS8vIEZpeCAiWEhUTUwiLXN0eWxlIHRhZ3MgaW4gYWxsIGJyb3dzZXJzCgkJCQkJZWxlbSA9IGVsZW0ucmVwbGFjZShyeGh0bWxUYWcsICI8JDE+PC8kMj4iKTsKCgkJCQkJLy8gVHJpbSB3aGl0ZXNwYWNlLCBvdGhlcndpc2UgaW5kZXhPZiB3b24ndCB3b3JrIGFzIGV4cGVjdGVkCgkJCQkJdmFyIHRhZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsiIiwgIiJdIClbMV0udG9Mb3dlckNhc2UoKSwKCQkJCQkJd3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQsCgkJCQkJCWRlcHRoID0gd3JhcFswXSwKCQkJCQkJZGl2ID0gY29udGV4dC5jcmVhdGVFbGVtZW50KCJkaXYiKSwKCQkJCQkJc2FmZUNoaWxkTm9kZXMgPSBzYWZlRnJhZ21lbnQuY2hpbGROb2RlcywKCQkJCQkJcmVtb3ZlOwoKCQkJCQkvLyBBcHBlbmQgd3JhcHBlciBlbGVtZW50IHRvIHVua25vd24gZWxlbWVudCBzYWZlIGRvYyBmcmFnbWVudAoJCQkJCWlmICggY29udGV4dCA9PT0gZG9jdW1lbnQgKSB7CgkJCQkJCS8vIFVzZSB0aGUgZnJhZ21lbnQgd2UndmUgYWxyZWFkeSBjcmVhdGVkIGZvciB0aGlzIGRvY3VtZW50CgkJCQkJCXNhZmVGcmFnbWVudC5hcHBlbmRDaGlsZCggZGl2ICk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJLy8gVXNlIGEgZnJhZ21lbnQgY3JlYXRlZCB3aXRoIHRoZSBvd25lciBkb2N1bWVudAoJCQkJCQljcmVhdGVTYWZlRnJhZ21lbnQoIGNvbnRleHQgKS5hcHBlbmRDaGlsZCggZGl2ICk7CgkJCQkJfQoKCQkJCQkvLyBHbyB0byBodG1sIGFuZCBiYWNrLCB0aGVuIHBlZWwgb2ZmIGV4dHJhIHdyYXBwZXJzCgkJCQkJZGl2LmlubmVySFRNTCA9IHdyYXBbMV0gKyBlbGVtICsgd3JhcFsyXTsKCgkJCQkJLy8gTW92ZSB0byB0aGUgcmlnaHQgZGVwdGgKCQkJCQl3aGlsZSAoIGRlcHRoLS0gKSB7CgkJCQkJCWRpdiA9IGRpdi5sYXN0Q2hpbGQ7CgkJCQkJfQoKCQkJCQkvLyBSZW1vdmUgSUUncyBhdXRvaW5zZXJ0ZWQgPHRib2R5PiBmcm9tIHRhYmxlIGZyYWdtZW50cwoJCQkJCWlmICggIWpRdWVyeS5zdXBwb3J0LnRib2R5ICkgewoKCQkJCQkJLy8gU3RyaW5nIHdhcyBhIDx0YWJsZT4sICptYXkqIGhhdmUgc3B1cmlvdXMgPHRib2R5PgoJCQkJCQl2YXIgaGFzQm9keSA9IHJ0Ym9keS50ZXN0KGVsZW0pLAoJCQkJCQkJdGJvZHkgPSB0YWcgPT09ICJ0YWJsZSIgJiYgIWhhc0JvZHkgPwoJCQkJCQkJCWRpdi5maXJzdENoaWxkICYmIGRpdi5maXJzdENoaWxkLmNoaWxkTm9kZXMgOgoKCQkJCQkJCQkvLyBTdHJpbmcgd2FzIGEgYmFyZSA8dGhlYWQ+IG9yIDx0Zm9vdD4KCQkJCQkJCQl3cmFwWzFdID09PSAiPHRhYmxlPiIgJiYgIWhhc0JvZHkgPwoJCQkJCQkJCQlkaXYuY2hpbGROb2RlcyA6CgkJCQkJCQkJCVtdOwoKCQkJCQkJZm9yICggaiA9IHRib2R5Lmxlbmd0aCAtIDE7IGogPj0gMCA7IC0taiApIHsKCQkJCQkJCWlmICggalF1ZXJ5Lm5vZGVOYW1lKCB0Ym9keVsgaiBdLCAidGJvZHkiICkgJiYgIXRib2R5WyBqIF0uY2hpbGROb2Rlcy5sZW5ndGggKSB7CgkJCQkJCQkJdGJvZHlbIGogXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCB0Ym9keVsgaiBdICk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgoJCQkJCS8vIElFIGNvbXBsZXRlbHkga2lsbHMgbGVhZGluZyB3aGl0ZXNwYWNlIHdoZW4gaW5uZXJIVE1MIGlzIHVzZWQKCQkJCQlpZiAoICFqUXVlcnkuc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSAmJiBybGVhZGluZ1doaXRlc3BhY2UudGVzdCggZWxlbSApICkgewoJCQkJCQlkaXYuaW5zZXJ0QmVmb3JlKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBybGVhZGluZ1doaXRlc3BhY2UuZXhlYyhlbGVtKVswXSApLCBkaXYuZmlyc3RDaGlsZCApOwoJCQkJCX0KCgkJCQkJZWxlbSA9IGRpdi5jaGlsZE5vZGVzOwoKCQkJCQkvLyBDbGVhciBlbGVtZW50cyBmcm9tIERvY3VtZW50RnJhZ21lbnQgKHNhZmVGcmFnbWVudCBvciBvdGhlcndpc2UpCgkJCQkJLy8gdG8gYXZvaWQgaG9hcmRpbmcgZWxlbWVudHMuIEZpeGVzICMxMTM1NgoJCQkJCWlmICggZGl2ICkgewoJCQkJCQlkaXYucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZGl2ICk7CgoJCQkJCQkvLyBHdWFyZCBhZ2FpbnN0IC0xIGluZGV4IGV4Y2VwdGlvbnMgaW4gRkYzLjYKCQkJCQkJaWYgKCBzYWZlQ2hpbGROb2Rlcy5sZW5ndGggPiAwICkgewoJCQkJCQkJcmVtb3ZlID0gc2FmZUNoaWxkTm9kZXNbIHNhZmVDaGlsZE5vZGVzLmxlbmd0aCAtIDEgXTsKCgkJCQkJCQlpZiAoIHJlbW92ZSAmJiByZW1vdmUucGFyZW50Tm9kZSApIHsKCQkJCQkJCQlyZW1vdmUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggcmVtb3ZlICk7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCS8vIFJlc2V0cyBkZWZhdWx0Q2hlY2tlZCBmb3IgYW55IHJhZGlvcyBhbmQgY2hlY2tib3hlcwoJCQkvLyBhYm91dCB0byBiZSBhcHBlbmRlZCB0byB0aGUgRE9NIGluIElFIDYvNyAoIzgwNjApCgkJCXZhciBsZW47CgkJCWlmICggIWpRdWVyeS5zdXBwb3J0LmFwcGVuZENoZWNrZWQgKSB7CgkJCQlpZiAoIGVsZW1bMF0gJiYgdHlwZW9mIChsZW4gPSBlbGVtLmxlbmd0aCkgPT09ICJudW1iZXIiICkgewoJCQkJCWZvciAoIGogPSAwOyBqIDwgbGVuOyBqKysgKSB7CgkJCQkJCWZpbmRJbnB1dHMoIGVsZW1bal0gKTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCWZpbmRJbnB1dHMoIGVsZW0gKTsKCQkJCX0KCQkJfQoKCQkJaWYgKCBlbGVtLm5vZGVUeXBlICkgewoJCQkJcmV0LnB1c2goIGVsZW0gKTsKCQkJfSBlbHNlIHsKCQkJCXJldCA9IGpRdWVyeS5tZXJnZSggcmV0LCBlbGVtICk7CgkJCX0KCQl9CgoJCWlmICggZnJhZ21lbnQgKSB7CgkJCWNoZWNrU2NyaXB0VHlwZSA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCQkJcmV0dXJuICFlbGVtLnR5cGUgfHwgcnNjcmlwdFR5cGUudGVzdCggZWxlbS50eXBlICk7CgkJCX07CgkJCWZvciAoIGkgPSAwOyByZXRbaV07IGkrKyApIHsKCQkJCXNjcmlwdCA9IHJldFtpXTsKCQkJCWlmICggc2NyaXB0cyAmJiBqUXVlcnkubm9kZU5hbWUoIHNjcmlwdCwgInNjcmlwdCIgKSAmJiAoIXNjcmlwdC50eXBlIHx8IHJzY3JpcHRUeXBlLnRlc3QoIHNjcmlwdC50eXBlICkpICkgewoJCQkJCXNjcmlwdHMucHVzaCggc2NyaXB0LnBhcmVudE5vZGUgPyBzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICkgOiBzY3JpcHQgKTsKCgkJCQl9IGVsc2UgewoJCQkJCWlmICggc2NyaXB0Lm5vZGVUeXBlID09PSAxICkgewoJCQkJCQl2YXIganNUYWdzID0galF1ZXJ5LmdyZXAoIHNjcmlwdC5nZXRFbGVtZW50c0J5VGFnTmFtZSggInNjcmlwdCIgKSwgY2hlY2tTY3JpcHRUeXBlICk7CgoJCQkJCQlyZXQuc3BsaWNlLmFwcGx5KCByZXQsIFtpICsgMSwgMF0uY29uY2F0KCBqc1RhZ3MgKSApOwoJCQkJCX0KCQkJCQlmcmFnbWVudC5hcHBlbmRDaGlsZCggc2NyaXB0ICk7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiByZXQ7Cgl9LAoKCWNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zICkgewoJCXZhciBkYXRhLCBpZCwKCQkJY2FjaGUgPSBqUXVlcnkuY2FjaGUsCgkJCXNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbCwKCQkJZGVsZXRlRXhwYW5kbyA9IGpRdWVyeS5zdXBwb3J0LmRlbGV0ZUV4cGFuZG87CgoJCWZvciAoIHZhciBpID0gMCwgZWxlbTsgKGVsZW0gPSBlbGVtc1tpXSkgIT0gbnVsbDsgaSsrICkgewoJCQlpZiAoIGVsZW0ubm9kZU5hbWUgJiYgalF1ZXJ5Lm5vRGF0YVtlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldICkgewoJCQkJY29udGludWU7CgkJCX0KCgkJCWlkID0gZWxlbVsgalF1ZXJ5LmV4cGFuZG8gXTsKCgkJCWlmICggaWQgKSB7CgkJCQlkYXRhID0gY2FjaGVbIGlkIF07CgoJCQkJaWYgKCBkYXRhICYmIGRhdGEuZXZlbnRzICkgewoJCQkJCWZvciAoIHZhciB0eXBlIGluIGRhdGEuZXZlbnRzICkgewoJCQkJCQlpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHsKCQkJCQkJCWpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTsKCgkJCQkJCS8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVtb3ZlJ3Mgb3ZlcmhlYWQKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJLy8gTnVsbCB0aGUgRE9NIHJlZmVyZW5jZSB0byBhdm9pZCBJRTYvNy84IGxlYWsgKCM3MDU0KQoJCQkJCWlmICggZGF0YS5oYW5kbGUgKSB7CgkJCQkJCWRhdGEuaGFuZGxlLmVsZW0gPSBudWxsOwoJCQkJCX0KCQkJCX0KCgkJCQlpZiAoIGRlbGV0ZUV4cGFuZG8gKSB7CgkJCQkJZGVsZXRlIGVsZW1bIGpRdWVyeS5leHBhbmRvIF07CgoJCQkJfSBlbHNlIGlmICggZWxlbS5yZW1vdmVBdHRyaWJ1dGUgKSB7CgkJCQkJZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIGpRdWVyeS5leHBhbmRvICk7CgkJCQl9CgoJCQkJZGVsZXRlIGNhY2hlWyBpZCBdOwoJCQl9CgkJfQoJfQp9KTsKCgoKCnZhciByYWxwaGEgPSAvYWxwaGFcKFteKV0qXCkvaSwKCXJvcGFjaXR5ID0gL29wYWNpdHk9KFteKV0qKS8sCgkvLyBmaXhlZCBmb3IgSUU5LCBzZWUgIzgzNDYKCXJ1cHBlciA9IC8oW0EtWl18Xm1zKS9nLAoJcm51bSA9IC9eW1wtK10/KD86XGQqXC4pP1xkKyQvaSwKCXJudW1ub25weCA9IC9eLT8oPzpcZCpcLik/XGQrKD8hcHgpW15cZFxzXSskL2ksCglycmVsTnVtID0gL14oW1wtK10pPShbXC0rLlxkZV0rKS8sCglybWFyZ2luID0gL15tYXJnaW4vLAoKCWNzc1Nob3cgPSB7IHBvc2l0aW9uOiAiYWJzb2x1dGUiLCB2aXNpYmlsaXR5OiAiaGlkZGVuIiwgZGlzcGxheTogImJsb2NrIiB9LAoKCS8vIG9yZGVyIGlzIGltcG9ydGFudCEKCWNzc0V4cGFuZCA9IFsgIlRvcCIsICJSaWdodCIsICJCb3R0b20iLCAiTGVmdCIgXSwKCgljdXJDU1MsCgoJZ2V0Q29tcHV0ZWRTdHlsZSwKCWN1cnJlbnRTdHlsZTsKCmpRdWVyeS5mbi5jc3MgPSBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7CglyZXR1cm4galF1ZXJ5LmFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkgewoJCXJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8KCQkJalF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2YWx1ZSApIDoKCQkJalF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApOwoJfSwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7Cn07CgpqUXVlcnkuZXh0ZW5kKHsKCS8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdAoJLy8gYmVoYXZpb3Igb2YgZ2V0dGluZyBhbmQgc2V0dGluZyBhIHN0eWxlIHByb3BlcnR5Cgljc3NIb29rczogewoJCW9wYWNpdHk6IHsKCQkJZ2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7CgkJCQlpZiAoIGNvbXB1dGVkICkgewoJCQkJCS8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJhY2sgZnJvbSBvcGFjaXR5CgkJCQkJdmFyIHJldCA9IGN1ckNTUyggZWxlbSwgIm9wYWNpdHkiICk7CgkJCQkJcmV0dXJuIHJldCA9PT0gIiIgPyAiMSIgOiByZXQ7CgoJCQkJfSBlbHNlIHsKCQkJCQlyZXR1cm4gZWxlbS5zdHlsZS5vcGFjaXR5OwoJCQkJfQoJCQl9CgkJfQoJfSwKCgkvLyBFeGNsdWRlIHRoZSBmb2xsb3dpbmcgY3NzIHByb3BlcnRpZXMgdG8gYWRkIHB4Cgljc3NOdW1iZXI6IHsKCQkiZmlsbE9wYWNpdHkiOiB0cnVlLAoJCSJmb250V2VpZ2h0IjogdHJ1ZSwKCQkibGluZUhlaWdodCI6IHRydWUsCgkJIm9wYWNpdHkiOiB0cnVlLAoJCSJvcnBoYW5zIjogdHJ1ZSwKCQkid2lkb3dzIjogdHJ1ZSwKCQkiekluZGV4IjogdHJ1ZSwKCQkiem9vbSI6IHRydWUKCX0sCgoJLy8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZQoJLy8gc2V0dGluZyBvciBnZXR0aW5nIHRoZSB2YWx1ZQoJY3NzUHJvcHM6IHsKCQkvLyBub3JtYWxpemUgZmxvYXQgY3NzIHByb3BlcnR5CgkJImZsb2F0IjogalF1ZXJ5LnN1cHBvcnQuY3NzRmxvYXQgPyAiY3NzRmxvYXQiIDogInN0eWxlRmxvYXQiCgl9LAoKCS8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlCglzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHsKCQkvLyBEb24ndCBzZXQgc3R5bGVzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXMKCQlpZiAoICFlbGVtIHx8IGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCB8fCAhZWxlbS5zdHlsZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lCgkJdmFyIHJldCwgdHlwZSwgb3JpZ05hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICksCgkJCXN0eWxlID0gZWxlbS5zdHlsZSwgaG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07CgoJCW5hbWUgPSBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gfHwgb3JpZ05hbWU7CgoJCS8vIENoZWNrIGlmIHdlJ3JlIHNldHRpbmcgYSB2YWx1ZQoJCWlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQkJdHlwZSA9IHR5cGVvZiB2YWx1ZTsKCgkJCS8vIGNvbnZlcnQgcmVsYXRpdmUgbnVtYmVyIHN0cmluZ3MgKCs9IG9yIC09KSB0byByZWxhdGl2ZSBudW1iZXJzLiAjNzM0NQoJCQlpZiAoIHR5cGUgPT09ICJzdHJpbmciICYmIChyZXQgPSBycmVsTnVtLmV4ZWMoIHZhbHVlICkpICkgewoJCQkJdmFsdWUgPSAoICsoIHJldFsxXSArIDEpICogK3JldFsyXSApICsgcGFyc2VGbG9hdCggalF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApICk7CgkJCQkvLyBGaXhlcyBidWcgIzkyMzcKCQkJCXR5cGUgPSAibnVtYmVyIjsKCQkJfQoKCQkJLy8gTWFrZSBzdXJlIHRoYXQgTmFOIGFuZCBudWxsIHZhbHVlcyBhcmVuJ3Qgc2V0LiBTZWU6ICM3MTE2CgkJCWlmICggdmFsdWUgPT0gbnVsbCB8fCB0eXBlID09PSAibnVtYmVyIiAmJiBpc05hTiggdmFsdWUgKSApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJLy8gSWYgYSBudW1iZXIgd2FzIHBhc3NlZCBpbiwgYWRkICdweCcgdG8gdGhlIChleGNlcHQgZm9yIGNlcnRhaW4gQ1NTIHByb3BlcnRpZXMpCgkJCWlmICggdHlwZSA9PT0gIm51bWJlciIgJiYgIWpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gKSB7CgkJCQl2YWx1ZSArPSAicHgiOwoJCQl9CgoJCQkvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWUKCQkJaWYgKCAhaG9va3MgfHwgISgic2V0IiBpbiBob29rcykgfHwgKHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSApKSAhPT0gdW5kZWZpbmVkICkgewoJCQkJLy8gV3JhcHBlZCB0byBwcmV2ZW50IElFIGZyb20gdGhyb3dpbmcgZXJyb3JzIHdoZW4gJ2ludmFsaWQnIHZhbHVlcyBhcmUgcHJvdmlkZWQKCQkJCS8vIEZpeGVzIGJ1ZyAjNTUwOQoJCQkJdHJ5IHsKCQkJCQlzdHlsZVsgbmFtZSBdID0gdmFsdWU7CgkJCQl9IGNhdGNoKGUpIHt9CgkJCX0KCgkJfSBlbHNlIHsKCQkJLy8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlCgkJCWlmICggaG9va3MgJiYgImdldCIgaW4gaG9va3MgJiYgKHJldCA9IGhvb2tzLmdldCggZWxlbSwgZmFsc2UsIGV4dHJhICkpICE9PSB1bmRlZmluZWQgKSB7CgkJCQlyZXR1cm4gcmV0OwoJCQl9CgoJCQkvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdAoJCQlyZXR1cm4gc3R5bGVbIG5hbWUgXTsKCQl9Cgl9LAoKCWNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhICkgewoJCXZhciByZXQsIGhvb2tzOwoKCQkvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUKCQluYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApOwoJCWhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF07CgkJbmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IG5hbWU7CgoJCS8vIGNzc0Zsb2F0IG5lZWRzIGEgc3BlY2lhbCB0cmVhdG1lbnQKCQlpZiAoIG5hbWUgPT09ICJjc3NGbG9hdCIgKSB7CgkJCW5hbWUgPSAiZmxvYXQiOwoJCX0KCgkJLy8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmUKCQlpZiAoIGhvb2tzICYmICJnZXQiIGluIGhvb2tzICYmIChyZXQgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICkpICE9PSB1bmRlZmluZWQgKSB7CgkJCXJldHVybiByZXQ7CgoJCS8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8gZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0CgkJfSBlbHNlIGlmICggY3VyQ1NTICkgewoJCQlyZXR1cm4gY3VyQ1NTKCBlbGVtLCBuYW1lICk7CgkJfQoJfSwKCgkvLyBBIG1ldGhvZCBmb3IgcXVpY2tseSBzd2FwcGluZyBpbi9vdXQgQ1NTIHByb3BlcnRpZXMgdG8gZ2V0IGNvcnJlY3QgY2FsY3VsYXRpb25zCglzd2FwOiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2sgKSB7CgkJdmFyIG9sZCA9IHt9LAoJCQlyZXQsIG5hbWU7CgoJCS8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lcwoJCWZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHsKCQkJb2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07CgkJCWVsZW0uc3R5bGVbIG5hbWUgXSA9IG9wdGlvbnNbIG5hbWUgXTsKCQl9CgoJCXJldCA9IGNhbGxiYWNrLmNhbGwoIGVsZW0gKTsKCgkJLy8gUmV2ZXJ0IHRoZSBvbGQgdmFsdWVzCgkJZm9yICggbmFtZSBpbiBvcHRpb25zICkgewoJCQllbGVtLnN0eWxlWyBuYW1lIF0gPSBvbGRbIG5hbWUgXTsKCQl9CgoJCXJldHVybiByZXQ7Cgl9Cn0pOwoKLy8gREVQUkVDQVRFRCBpbiAxLjMsIFVzZSBqUXVlcnkuY3NzKCkgaW5zdGVhZApqUXVlcnkuY3VyQ1NTID0galF1ZXJ5LmNzczsKCmlmICggZG9jdW1lbnQuZGVmYXVsdFZpZXcgJiYgZG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSApIHsKCWdldENvbXB1dGVkU3R5bGUgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHsKCQl2YXIgcmV0LCBkZWZhdWx0VmlldywgY29tcHV0ZWRTdHlsZSwgd2lkdGgsCgkJCXN0eWxlID0gZWxlbS5zdHlsZTsKCgkJbmFtZSA9IG5hbWUucmVwbGFjZSggcnVwcGVyLCAiLSQxIiApLnRvTG93ZXJDYXNlKCk7CgoJCWlmICggKGRlZmF1bHRWaWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSAmJgoJCQkJKGNvbXB1dGVkU3R5bGUgPSBkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtLCBudWxsICkpICkgewoKCQkJcmV0ID0gY29tcHV0ZWRTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICk7CgkJCWlmICggcmV0ID09PSAiIiAmJiAhalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBlbGVtICkgKSB7CgkJCQlyZXQgPSBqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUgKTsKCQkJfQoJCX0KCgkJLy8gQSB0cmlidXRlIHRvIHRoZSAiYXdlc29tZSBoYWNrIGJ5IERlYW4gRWR3YXJkcyIKCQkvLyBXZWJLaXQgdXNlcyAiY29tcHV0ZWQgdmFsdWUgKHBlcmNlbnRhZ2UgaWYgc3BlY2lmaWVkKSIgaW5zdGVhZCBvZiAidXNlZCB2YWx1ZSIgZm9yIG1hcmdpbnMKCQkvLyB3aGljaCBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOiBodHRwOi8vZGV2LnczLm9yZy9jc3N3Zy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzCgkJaWYgKCAhalF1ZXJ5LnN1cHBvcnQucGl4ZWxNYXJnaW4gJiYgY29tcHV0ZWRTdHlsZSAmJiBybWFyZ2luLnRlc3QoIG5hbWUgKSAmJiBybnVtbm9ucHgudGVzdCggcmV0ICkgKSB7CgkJCXdpZHRoID0gc3R5bGUud2lkdGg7CgkJCXN0eWxlLndpZHRoID0gcmV0OwoJCQlyZXQgPSBjb21wdXRlZFN0eWxlLndpZHRoOwoJCQlzdHlsZS53aWR0aCA9IHdpZHRoOwoJCX0KCgkJcmV0dXJuIHJldDsKCX07Cn0KCmlmICggZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmN1cnJlbnRTdHlsZSApIHsKCWN1cnJlbnRTdHlsZSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkgewoJCXZhciBsZWZ0LCByc0xlZnQsIHVuY29tcHV0ZWQsCgkJCXJldCA9IGVsZW0uY3VycmVudFN0eWxlICYmIGVsZW0uY3VycmVudFN0eWxlWyBuYW1lIF0sCgkJCXN0eWxlID0gZWxlbS5zdHlsZTsKCgkJLy8gQXZvaWQgc2V0dGluZyByZXQgdG8gZW1wdHkgc3RyaW5nIGhlcmUKCQkvLyBzbyB3ZSBkb24ndCBkZWZhdWx0IHRvIGF1dG8KCQlpZiAoIHJldCA9PSBudWxsICYmIHN0eWxlICYmICh1bmNvbXB1dGVkID0gc3R5bGVbIG5hbWUgXSkgKSB7CgkJCXJldCA9IHVuY29tcHV0ZWQ7CgkJfQoKCQkvLyBGcm9tIHRoZSBhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzCgkJLy8gaHR0cDovL2VyaWsuZWFlLm5ldC9hcmNoaXZlcy8yMDA3LzA3LzI3LzE4LjU0LjE1LyNjb21tZW50LTEwMjI5MQoKCQkvLyBJZiB3ZSdyZSBub3QgZGVhbGluZyB3aXRoIGEgcmVndWxhciBwaXhlbCBudW1iZXIKCQkvLyBidXQgYSBudW1iZXIgdGhhdCBoYXMgYSB3ZWlyZCBlbmRpbmcsIHdlIG5lZWQgdG8gY29udmVydCBpdCB0byBwaXhlbHMKCQlpZiAoIHJudW1ub25weC50ZXN0KCByZXQgKSApIHsKCgkJCS8vIFJlbWVtYmVyIHRoZSBvcmlnaW5hbCB2YWx1ZXMKCQkJbGVmdCA9IHN0eWxlLmxlZnQ7CgkJCXJzTGVmdCA9IGVsZW0ucnVudGltZVN0eWxlICYmIGVsZW0ucnVudGltZVN0eWxlLmxlZnQ7CgoJCQkvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0CgkJCWlmICggcnNMZWZ0ICkgewoJCQkJZWxlbS5ydW50aW1lU3R5bGUubGVmdCA9IGVsZW0uY3VycmVudFN0eWxlLmxlZnQ7CgkJCX0KCQkJc3R5bGUubGVmdCA9IG5hbWUgPT09ICJmb250U2l6ZSIgPyAiMWVtIiA6IHJldDsKCQkJcmV0ID0gc3R5bGUucGl4ZWxMZWZ0ICsgInB4IjsKCgkJCS8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1ZXMKCQkJc3R5bGUubGVmdCA9IGxlZnQ7CgkJCWlmICggcnNMZWZ0ICkgewoJCQkJZWxlbS5ydW50aW1lU3R5bGUubGVmdCA9IHJzTGVmdDsKCQkJfQoJCX0KCgkJcmV0dXJuIHJldCA9PT0gIiIgPyAiYXV0byIgOiByZXQ7Cgl9Owp9CgpjdXJDU1MgPSBnZXRDb21wdXRlZFN0eWxlIHx8IGN1cnJlbnRTdHlsZTsKCmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICkgewoKCS8vIFN0YXJ0IHdpdGggb2Zmc2V0IHByb3BlcnR5Cgl2YXIgdmFsID0gbmFtZSA9PT0gIndpZHRoIiA/IGVsZW0ub2Zmc2V0V2lkdGggOiBlbGVtLm9mZnNldEhlaWdodCwKCQlpID0gbmFtZSA9PT0gIndpZHRoIiA/IDEgOiAwLAoJCWxlbiA9IDQ7CgoJaWYgKCB2YWwgPiAwICkgewoJCWlmICggZXh0cmEgIT09ICJib3JkZXIiICkgewoJCQlmb3IgKCA7IGkgPCBsZW47IGkgKz0gMiApIHsKCQkJCWlmICggIWV4dHJhICkgewoJCQkJCXZhbCAtPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKCBlbGVtLCAicGFkZGluZyIgKyBjc3NFeHBhbmRbIGkgXSApICkgfHwgMDsKCQkJCX0KCQkJCWlmICggZXh0cmEgPT09ICJtYXJnaW4iICkgewoJCQkJCXZhbCArPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKCBlbGVtLCBleHRyYSArIGNzc0V4cGFuZFsgaSBdICkgKSB8fCAwOwoJCQkJfSBlbHNlIHsKCQkJCQl2YWwgLT0gcGFyc2VGbG9hdCggalF1ZXJ5LmNzcyggZWxlbSwgImJvcmRlciIgKyBjc3NFeHBhbmRbIGkgXSArICJXaWR0aCIgKSApIHx8IDA7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiB2YWwgKyAicHgiOwoJfQoKCS8vIEZhbGwgYmFjayB0byBjb21wdXRlZCB0aGVuIHVuY29tcHV0ZWQgY3NzIGlmIG5lY2Vzc2FyeQoJdmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lICk7CglpZiAoIHZhbCA8IDAgfHwgdmFsID09IG51bGwgKSB7CgkJdmFsID0gZWxlbS5zdHlsZVsgbmFtZSBdOwoJfQoKCS8vIENvbXB1dGVkIHVuaXQgaXMgbm90IHBpeGVscy4gU3RvcCBoZXJlIGFuZCByZXR1cm4uCglpZiAoIHJudW1ub25weC50ZXN0KHZhbCkgKSB7CgkJcmV0dXJuIHZhbDsKCX0KCgkvLyBOb3JtYWxpemUgIiIsIGF1dG8sIGFuZCBwcmVwYXJlIGZvciBleHRyYQoJdmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDsKCgkvLyBBZGQgcGFkZGluZywgYm9yZGVyLCBtYXJnaW4KCWlmICggZXh0cmEgKSB7CgkJZm9yICggOyBpIDwgbGVuOyBpICs9IDIgKSB7CgkJCXZhbCArPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKCBlbGVtLCAicGFkZGluZyIgKyBjc3NFeHBhbmRbIGkgXSApICkgfHwgMDsKCQkJaWYgKCBleHRyYSAhPT0gInBhZGRpbmciICkgewoJCQkJdmFsICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoIGVsZW0sICJib3JkZXIiICsgY3NzRXhwYW5kWyBpIF0gKyAiV2lkdGgiICkgKSB8fCAwOwoJCQl9CgkJCWlmICggZXh0cmEgPT09ICJtYXJnaW4iICkgewoJCQkJdmFsICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoIGVsZW0sIGV4dHJhICsgY3NzRXhwYW5kWyBpIF0pICkgfHwgMDsKCQkJfQoJCX0KCX0KCglyZXR1cm4gdmFsICsgInB4IjsKfQoKalF1ZXJ5LmVhY2goWyAiaGVpZ2h0IiwgIndpZHRoIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHsKCWpRdWVyeS5jc3NIb29rc1sgbmFtZSBdID0gewoJCWdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkLCBleHRyYSApIHsKCQkJaWYgKCBjb21wdXRlZCApIHsKCQkJCWlmICggZWxlbS5vZmZzZXRXaWR0aCAhPT0gMCApIHsKCQkJCQlyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEgKTsKCQkJCX0gZWxzZSB7CgkJCQkJcmV0dXJuIGpRdWVyeS5zd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHsKCQkJCQkJcmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICk7CgkJCQkJfSk7CgkJCQl9CgkJCX0KCQl9LAoKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJcmV0dXJuIHJudW0udGVzdCggdmFsdWUgKSA/CgkJCQl2YWx1ZSArICJweCIgOgoJCQkJdmFsdWU7CgkJfQoJfTsKfSk7CgppZiAoICFqUXVlcnkuc3VwcG9ydC5vcGFjaXR5ICkgewoJalF1ZXJ5LmNzc0hvb2tzLm9wYWNpdHkgPSB7CgkJZ2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7CgkJCS8vIElFIHVzZXMgZmlsdGVycyBmb3Igb3BhY2l0eQoJCQlyZXR1cm4gcm9wYWNpdHkudGVzdCggKGNvbXB1dGVkICYmIGVsZW0uY3VycmVudFN0eWxlID8gZWxlbS5jdXJyZW50U3R5bGUuZmlsdGVyIDogZWxlbS5zdHlsZS5maWx0ZXIpIHx8ICIiICkgPwoJCQkJKCBwYXJzZUZsb2F0KCBSZWdFeHAuJDEgKSAvIDEwMCApICsgIiIgOgoJCQkJY29tcHV0ZWQgPyAiMSIgOiAiIjsKCQl9LAoKCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJdmFyIHN0eWxlID0gZWxlbS5zdHlsZSwKCQkJCWN1cnJlbnRTdHlsZSA9IGVsZW0uY3VycmVudFN0eWxlLAoJCQkJb3BhY2l0eSA9IGpRdWVyeS5pc051bWVyaWMoIHZhbHVlICkgPyAiYWxwaGEob3BhY2l0eT0iICsgdmFsdWUgKiAxMDAgKyAiKSIgOiAiIiwKCQkJCWZpbHRlciA9IGN1cnJlbnRTdHlsZSAmJiBjdXJyZW50U3R5bGUuZmlsdGVyIHx8IHN0eWxlLmZpbHRlciB8fCAiIjsKCgkJCS8vIElFIGhhcyB0cm91YmxlIHdpdGggb3BhY2l0eSBpZiBpdCBkb2VzIG5vdCBoYXZlIGxheW91dAoJCQkvLyBGb3JjZSBpdCBieSBzZXR0aW5nIHRoZSB6b29tIGxldmVsCgkJCXN0eWxlLnpvb20gPSAxOwoKCQkJLy8gaWYgc2V0dGluZyBvcGFjaXR5IHRvIDEsIGFuZCBubyBvdGhlciBmaWx0ZXJzIGV4aXN0IC0gYXR0ZW1wdCB0byByZW1vdmUgZmlsdGVyIGF0dHJpYnV0ZSAjNjY1MgoJCQlpZiAoIHZhbHVlID49IDEgJiYgalF1ZXJ5LnRyaW0oIGZpbHRlci5yZXBsYWNlKCByYWxwaGEsICIiICkgKSA9PT0gIiIgKSB7CgoJCQkJLy8gU2V0dGluZyBzdHlsZS5maWx0ZXIgdG8gbnVsbCwgIiIgJiAiICIgc3RpbGwgbGVhdmUgImZpbHRlcjoiIGluIHRoZSBjc3NUZXh0CgkJCQkvLyBpZiAiZmlsdGVyOiIgaXMgcHJlc2VudCBhdCBhbGwsIGNsZWFyVHlwZSBpcyBkaXNhYmxlZCwgd2Ugd2FudCB0byBhdm9pZCB0aGlzCgkJCQkvLyBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUgaXMgSUUgT25seSwgYnV0IHNvIGFwcGFyZW50bHkgaXMgdGhpcyBjb2RlIHBhdGguLi4KCQkJCXN0eWxlLnJlbW92ZUF0dHJpYnV0ZSggImZpbHRlciIgKTsKCgkJCQkvLyBpZiB0aGVyZSB0aGVyZSBpcyBubyBmaWx0ZXIgc3R5bGUgYXBwbGllZCBpbiBhIGNzcyBydWxlLCB3ZSBhcmUgZG9uZQoJCQkJaWYgKCBjdXJyZW50U3R5bGUgJiYgIWN1cnJlbnRTdHlsZS5maWx0ZXIgKSB7CgkJCQkJcmV0dXJuOwoJCQkJfQoJCQl9CgoJCQkvLyBvdGhlcndpc2UsIHNldCBuZXcgZmlsdGVyIHZhbHVlcwoJCQlzdHlsZS5maWx0ZXIgPSByYWxwaGEudGVzdCggZmlsdGVyICkgPwoJCQkJZmlsdGVyLnJlcGxhY2UoIHJhbHBoYSwgb3BhY2l0eSApIDoKCQkJCWZpbHRlciArICIgIiArIG9wYWNpdHk7CgkJfQoJfTsKfQoKalF1ZXJ5KGZ1bmN0aW9uKCkgewoJLy8gVGhpcyBob29rIGNhbm5vdCBiZSBhZGRlZCB1bnRpbCBET00gcmVhZHkgYmVjYXVzZSB0aGUgc3VwcG9ydCB0ZXN0CgkvLyBmb3IgaXQgaXMgbm90IHJ1biB1bnRpbCBhZnRlciBET00gcmVhZHkKCWlmICggIWpRdWVyeS5zdXBwb3J0LnJlbGlhYmxlTWFyZ2luUmlnaHQgKSB7CgkJalF1ZXJ5LmNzc0hvb2tzLm1hcmdpblJpZ2h0ID0gewoJCQlnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHsKCQkJCS8vIFdlYktpdCBCdWcgMTMzNDMgLSBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgd3JvbmcgdmFsdWUgZm9yIG1hcmdpbi1yaWdodAoJCQkJLy8gV29yayBhcm91bmQgYnkgdGVtcG9yYXJpbHkgc2V0dGluZyBlbGVtZW50IGRpc3BsYXkgdG8gaW5saW5lLWJsb2NrCgkJCQlyZXR1cm4galF1ZXJ5LnN3YXAoIGVsZW0sIHsgImRpc3BsYXkiOiAiaW5saW5lLWJsb2NrIiB9LCBmdW5jdGlvbigpIHsKCQkJCQlpZiAoIGNvbXB1dGVkICkgewoJCQkJCQlyZXR1cm4gY3VyQ1NTKCBlbGVtLCAibWFyZ2luLXJpZ2h0IiApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXJldHVybiBlbGVtLnN0eWxlLm1hcmdpblJpZ2h0OwoJCQkJCX0KCQkJCX0pOwoJCQl9CgkJfTsKCX0KfSk7CgppZiAoIGpRdWVyeS5leHByICYmIGpRdWVyeS5leHByLmZpbHRlcnMgKSB7CglqUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCXZhciB3aWR0aCA9IGVsZW0ub2Zmc2V0V2lkdGgsCgkJCWhlaWdodCA9IGVsZW0ub2Zmc2V0SGVpZ2h0OwoKCQlyZXR1cm4gKCB3aWR0aCA9PT0gMCAmJiBoZWlnaHQgPT09IDAgKSB8fCAoIWpRdWVyeS5zdXBwb3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cyAmJiAoKGVsZW0uc3R5bGUgJiYgZWxlbS5zdHlsZS5kaXNwbGF5KSB8fCBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIgKSkgPT09ICJub25lIik7Cgl9OwoKCWpRdWVyeS5leHByLmZpbHRlcnMudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkgewoJCXJldHVybiAhalF1ZXJ5LmV4cHIuZmlsdGVycy5oaWRkZW4oIGVsZW0gKTsKCX07Cn0KCi8vIFRoZXNlIGhvb2tzIGFyZSB1c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXMKalF1ZXJ5LmVhY2goewoJbWFyZ2luOiAiIiwKCXBhZGRpbmc6ICIiLAoJYm9yZGVyOiAiV2lkdGgiCn0sIGZ1bmN0aW9uKCBwcmVmaXgsIHN1ZmZpeCApIHsKCglqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdID0gewoJCWV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkgewoJCQl2YXIgaSwKCgkJCQkvLyBhc3N1bWVzIGEgc2luZ2xlIG51bWJlciBpZiBub3QgYSBzdHJpbmcKCQkJCXBhcnRzID0gdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiA/IHZhbHVlLnNwbGl0KCIgIikgOiBbIHZhbHVlIF0sCgkJCQlleHBhbmRlZCA9IHt9OwoKCQkJZm9yICggaSA9IDA7IGkgPCA0OyBpKysgKSB7CgkJCQlleHBhbmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9CgkJCQkJcGFydHNbIGkgXSB8fCBwYXJ0c1sgaSAtIDIgXSB8fCBwYXJ0c1sgMCBdOwoJCQl9CgoJCQlyZXR1cm4gZXhwYW5kZWQ7CgkJfQoJfTsKfSk7CgoKCgp2YXIgcjIwID0gLyUyMC9nLAoJcmJyYWNrZXQgPSAvXFtcXSQvLAoJckNSTEYgPSAvXHI/XG4vZywKCXJoYXNoID0gLyMuKiQvLAoJcmhlYWRlcnMgPSAvXiguKj8pOlsgXHRdKihbXlxyXG5dKilccj8kL21nLCAvLyBJRSBsZWF2ZXMgYW4gXHIgY2hhcmFjdGVyIGF0IEVPTAoJcmlucHV0ID0gL14oPzpjb2xvcnxkYXRlfGRhdGV0aW1lfGRhdGV0aW1lLWxvY2FsfGVtYWlsfGhpZGRlbnxtb250aHxudW1iZXJ8cGFzc3dvcmR8cmFuZ2V8c2VhcmNofHRlbHx0ZXh0fHRpbWV8dXJsfHdlZWspJC9pLAoJLy8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uCglybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcFwtc3RvcmFnZXwuK1wtZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sCglybm9Db250ZW50ID0gL14oPzpHRVR8SEVBRCkkLywKCXJwcm90b2NvbCA9IC9eXC9cLy8sCglycXVlcnkgPSAvXD8vLAoJcnNjcmlwdCA9IC88c2NyaXB0XGJbXjxdKig/Oig/ITxcL3NjcmlwdD4pPFtePF0qKSo8XC9zY3JpcHQ+L2dpLAoJcnNlbGVjdFRleHRhcmVhID0gL14oPzpzZWxlY3R8dGV4dGFyZWEpL2ksCglyc3BhY2VzQWpheCA9IC9ccysvLAoJcnRzID0gLyhbPyZdKV89W14mXSovLAoJcnVybCA9IC9eKFtcd1wrXC5cLV0rOikoPzpcL1wvKFteXC8/IzpdKikoPzo6KFxkKykpPyk/LywKCgkvLyBLZWVwIGEgY29weSBvZiB0aGUgb2xkIGxvYWQgbWV0aG9kCglfbG9hZCA9IGpRdWVyeS5mbi5sb2FkLAoKCS8qIFByZWZpbHRlcnMKCSAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFUeXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpCgkgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOgoJICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRyYW5zcG9ydAoJICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRhdGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKQoJICogMykga2V5IGlzIHRoZSBkYXRhVHlwZQoJICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCAiKiIgY2FuIGJlIHVzZWQKCSAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gIioiIGlmIG5lZWRlZAoJICovCglwcmVmaWx0ZXJzID0ge30sCgoJLyogVHJhbnNwb3J0cyBiaW5kaW5ncwoJICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZQoJICogMikgdGhlIGNhdGNoYWxsIHN5bWJvbCAiKiIgY2FuIGJlIHVzZWQKCSAqIDMpIHNlbGVjdGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGdvIHRvICIqIiBpZiBuZWVkZWQKCSAqLwoJdHJhbnNwb3J0cyA9IHt9LAoKCS8vIERvY3VtZW50IGxvY2F0aW9uCglhamF4TG9jYXRpb24sCgoJLy8gRG9jdW1lbnQgbG9jYXRpb24gc2VnbWVudHMKCWFqYXhMb2NQYXJ0cywKCgkvLyBBdm9pZCBjb21tZW50LXByb2xvZyBjaGFyIHNlcXVlbmNlICgjMTAwOTgpOyBtdXN0IGFwcGVhc2UgbGludCBhbmQgZXZhZGUgY29tcHJlc3Npb24KCWFsbFR5cGVzID0gWyIqLyJdICsgWyIqIl07CgovLyAjODEzOCwgSUUgbWF5IHRocm93IGFuIGV4Y2VwdGlvbiB3aGVuIGFjY2Vzc2luZwovLyBhIGZpZWxkIGZyb20gd2luZG93LmxvY2F0aW9uIGlmIGRvY3VtZW50LmRvbWFpbiBoYXMgYmVlbiBzZXQKdHJ5IHsKCWFqYXhMb2NhdGlvbiA9IGxvY2F0aW9uLmhyZWY7Cn0gY2F0Y2goIGUgKSB7CgkvLyBVc2UgdGhlIGhyZWYgYXR0cmlidXRlIG9mIGFuIEEgZWxlbWVudAoJLy8gc2luY2UgSUUgd2lsbCBtb2RpZnkgaXQgZ2l2ZW4gZG9jdW1lbnQubG9jYXRpb24KCWFqYXhMb2NhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJhIiApOwoJYWpheExvY2F0aW9uLmhyZWYgPSAiIjsKCWFqYXhMb2NhdGlvbiA9IGFqYXhMb2NhdGlvbi5ocmVmOwp9CgovLyBTZWdtZW50IGxvY2F0aW9uIGludG8gcGFydHMKYWpheExvY1BhcnRzID0gcnVybC5leGVjKCBhamF4TG9jYXRpb24udG9Mb3dlckNhc2UoKSApIHx8IFtdOwoKLy8gQmFzZSAiY29uc3RydWN0b3IiIGZvciBqUXVlcnkuYWpheFByZWZpbHRlciBhbmQgalF1ZXJ5LmFqYXhUcmFuc3BvcnQKZnVuY3Rpb24gYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUgKSB7CgoJLy8gZGF0YVR5cGVFeHByZXNzaW9uIGlzIG9wdGlvbmFsIGFuZCBkZWZhdWx0cyB0byAiKiIKCXJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkgewoKCQlpZiAoIHR5cGVvZiBkYXRhVHlwZUV4cHJlc3Npb24gIT09ICJzdHJpbmciICkgewoJCQlmdW5jID0gZGF0YVR5cGVFeHByZXNzaW9uOwoJCQlkYXRhVHlwZUV4cHJlc3Npb24gPSAiKiI7CgkJfQoKCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBmdW5jICkgKSB7CgkJCXZhciBkYXRhVHlwZXMgPSBkYXRhVHlwZUV4cHJlc3Npb24udG9Mb3dlckNhc2UoKS5zcGxpdCggcnNwYWNlc0FqYXggKSwKCQkJCWkgPSAwLAoJCQkJbGVuZ3RoID0gZGF0YVR5cGVzLmxlbmd0aCwKCQkJCWRhdGFUeXBlLAoJCQkJbGlzdCwKCQkJCXBsYWNlQmVmb3JlOwoKCQkJLy8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvbgoJCQlmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHsKCQkJCWRhdGFUeXBlID0gZGF0YVR5cGVzWyBpIF07CgkJCQkvLyBXZSBjb250cm9sIGlmIHdlJ3JlIGFza2VkIHRvIGFkZCBiZWZvcmUKCQkJCS8vIGFueSBleGlzdGluZyBlbGVtZW50CgkJCQlwbGFjZUJlZm9yZSA9IC9eXCsvLnRlc3QoIGRhdGFUeXBlICk7CgkJCQlpZiAoIHBsYWNlQmVmb3JlICkgewoJCQkJCWRhdGFUeXBlID0gZGF0YVR5cGUuc3Vic3RyKCAxICkgfHwgIioiOwoJCQkJfQoJCQkJbGlzdCA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXTsKCQkJCS8vIHRoZW4gd2UgYWRkIHRvIHRoZSBzdHJ1Y3R1cmUgYWNjb3JkaW5nbHkKCQkJCWxpc3RbIHBsYWNlQmVmb3JlID8gInVuc2hpZnQiIDogInB1c2giIF0oIGZ1bmMgKTsKCQkJfQoJCX0KCX07Cn0KCi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVycyBhbmQgdHJhbnNwb3J0cwpmdW5jdGlvbiBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSLAoJCWRhdGFUeXBlIC8qIGludGVybmFsICovLCBpbnNwZWN0ZWQgLyogaW50ZXJuYWwgKi8gKSB7CgoJZGF0YVR5cGUgPSBkYXRhVHlwZSB8fCBvcHRpb25zLmRhdGFUeXBlc1sgMCBdOwoJaW5zcGVjdGVkID0gaW5zcGVjdGVkIHx8IHt9OwoKCWluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7CgoJdmFyIGxpc3QgPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0sCgkJaSA9IDAsCgkJbGVuZ3RoID0gbGlzdCA/IGxpc3QubGVuZ3RoIDogMCwKCQlleGVjdXRlT25seSA9ICggc3RydWN0dXJlID09PSBwcmVmaWx0ZXJzICksCgkJc2VsZWN0aW9uOwoKCWZvciAoIDsgaSA8IGxlbmd0aCAmJiAoIGV4ZWN1dGVPbmx5IHx8ICFzZWxlY3Rpb24gKTsgaSsrICkgewoJCXNlbGVjdGlvbiA9IGxpc3RbIGkgXSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApOwoJCS8vIElmIHdlIGdvdCByZWRpcmVjdGVkIHRvIGFub3RoZXIgZGF0YVR5cGUKCQkvLyB3ZSB0cnkgdGhlcmUgaWYgZXhlY3V0aW5nIG9ubHkgYW5kIG5vdCBkb25lIGFscmVhZHkKCQlpZiAoIHR5cGVvZiBzZWxlY3Rpb24gPT09ICJzdHJpbmciICkgewoJCQlpZiAoICFleGVjdXRlT25seSB8fCBpbnNwZWN0ZWRbIHNlbGVjdGlvbiBdICkgewoJCQkJc2VsZWN0aW9uID0gdW5kZWZpbmVkOwoJCQl9IGVsc2UgewoJCQkJb3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggc2VsZWN0aW9uICk7CgkJCQlzZWxlY3Rpb24gPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cygKCQkJCQkJc3RydWN0dXJlLCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSLCBzZWxlY3Rpb24sIGluc3BlY3RlZCApOwoJCQl9CgkJfQoJfQoJLy8gSWYgd2UncmUgb25seSBleGVjdXRpbmcgb3Igbm90aGluZyB3YXMgc2VsZWN0ZWQKCS8vIHdlIHRyeSB0aGUgY2F0Y2hhbGwgZGF0YVR5cGUgaWYgbm90IGRvbmUgYWxyZWFkeQoJaWYgKCAoIGV4ZWN1dGVPbmx5IHx8ICFzZWxlY3Rpb24gKSAmJiAhaW5zcGVjdGVkWyAiKiIgXSApIHsKCQlzZWxlY3Rpb24gPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cygKCQkJCXN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiwgIioiLCBpbnNwZWN0ZWQgKTsKCX0KCS8vIHVubmVjZXNzYXJ5IHdoZW4gb25seSBleGVjdXRpbmcgKHByZWZpbHRlcnMpCgkvLyBidXQgaXQnbGwgYmUgaWdub3JlZCBieSB0aGUgY2FsbGVyIGluIHRoYXQgY2FzZQoJcmV0dXJuIHNlbGVjdGlvbjsKfQoKLy8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zCi8vIHRoYXQgdGFrZXMgImZsYXQiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKQovLyBGaXhlcyAjOTg4NwpmdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHsKCXZhciBrZXksIGRlZXAsCgkJZmxhdE9wdGlvbnMgPSBqUXVlcnkuYWpheFNldHRpbmdzLmZsYXRPcHRpb25zIHx8IHt9OwoJZm9yICgga2V5IGluIHNyYyApIHsKCQlpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHsKCQkJKCBmbGF0T3B0aW9uc1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKCBkZWVwID0ge30gKSApIClbIGtleSBdID0gc3JjWyBrZXkgXTsKCQl9Cgl9CglpZiAoIGRlZXAgKSB7CgkJalF1ZXJ5LmV4dGVuZCggdHJ1ZSwgdGFyZ2V0LCBkZWVwICk7Cgl9Cn0KCmpRdWVyeS5mbi5leHRlbmQoewoJbG9hZDogZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHsKCQlpZiAoIHR5cGVvZiB1cmwgIT09ICJzdHJpbmciICYmIF9sb2FkICkgewoJCQlyZXR1cm4gX2xvYWQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoKCQkvLyBEb24ndCBkbyBhIHJlcXVlc3QgaWYgbm8gZWxlbWVudHMgYXJlIGJlaW5nIHJlcXVlc3RlZAoJCX0gZWxzZSBpZiAoICF0aGlzLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRoaXM7CgkJfQoKCQl2YXIgb2ZmID0gdXJsLmluZGV4T2YoICIgIiApOwoJCWlmICggb2ZmID49IDAgKSB7CgkJCXZhciBzZWxlY3RvciA9IHVybC5zbGljZSggb2ZmLCB1cmwubGVuZ3RoICk7CgkJCXVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7CgkJfQoKCQkvLyBEZWZhdWx0IHRvIGEgR0VUIHJlcXVlc3QKCQl2YXIgdHlwZSA9ICJHRVQiOwoKCQkvLyBJZiB0aGUgc2Vjb25kIHBhcmFtZXRlciB3YXMgcHJvdmlkZWQKCQlpZiAoIHBhcmFtcyApIHsKCQkJLy8gSWYgaXQncyBhIGZ1bmN0aW9uCgkJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHBhcmFtcyApICkgewoJCQkJLy8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2sKCQkJCWNhbGxiYWNrID0gcGFyYW1zOwoJCQkJcGFyYW1zID0gdW5kZWZpbmVkOwoKCQkJLy8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZwoJCQl9IGVsc2UgaWYgKCB0eXBlb2YgcGFyYW1zID09PSAib2JqZWN0IiApIHsKCQkJCXBhcmFtcyA9IGpRdWVyeS5wYXJhbSggcGFyYW1zLCBqUXVlcnkuYWpheFNldHRpbmdzLnRyYWRpdGlvbmFsICk7CgkJCQl0eXBlID0gIlBPU1QiOwoJCQl9CgkJfQoKCQl2YXIgc2VsZiA9IHRoaXM7CgoJCS8vIFJlcXVlc3QgdGhlIHJlbW90ZSBkb2N1bWVudAoJCWpRdWVyeS5hamF4KHsKCQkJdXJsOiB1cmwsCgkJCXR5cGU6IHR5cGUsCgkJCWRhdGFUeXBlOiAiaHRtbCIsCgkJCWRhdGE6IHBhcmFtcywKCQkJLy8gQ29tcGxldGUgY2FsbGJhY2sgKHJlc3BvbnNlVGV4dCBpcyB1c2VkIGludGVybmFsbHkpCgkJCWNvbXBsZXRlOiBmdW5jdGlvbigganFYSFIsIHN0YXR1cywgcmVzcG9uc2VUZXh0ICkgewoJCQkJLy8gU3RvcmUgdGhlIHJlc3BvbnNlIGFzIHNwZWNpZmllZCBieSB0aGUganFYSFIgb2JqZWN0CgkJCQlyZXNwb25zZVRleHQgPSBqcVhIUi5yZXNwb25zZVRleHQ7CgkJCQkvLyBJZiBzdWNjZXNzZnVsLCBpbmplY3QgdGhlIEhUTUwgaW50byBhbGwgdGhlIG1hdGNoZWQgZWxlbWVudHMKCQkJCWlmICgganFYSFIuaXNSZXNvbHZlZCgpICkgewoJCQkJCS8vICM0ODI1OiBHZXQgdGhlIGFjdHVhbCByZXNwb25zZSBpbiBjYXNlCgkJCQkJLy8gYSBkYXRhRmlsdGVyIGlzIHByZXNlbnQgaW4gYWpheFNldHRpbmdzCgkJCQkJanFYSFIuZG9uZShmdW5jdGlvbiggciApIHsKCQkJCQkJcmVzcG9uc2VUZXh0ID0gcjsKCQkJCQl9KTsKCQkJCQkvLyBTZWUgaWYgYSBzZWxlY3RvciB3YXMgc3BlY2lmaWVkCgkJCQkJc2VsZi5odG1sKCBzZWxlY3RvciA/CgkJCQkJCS8vIENyZWF0ZSBhIGR1bW15IGRpdiB0byBob2xkIHRoZSByZXN1bHRzCgkJCQkJCWpRdWVyeSgiPGRpdj4iKQoJCQkJCQkJLy8gaW5qZWN0IHRoZSBjb250ZW50cyBvZiB0aGUgZG9jdW1lbnQgaW4sIHJlbW92aW5nIHRoZSBzY3JpcHRzCgkJCQkJCQkvLyB0byBhdm9pZCBhbnkgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnMgaW4gSUUKCQkJCQkJCS5hcHBlbmQocmVzcG9uc2VUZXh0LnJlcGxhY2UocnNjcmlwdCwgIiIpKQoKCQkJCQkJCS8vIExvY2F0ZSB0aGUgc3BlY2lmaWVkIGVsZW1lbnRzCgkJCQkJCQkuZmluZChzZWxlY3RvcikgOgoKCQkJCQkJLy8gSWYgbm90LCBqdXN0IGluamVjdCB0aGUgZnVsbCByZXN1bHQKCQkJCQkJcmVzcG9uc2VUZXh0ICk7CgkJCQl9CgoJCQkJaWYgKCBjYWxsYmFjayApIHsKCQkJCQlzZWxmLmVhY2goIGNhbGxiYWNrLCBbIHJlc3BvbnNlVGV4dCwgc3RhdHVzLCBqcVhIUiBdICk7CgkJCQl9CgkJCX0KCQl9KTsKCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCXNlcmlhbGl6ZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIGpRdWVyeS5wYXJhbSggdGhpcy5zZXJpYWxpemVBcnJheSgpICk7Cgl9LAoKCXNlcmlhbGl6ZUFycmF5OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXsKCQkJcmV0dXJuIHRoaXMuZWxlbWVudHMgPyBqUXVlcnkubWFrZUFycmF5KCB0aGlzLmVsZW1lbnRzICkgOiB0aGlzOwoJCX0pCgkJLmZpbHRlcihmdW5jdGlvbigpewoJCQlyZXR1cm4gdGhpcy5uYW1lICYmICF0aGlzLmRpc2FibGVkICYmCgkJCQkoIHRoaXMuY2hlY2tlZCB8fCByc2VsZWN0VGV4dGFyZWEudGVzdCggdGhpcy5ub2RlTmFtZSApIHx8CgkJCQkJcmlucHV0LnRlc3QoIHRoaXMudHlwZSApICk7CgkJfSkKCQkubWFwKGZ1bmN0aW9uKCBpLCBlbGVtICl7CgkJCXZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTsKCgkJCXJldHVybiB2YWwgPT0gbnVsbCA/CgkJCQludWxsIDoKCQkJCWpRdWVyeS5pc0FycmF5KCB2YWwgKSA/CgkJCQkJalF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsLCBpICl7CgkJCQkJCXJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgIlxyXG4iICkgfTsKCQkJCQl9KSA6CgkJCQkJeyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsICJcclxuIiApIH07CgkJfSkuZ2V0KCk7Cgl9Cn0pOwoKLy8gQXR0YWNoIGEgYnVuY2ggb2YgZnVuY3Rpb25zIGZvciBoYW5kbGluZyBjb21tb24gQUpBWCBldmVudHMKalF1ZXJ5LmVhY2goICJhamF4U3RhcnQgYWpheFN0b3AgYWpheENvbXBsZXRlIGFqYXhFcnJvciBhamF4U3VjY2VzcyBhamF4U2VuZCIuc3BsaXQoICIgIiApLCBmdW5jdGlvbiggaSwgbyApewoJalF1ZXJ5LmZuWyBvIF0gPSBmdW5jdGlvbiggZiApewoJCXJldHVybiB0aGlzLm9uKCBvLCBmICk7Cgl9Owp9KTsKCmpRdWVyeS5lYWNoKCBbICJnZXQiLCAicG9zdCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHsKCWpRdWVyeVsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjaywgdHlwZSApIHsKCQkvLyBzaGlmdCBhcmd1bWVudHMgaWYgZGF0YSBhcmd1bWVudCB3YXMgb21pdHRlZAoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGRhdGEgKSApIHsKCQkJdHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7CgkJCWNhbGxiYWNrID0gZGF0YTsKCQkJZGF0YSA9IHVuZGVmaW5lZDsKCQl9CgoJCXJldHVybiBqUXVlcnkuYWpheCh7CgkJCXR5cGU6IG1ldGhvZCwKCQkJdXJsOiB1cmwsCgkJCWRhdGE6IGRhdGEsCgkJCXN1Y2Nlc3M6IGNhbGxiYWNrLAoJCQlkYXRhVHlwZTogdHlwZQoJCX0pOwoJfTsKfSk7CgpqUXVlcnkuZXh0ZW5kKHsKCglnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkgewoJCXJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssICJzY3JpcHQiICk7Cgl9LAoKCWdldEpTT046IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrICkgewoJCXJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIGRhdGEsIGNhbGxiYWNrLCAianNvbiIgKTsKCX0sCgoJLy8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXQKCS8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy4KCS8vIElmIHRhcmdldCBpcyBvbWl0dGVkLCB3cml0ZXMgaW50byBhamF4U2V0dGluZ3MuCglhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkgewoJCWlmICggc2V0dGluZ3MgKSB7CgkJCS8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0CgkJCWFqYXhFeHRlbmQoIHRhcmdldCwgalF1ZXJ5LmFqYXhTZXR0aW5ncyApOwoJCX0gZWxzZSB7CgkJCS8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3MKCQkJc2V0dGluZ3MgPSB0YXJnZXQ7CgkJCXRhcmdldCA9IGpRdWVyeS5hamF4U2V0dGluZ3M7CgkJfQoJCWFqYXhFeHRlbmQoIHRhcmdldCwgc2V0dGluZ3MgKTsKCQlyZXR1cm4gdGFyZ2V0OwoJfSwKCglhamF4U2V0dGluZ3M6IHsKCQl1cmw6IGFqYXhMb2NhdGlvbiwKCQlpc0xvY2FsOiBybG9jYWxQcm90b2NvbC50ZXN0KCBhamF4TG9jUGFydHNbIDEgXSApLAoJCWdsb2JhbDogdHJ1ZSwKCQl0eXBlOiAiR0VUIiwKCQljb250ZW50VHlwZTogImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIsCgkJcHJvY2Vzc0RhdGE6IHRydWUsCgkJYXN5bmM6IHRydWUsCgkJLyoKCQl0aW1lb3V0OiAwLAoJCWRhdGE6IG51bGwsCgkJZGF0YVR5cGU6IG51bGwsCgkJdXNlcm5hbWU6IG51bGwsCgkJcGFzc3dvcmQ6IG51bGwsCgkJY2FjaGU6IG51bGwsCgkJdHJhZGl0aW9uYWw6IGZhbHNlLAoJCWhlYWRlcnM6IHt9LAoJCSovCgoJCWFjY2VwdHM6IHsKCQkJeG1sOiAiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbCIsCgkJCWh0bWw6ICJ0ZXh0L2h0bWwiLAoJCQl0ZXh0OiAidGV4dC9wbGFpbiIsCgkJCWpzb246ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQiLAoJCQkiKiI6IGFsbFR5cGVzCgkJfSwKCgkJY29udGVudHM6IHsKCQkJeG1sOiAveG1sLywKCQkJaHRtbDogL2h0bWwvLAoJCQlqc29uOiAvanNvbi8KCQl9LAoKCQlyZXNwb25zZUZpZWxkczogewoJCQl4bWw6ICJyZXNwb25zZVhNTCIsCgkJCXRleHQ6ICJyZXNwb25zZVRleHQiCgkJfSwKCgkJLy8gTGlzdCBvZiBkYXRhIGNvbnZlcnRlcnMKCQkvLyAxKSBrZXkgZm9ybWF0IGlzICJzb3VyY2VfdHlwZSBkZXN0aW5hdGlvbl90eXBlIiAoYSBzaW5nbGUgc3BhY2UgaW4tYmV0d2VlbikKCQkvLyAyKSB0aGUgY2F0Y2hhbGwgc3ltYm9sICIqIiBjYW4gYmUgdXNlZCBmb3Igc291cmNlX3R5cGUKCQljb252ZXJ0ZXJzOiB7CgoJCQkvLyBDb252ZXJ0IGFueXRoaW5nIHRvIHRleHQKCQkJIiogdGV4dCI6IHdpbmRvdy5TdHJpbmcsCgoJCQkvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbikKCQkJInRleHQgaHRtbCI6IHRydWUsCgoJCQkvLyBFdmFsdWF0ZSB0ZXh0IGFzIGEganNvbiBleHByZXNzaW9uCgkJCSJ0ZXh0IGpzb24iOiBqUXVlcnkucGFyc2VKU09OLAoKCQkJLy8gUGFyc2UgdGV4dCBhcyB4bWwKCQkJInRleHQgeG1sIjogalF1ZXJ5LnBhcnNlWE1MCgkJfSwKCgkJLy8gRm9yIG9wdGlvbnMgdGhhdCBzaG91bGRuJ3QgYmUgZGVlcCBleHRlbmRlZDoKCQkvLyB5b3UgY2FuIGFkZCB5b3VyIG93biBjdXN0b20gb3B0aW9ucyBoZXJlIGlmCgkJLy8gYW5kIHdoZW4geW91IGNyZWF0ZSBvbmUgdGhhdCBzaG91bGRuJ3QgYmUKCQkvLyBkZWVwIGV4dGVuZGVkIChzZWUgYWpheEV4dGVuZCkKCQlmbGF0T3B0aW9uczogewoJCQljb250ZXh0OiB0cnVlLAoJCQl1cmw6IHRydWUKCQl9Cgl9LAoKCWFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLAoJYWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksCgoJLy8gTWFpbiBtZXRob2QKCWFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMgKSB7CgoJCS8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlCgkJaWYgKCB0eXBlb2YgdXJsID09PSAib2JqZWN0IiApIHsKCQkJb3B0aW9ucyA9IHVybDsKCQkJdXJsID0gdW5kZWZpbmVkOwoJCX0KCgkJLy8gRm9yY2Ugb3B0aW9ucyB0byBiZSBhbiBvYmplY3QKCQlvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsKCgkJdmFyIC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmplY3QKCQkJcyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksCgkJCS8vIENhbGxiYWNrcyBjb250ZXh0CgkJCWNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLAoJCQkvLyBDb250ZXh0IGZvciBnbG9iYWwgZXZlbnRzCgkJCS8vIEl0J3MgdGhlIGNhbGxiYWNrQ29udGV4dCBpZiBvbmUgd2FzIHByb3ZpZGVkIGluIHRoZSBvcHRpb25zCgkJCS8vIGFuZCBpZiBpdCdzIGEgRE9NIG5vZGUgb3IgYSBqUXVlcnkgY29sbGVjdGlvbgoJCQlnbG9iYWxFdmVudENvbnRleHQgPSBjYWxsYmFja0NvbnRleHQgIT09IHMgJiYKCQkJCSggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSApID8KCQkJCQkJalF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6IGpRdWVyeS5ldmVudCwKCQkJLy8gRGVmZXJyZWRzCgkJCWRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksCgkJCWNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCAib25jZSBtZW1vcnkiICksCgkJCS8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzCgkJCXN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sCgkJCS8vIGlmTW9kaWZpZWQga2V5CgkJCWlmTW9kaWZpZWRLZXksCgkJCS8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpCgkJCXJlcXVlc3RIZWFkZXJzID0ge30sCgkJCXJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSwKCQkJLy8gUmVzcG9uc2UgaGVhZGVycwoJCQlyZXNwb25zZUhlYWRlcnNTdHJpbmcsCgkJCXJlc3BvbnNlSGVhZGVycywKCQkJLy8gdHJhbnNwb3J0CgkJCXRyYW5zcG9ydCwKCQkJLy8gdGltZW91dCBoYW5kbGUKCQkJdGltZW91dFRpbWVyLAoJCQkvLyBDcm9zcy1kb21haW4gZGV0ZWN0aW9uIHZhcnMKCQkJcGFydHMsCgkJCS8vIFRoZSBqcVhIUiBzdGF0ZQoJCQlzdGF0ZSA9IDAsCgkJCS8vIFRvIGtub3cgaWYgZ2xvYmFsIGV2ZW50cyBhcmUgdG8gYmUgZGlzcGF0Y2hlZAoJCQlmaXJlR2xvYmFscywKCQkJLy8gTG9vcCB2YXJpYWJsZQoJCQlpLAoJCQkvLyBGYWtlIHhocgoJCQlqcVhIUiA9IHsKCgkJCQlyZWFkeVN0YXRlOiAwLAoKCQkJCS8vIENhY2hlcyB0aGUgaGVhZGVyCgkJCQlzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7CgkJCQkJaWYgKCAhc3RhdGUgKSB7CgkJCQkJCXZhciBsbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTsKCQkJCQkJbmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIGxuYW1lIF0gPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBsbmFtZSBdIHx8IG5hbWU7CgkJCQkJCXJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTsKCQkJCQl9CgkJCQkJcmV0dXJuIHRoaXM7CgkJCQl9LAoKCQkJCS8vIFJhdyBzdHJpbmcKCQkJCWdldEFsbFJlc3BvbnNlSGVhZGVyczogZnVuY3Rpb24oKSB7CgkJCQkJcmV0dXJuIHN0YXRlID09PSAyID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVsbDsKCQkJCX0sCgoJCQkJLy8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZAoJCQkJZ2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7CgkJCQkJdmFyIG1hdGNoOwoJCQkJCWlmICggc3RhdGUgPT09IDIgKSB7CgkJCQkJCWlmICggIXJlc3BvbnNlSGVhZGVycyApIHsKCQkJCQkJCXJlc3BvbnNlSGVhZGVycyA9IHt9OwoJCQkJCQkJd2hpbGUoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSApICkgewoJCQkJCQkJCXJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbMV0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCQltYXRjaCA9IHJlc3BvbnNlSGVhZGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgXTsKCQkJCQl9CgkJCQkJcmV0dXJuIG1hdGNoID09PSB1bmRlZmluZWQgPyBudWxsIDogbWF0Y2g7CgkJCQl9LAoKCQkJCS8vIE92ZXJyaWRlcyByZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyCgkJCQlvdmVycmlkZU1pbWVUeXBlOiBmdW5jdGlvbiggdHlwZSApIHsKCQkJCQlpZiAoICFzdGF0ZSApIHsKCQkJCQkJcy5taW1lVHlwZSA9IHR5cGU7CgkJCQkJfQoJCQkJCXJldHVybiB0aGlzOwoJCQkJfSwKCgkJCQkvLyBDYW5jZWwgdGhlIHJlcXVlc3QKCQkJCWFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHsKCQkJCQlzdGF0dXNUZXh0ID0gc3RhdHVzVGV4dCB8fCAiYWJvcnQiOwoJCQkJCWlmICggdHJhbnNwb3J0ICkgewoJCQkJCQl0cmFuc3BvcnQuYWJvcnQoIHN0YXR1c1RleHQgKTsKCQkJCQl9CgkJCQkJZG9uZSggMCwgc3RhdHVzVGV4dCApOwoJCQkJCXJldHVybiB0aGlzOwoJCQkJfQoJCQl9OwoKCQkvLyBDYWxsYmFjayBmb3Igd2hlbiBldmVyeXRoaW5nIGlzIGRvbmUKCQkvLyBJdCBpcyBkZWZpbmVkIGhlcmUgYmVjYXVzZSBqc2xpbnQgY29tcGxhaW5zIGlmIGl0IGlzIGRlY2xhcmVkCgkJLy8gYXQgdGhlIGVuZCBvZiB0aGUgZnVuY3Rpb24gKHdoaWNoIHdvdWxkIGJlIG1vcmUgbG9naWNhbCBhbmQgcmVhZGFibGUpCgkJZnVuY3Rpb24gZG9uZSggc3RhdHVzLCBuYXRpdmVTdGF0dXNUZXh0LCByZXNwb25zZXMsIGhlYWRlcnMgKSB7CgoJCQkvLyBDYWxsZWQgb25jZQoJCQlpZiAoIHN0YXRlID09PSAyICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBTdGF0ZSBpcyAiZG9uZSIgbm93CgkJCXN0YXRlID0gMjsKCgkJCS8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzCgkJCWlmICggdGltZW91dFRpbWVyICkgewoJCQkJY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIgKTsKCQkJfQoKCQkJLy8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNvbGxlY3Rpb24KCQkJLy8gKG5vIG1hdHRlciBob3cgbG9uZyB0aGUganFYSFIgb2JqZWN0IHdpbGwgYmUgdXNlZCkKCQkJdHJhbnNwb3J0ID0gdW5kZWZpbmVkOwoKCQkJLy8gQ2FjaGUgcmVzcG9uc2UgaGVhZGVycwoJCQlyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8ICIiOwoKCQkJLy8gU2V0IHJlYWR5U3RhdGUKCQkJanFYSFIucmVhZHlTdGF0ZSA9IHN0YXR1cyA+IDAgPyA0IDogMDsKCgkJCXZhciBpc1N1Y2Nlc3MsCgkJCQlzdWNjZXNzLAoJCQkJZXJyb3IsCgkJCQlzdGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dCwKCQkJCXJlc3BvbnNlID0gcmVzcG9uc2VzID8gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIDogdW5kZWZpbmVkLAoJCQkJbGFzdE1vZGlmaWVkLAoJCQkJZXRhZzsKCgkJCS8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nCgkJCWlmICggc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQgKSB7CgoJCQkJLy8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS4KCQkJCWlmICggcy5pZk1vZGlmaWVkICkgewoKCQkJCQlpZiAoICggbGFzdE1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoICJMYXN0LU1vZGlmaWVkIiApICkgKSB7CgkJCQkJCWpRdWVyeS5sYXN0TW9kaWZpZWRbIGlmTW9kaWZpZWRLZXkgXSA9IGxhc3RNb2RpZmllZDsKCQkJCQl9CgkJCQkJaWYgKCAoIGV0YWcgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggIkV0YWciICkgKSApIHsKCQkJCQkJalF1ZXJ5LmV0YWdbIGlmTW9kaWZpZWRLZXkgXSA9IGV0YWc7CgkJCQkJfQoJCQkJfQoKCQkJCS8vIElmIG5vdCBtb2RpZmllZAoJCQkJaWYgKCBzdGF0dXMgPT09IDMwNCApIHsKCgkJCQkJc3RhdHVzVGV4dCA9ICJub3Rtb2RpZmllZCI7CgkJCQkJaXNTdWNjZXNzID0gdHJ1ZTsKCgkJCQkvLyBJZiB3ZSBoYXZlIGRhdGEKCQkJCX0gZWxzZSB7CgoJCQkJCXRyeSB7CgkJCQkJCXN1Y2Nlc3MgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UgKTsKCQkJCQkJc3RhdHVzVGV4dCA9ICJzdWNjZXNzIjsKCQkJCQkJaXNTdWNjZXNzID0gdHJ1ZTsKCQkJCQl9IGNhdGNoKGUpIHsKCQkJCQkJLy8gV2UgaGF2ZSBhIHBhcnNlcmVycm9yCgkJCQkJCXN0YXR1c1RleHQgPSAicGFyc2VyZXJyb3IiOwoJCQkJCQllcnJvciA9IGU7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgewoJCQkJLy8gV2UgZXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQKCQkJCS8vIHRoZW4gbm9ybWFsaXplIHN0YXR1c1RleHQgYW5kIHN0YXR1cyBmb3Igbm9uLWFib3J0cwoJCQkJZXJyb3IgPSBzdGF0dXNUZXh0OwoJCQkJaWYgKCAhc3RhdHVzVGV4dCB8fCBzdGF0dXMgKSB7CgkJCQkJc3RhdHVzVGV4dCA9ICJlcnJvciI7CgkJCQkJaWYgKCBzdGF0dXMgPCAwICkgewoJCQkJCQlzdGF0dXMgPSAwOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gU2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3QKCQkJanFYSFIuc3RhdHVzID0gc3RhdHVzOwoJCQlqcVhIUi5zdGF0dXNUZXh0ID0gIiIgKyAoIG5hdGl2ZVN0YXR1c1RleHQgfHwgc3RhdHVzVGV4dCApOwoKCQkJLy8gU3VjY2Vzcy9FcnJvcgoJCQlpZiAoIGlzU3VjY2VzcyApIHsKCQkJCWRlZmVycmVkLnJlc29sdmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSApOwoJCQl9IGVsc2UgewoJCQkJZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7CgkJCX0KCgkJCS8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzCgkJCWpxWEhSLnN0YXR1c0NvZGUoIHN0YXR1c0NvZGUgKTsKCQkJc3RhdHVzQ29kZSA9IHVuZGVmaW5lZDsKCgkJCWlmICggZmlyZUdsb2JhbHMgKSB7CgkJCQlnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggImFqYXgiICsgKCBpc1N1Y2Nlc3MgPyAiU3VjY2VzcyIgOiAiRXJyb3IiICksCgkJCQkJCVsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJvciBdICk7CgkJCX0KCgkJCS8vIENvbXBsZXRlCgkJCWNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7CgoJCQlpZiAoIGZpcmVHbG9iYWxzICkgewoJCQkJZ2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoICJhamF4Q29tcGxldGUiLCBbIGpxWEhSLCBzIF0gKTsKCQkJCS8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlcgoJCQkJaWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHsKCQkJCQlqUXVlcnkuZXZlbnQudHJpZ2dlciggImFqYXhTdG9wIiApOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBBdHRhY2ggZGVmZXJyZWRzCgkJZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTsKCQlqcVhIUi5zdWNjZXNzID0ganFYSFIuZG9uZTsKCQlqcVhIUi5lcnJvciA9IGpxWEhSLmZhaWw7CgkJanFYSFIuY29tcGxldGUgPSBjb21wbGV0ZURlZmVycmVkLmFkZDsKCgkJLy8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3MKCQlqcVhIUi5zdGF0dXNDb2RlID0gZnVuY3Rpb24oIG1hcCApIHsKCQkJaWYgKCBtYXAgKSB7CgkJCQl2YXIgdG1wOwoJCQkJaWYgKCBzdGF0ZSA8IDIgKSB7CgkJCQkJZm9yICggdG1wIGluIG1hcCApIHsKCQkJCQkJc3RhdHVzQ29kZVsgdG1wIF0gPSBbIHN0YXR1c0NvZGVbdG1wXSwgbWFwW3RtcF0gXTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCXRtcCA9IG1hcFsganFYSFIuc3RhdHVzIF07CgkJCQkJanFYSFIudGhlbiggdG1wLCB0bXAgKTsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gdGhpczsKCQl9OwoKCQkvLyBSZW1vdmUgaGFzaCBjaGFyYWN0ZXIgKCM3NTMxOiBhbmQgc3RyaW5nIHByb21vdGlvbikKCQkvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkICgjNTg2NjogSUU3IGlzc3VlIHdpdGggcHJvdG9jb2wtbGVzcyB1cmxzKQoJCS8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZQoJCXMudXJsID0gKCAoIHVybCB8fCBzLnVybCApICsgIiIgKS5yZXBsYWNlKCByaGFzaCwgIiIgKS5yZXBsYWNlKCBycHJvdG9jb2wsIGFqYXhMb2NQYXJ0c1sgMSBdICsgIi8vIiApOwoKCQkvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0CgkJcy5kYXRhVHlwZXMgPSBqUXVlcnkudHJpbSggcy5kYXRhVHlwZSB8fCAiKiIgKS50b0xvd2VyQ2FzZSgpLnNwbGl0KCByc3BhY2VzQWpheCApOwoKCQkvLyBEZXRlcm1pbmUgaWYgYSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlcgoJCWlmICggcy5jcm9zc0RvbWFpbiA9PSBudWxsICkgewoJCQlwYXJ0cyA9IHJ1cmwuZXhlYyggcy51cmwudG9Mb3dlckNhc2UoKSApOwoJCQlzLmNyb3NzRG9tYWluID0gISEoIHBhcnRzICYmCgkJCQkoIHBhcnRzWyAxIF0gIT0gYWpheExvY1BhcnRzWyAxIF0gfHwgcGFydHNbIDIgXSAhPSBhamF4TG9jUGFydHNbIDIgXSB8fAoJCQkJCSggcGFydHNbIDMgXSB8fCAoIHBhcnRzWyAxIF0gPT09ICJodHRwOiIgPyA4MCA6IDQ0MyApICkgIT0KCQkJCQkJKCBhamF4TG9jUGFydHNbIDMgXSB8fCAoIGFqYXhMb2NQYXJ0c1sgMSBdID09PSAiaHR0cDoiID8gODAgOiA0NDMgKSApICkKCQkJKTsKCQl9CgoJCS8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZwoJCWlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYgdHlwZW9mIHMuZGF0YSAhPT0gInN0cmluZyIgKSB7CgkJCXMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRyYWRpdGlvbmFsICk7CgkJfQoKCQkvLyBBcHBseSBwcmVmaWx0ZXJzCgkJaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7CgoJCS8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGEgcHJlZmlsdGVyLCBzdG9wIHRoZXJlCgkJaWYgKCBzdGF0ZSA9PT0gMiApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJLy8gV2UgY2FuIGZpcmUgZ2xvYmFsIGV2ZW50cyBhcyBvZiBub3cgaWYgYXNrZWQgdG8KCQlmaXJlR2xvYmFscyA9IHMuZ2xvYmFsOwoKCQkvLyBVcHBlcmNhc2UgdGhlIHR5cGUKCQlzLnR5cGUgPSBzLnR5cGUudG9VcHBlckNhc2UoKTsKCgkJLy8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnQKCQlzLmhhc0NvbnRlbnQgPSAhcm5vQ29udGVudC50ZXN0KCBzLnR5cGUgKTsKCgkJLy8gV2F0Y2ggZm9yIGEgbmV3IHNldCBvZiByZXF1ZXN0cwoJCWlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkgewoJCQlqUXVlcnkuZXZlbnQudHJpZ2dlciggImFqYXhTdGFydCIgKTsKCQl9CgoJCS8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50CgkJaWYgKCAhcy5oYXNDb250ZW50ICkgewoKCQkJLy8gSWYgZGF0YSBpcyBhdmFpbGFibGUsIGFwcGVuZCBkYXRhIHRvIHVybAoJCQlpZiAoIHMuZGF0YSApIHsKCQkJCXMudXJsICs9ICggcnF1ZXJ5LnRlc3QoIHMudXJsICkgPyAiJiIgOiAiPyIgKSArIHMuZGF0YTsKCQkJCS8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnkKCQkJCWRlbGV0ZSBzLmRhdGE7CgkJCX0KCgkJCS8vIEdldCBpZk1vZGlmaWVkS2V5IGJlZm9yZSBhZGRpbmcgdGhlIGFudGktY2FjaGUgcGFyYW1ldGVyCgkJCWlmTW9kaWZpZWRLZXkgPSBzLnVybDsKCgkJCS8vIEFkZCBhbnRpLWNhY2hlIGluIHVybCBpZiBuZWVkZWQKCQkJaWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHsKCgkJCQl2YXIgdHMgPSBqUXVlcnkubm93KCksCgkJCQkJLy8gdHJ5IHJlcGxhY2luZyBfPSBpZiBpdCBpcyB0aGVyZQoJCQkJCXJldCA9IHMudXJsLnJlcGxhY2UoIHJ0cywgIiQxXz0iICsgdHMgKTsKCgkJCQkvLyBpZiBub3RoaW5nIHdhcyByZXBsYWNlZCwgYWRkIHRpbWVzdGFtcCB0byB0aGUgZW5kCgkJCQlzLnVybCA9IHJldCArICggKCByZXQgPT09IHMudXJsICkgPyAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gIiYiIDogIj8iICkgKyAiXz0iICsgdHMgOiAiIiApOwoJCQl9CgkJfQoKCQkvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnQKCQlpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHsKCQkJanFYSFIuc2V0UmVxdWVzdEhlYWRlciggIkNvbnRlbnQtVHlwZSIsIHMuY29udGVudFR5cGUgKTsKCQl9CgoJCS8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuCgkJaWYgKCBzLmlmTW9kaWZpZWQgKSB7CgkJCWlmTW9kaWZpZWRLZXkgPSBpZk1vZGlmaWVkS2V5IHx8IHMudXJsOwoJCQlpZiAoIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGlmTW9kaWZpZWRLZXkgXSApIHsKCQkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIoICJJZi1Nb2RpZmllZC1TaW5jZSIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGlmTW9kaWZpZWRLZXkgXSApOwoJCQl9CgkJCWlmICggalF1ZXJ5LmV0YWdbIGlmTW9kaWZpZWRLZXkgXSApIHsKCQkJCWpxWEhSLnNldFJlcXVlc3RIZWFkZXIoICJJZi1Ob25lLU1hdGNoIiwgalF1ZXJ5LmV0YWdbIGlmTW9kaWZpZWRLZXkgXSApOwoJCQl9CgkJfQoKCQkvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlCgkJanFYSFIuc2V0UmVxdWVzdEhlYWRlcigKCQkJIkFjY2VwdCIsCgkJCXMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1swXSBdID8KCQkJCXMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbMF0gXSArICggcy5kYXRhVHlwZXNbIDAgXSAhPT0gIioiID8gIiwgIiArIGFsbFR5cGVzICsgIjsgcT0wLjAxIiA6ICIiICkgOgoJCQkJcy5hY2NlcHRzWyAiKiIgXQoJCSk7CgoJCS8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvbgoJCWZvciAoIGkgaW4gcy5oZWFkZXJzICkgewoJCQlqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBzLmhlYWRlcnNbIGkgXSApOwoJCX0KCgkJLy8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydAoJCWlmICggcy5iZWZvcmVTZW5kICYmICggcy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9PT0gZmFsc2UgfHwgc3RhdGUgPT09IDIgKSApIHsKCQkJCS8vIEFib3J0IGlmIG5vdCBkb25lIGFscmVhZHkKCQkJCWpxWEhSLmFib3J0KCk7CgkJCQlyZXR1cm4gZmFsc2U7CgoJCX0KCgkJLy8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzCgkJZm9yICggaSBpbiB7IHN1Y2Nlc3M6IDEsIGVycm9yOiAxLCBjb21wbGV0ZTogMSB9ICkgewoJCQlqcVhIUlsgaSBdKCBzWyBpIF0gKTsKCQl9CgoJCS8vIEdldCB0cmFuc3BvcnQKCQl0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTsKCgkJLy8gSWYgbm8gdHJhbnNwb3J0LCB3ZSBhdXRvLWFib3J0CgkJaWYgKCAhdHJhbnNwb3J0ICkgewoJCQlkb25lKCAtMSwgIk5vIFRyYW5zcG9ydCIgKTsKCQl9IGVsc2UgewoJCQlqcVhIUi5yZWFkeVN0YXRlID0gMTsKCQkJLy8gU2VuZCBnbG9iYWwgZXZlbnQKCQkJaWYgKCBmaXJlR2xvYmFscyApIHsKCQkJCWdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCAiYWpheFNlbmQiLCBbIGpxWEhSLCBzIF0gKTsKCQkJfQoJCQkvLyBUaW1lb3V0CgkJCWlmICggcy5hc3luYyAmJiBzLnRpbWVvdXQgPiAwICkgewoJCQkJdGltZW91dFRpbWVyID0gc2V0VGltZW91dCggZnVuY3Rpb24oKXsKCQkJCQlqcVhIUi5hYm9ydCggInRpbWVvdXQiICk7CgkJCQl9LCBzLnRpbWVvdXQgKTsKCQkJfQoKCQkJdHJ5IHsKCQkJCXN0YXRlID0gMTsKCQkJCXRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVhZGVycywgZG9uZSApOwoJCQl9IGNhdGNoIChlKSB7CgkJCQkvLyBQcm9wYWdhdGUgZXhjZXB0aW9uIGFzIGVycm9yIGlmIG5vdCBkb25lCgkJCQlpZiAoIHN0YXRlIDwgMiApIHsKCQkJCQlkb25lKCAtMSwgZSApOwoJCQkJLy8gU2ltcGx5IHJldGhyb3cgb3RoZXJ3aXNlCgkJCQl9IGVsc2UgewoJCQkJCXRocm93IGU7CgkJCQl9CgkJCX0KCQl9CgoJCXJldHVybiBqcVhIUjsKCX0sCgoJLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2YKCS8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZwoJcGFyYW06IGZ1bmN0aW9uKCBhLCB0cmFkaXRpb25hbCApIHsKCQl2YXIgcyA9IFtdLAoJCQlhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQkJCS8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgcmV0dXJuIGl0cyB2YWx1ZQoJCQkJdmFsdWUgPSBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSA/IHZhbHVlKCkgOiB2YWx1ZTsKCQkJCXNbIHMubGVuZ3RoIF0gPSBlbmNvZGVVUklDb21wb25lbnQoIGtleSApICsgIj0iICsgZW5jb2RlVVJJQ29tcG9uZW50KCB2YWx1ZSApOwoJCQl9OwoKCQkvLyBTZXQgdHJhZGl0aW9uYWwgdG8gdHJ1ZSBmb3IgalF1ZXJ5IDw9IDEuMy4yIGJlaGF2aW9yLgoJCWlmICggdHJhZGl0aW9uYWwgPT09IHVuZGVmaW5lZCApIHsKCQkJdHJhZGl0aW9uYWwgPSBqUXVlcnkuYWpheFNldHRpbmdzLnRyYWRpdGlvbmFsOwoJCX0KCgkJLy8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy4KCQlpZiAoIGpRdWVyeS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkgewoJCQkvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHMKCQkJalF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkgewoJCQkJYWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTsKCQkJfSk7CgoJCX0gZWxzZSB7CgkJCS8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlICJvbGQiIHdheSAodGhlIHdheSAxLjMuMiBvciBvbGRlcgoJCQkvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS4KCQkJZm9yICggdmFyIHByZWZpeCBpbiBhICkgewoJCQkJYnVpbGRQYXJhbXMoIHByZWZpeCwgYVsgcHJlZml4IF0sIHRyYWRpdGlvbmFsLCBhZGQgKTsKCQkJfQoJCX0KCgkJLy8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvbgoJCXJldHVybiBzLmpvaW4oICImIiApLnJlcGxhY2UoIHIyMCwgIisiICk7Cgl9Cn0pOwoKZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkgewoJaWYgKCBqUXVlcnkuaXNBcnJheSggb2JqICkgKSB7CgkJLy8gU2VyaWFsaXplIGFycmF5IGl0ZW0uCgkJalF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7CgkJCWlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7CgkJCQkvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuCgkJCQlhZGQoIHByZWZpeCwgdiApOwoKCQkJfSBlbHNlIHsKCQkJCS8vIElmIGFycmF5IGl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cwoJCQkJLy8gbnVtZXJpYyBpbmRleCB0byByZXNvbHZlIGRlc2VyaWFsaXphdGlvbiBhbWJpZ3VpdHkgaXNzdWVzLgoJCQkJLy8gTm90ZSB0aGF0IHJhY2sgKGFzIG9mIDEuMC4wKSBjYW4ndCBjdXJyZW50bHkgZGVzZXJpYWxpemUKCQkJCS8vIG5lc3RlZCBhcnJheXMgcHJvcGVybHksIGFuZCBhdHRlbXB0aW5nIHRvIGRvIHNvIG1heSBjYXVzZQoJCQkJLy8gYSBzZXJ2ZXIgZXJyb3IuIFBvc3NpYmxlIGZpeGVzIGFyZSB0byBtb2RpZnkgcmFjaydzCgkJCQkvLyBkZXNlcmlhbGl6YXRpb24gYWxnb3JpdGhtIG9yIHRvIHByb3ZpZGUgYW4gb3B0aW9uIG9yIGZsYWcKCQkJCS8vIHRvIGZvcmNlIGFycmF5IHNlcmlhbGl6YXRpb24gdG8gYmUgc2hhbGxvdy4KCQkJCWJ1aWxkUGFyYW1zKCBwcmVmaXggKyAiWyIgKyAoIHR5cGVvZiB2ID09PSAib2JqZWN0IiA/IGkgOiAiIiApICsgIl0iLCB2LCB0cmFkaXRpb25hbCwgYWRkICk7CgkJCX0KCQl9KTsKCgl9IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgalF1ZXJ5LnR5cGUoIG9iaiApID09PSAib2JqZWN0IiApIHsKCQkvLyBTZXJpYWxpemUgb2JqZWN0IGl0ZW0uCgkJZm9yICggdmFyIG5hbWUgaW4gb2JqICkgewoJCQlidWlsZFBhcmFtcyggcHJlZml4ICsgIlsiICsgbmFtZSArICJdIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTsKCQl9CgoJfSBlbHNlIHsKCQkvLyBTZXJpYWxpemUgc2NhbGFyIGl0ZW0uCgkJYWRkKCBwcmVmaXgsIG9iaiApOwoJfQp9CgovLyBUaGlzIGlzIHN0aWxsIG9uIHRoZSBqUXVlcnkgb2JqZWN0Li4uIGZvciBub3cKLy8gV2FudCB0byBtb3ZlIHRoaXMgdG8galF1ZXJ5LmFqYXggc29tZSBkYXkKalF1ZXJ5LmV4dGVuZCh7CgoJLy8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzCglhY3RpdmU6IDAsCgoJLy8gTGFzdC1Nb2RpZmllZCBoZWFkZXIgY2FjaGUgZm9yIG5leHQgcmVxdWVzdAoJbGFzdE1vZGlmaWVkOiB7fSwKCWV0YWc6IHt9Cgp9KTsKCi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDoKICogLSBzZXRzIGFsbCByZXNwb25zZVhYWCBmaWVsZHMgYWNjb3JkaW5nbHkKICogLSBmaW5kcyB0aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBlIGFuZCBleHBlY3RlZCBkYXRhVHlwZSkKICogLSByZXR1cm5zIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlCiAqLwpmdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICkgewoKCXZhciBjb250ZW50cyA9IHMuY29udGVudHMsCgkJZGF0YVR5cGVzID0gcy5kYXRhVHlwZXMsCgkJcmVzcG9uc2VGaWVsZHMgPSBzLnJlc3BvbnNlRmllbGRzLAoJCWN0LAoJCXR5cGUsCgkJZmluYWxEYXRhVHlwZSwKCQlmaXJzdERhdGFUeXBlOwoKCS8vIEZpbGwgcmVzcG9uc2VYWFggZmllbGRzCglmb3IgKCB0eXBlIGluIHJlc3BvbnNlRmllbGRzICkgewoJCWlmICggdHlwZSBpbiByZXNwb25zZXMgKSB7CgkJCWpxWEhSWyByZXNwb25zZUZpZWxkc1t0eXBlXSBdID0gcmVzcG9uc2VzWyB0eXBlIF07CgkJfQoJfQoKCS8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzCgl3aGlsZSggZGF0YVR5cGVzWyAwIF0gPT09ICIqIiApIHsKCQlkYXRhVHlwZXMuc2hpZnQoKTsKCQlpZiAoIGN0ID09PSB1bmRlZmluZWQgKSB7CgkJCWN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggImNvbnRlbnQtdHlwZSIgKTsKCQl9Cgl9CgoJLy8gQ2hlY2sgaWYgd2UncmUgZGVhbGluZyB3aXRoIGEga25vd24gY29udGVudC10eXBlCglpZiAoIGN0ICkgewoJCWZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7CgkJCWlmICggY29udGVudHNbIHR5cGUgXSAmJiBjb250ZW50c1sgdHlwZSBdLnRlc3QoIGN0ICkgKSB7CgkJCQlkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApOwoJCQkJYnJlYWs7CgkJCX0KCQl9Cgl9CgoJLy8gQ2hlY2sgdG8gc2VlIGlmIHdlIGhhdmUgYSByZXNwb25zZSBmb3IgdGhlIGV4cGVjdGVkIGRhdGFUeXBlCglpZiAoIGRhdGFUeXBlc1sgMCBdIGluIHJlc3BvbnNlcyApIHsKCQlmaW5hbERhdGFUeXBlID0gZGF0YVR5cGVzWyAwIF07Cgl9IGVsc2UgewoJCS8vIFRyeSBjb252ZXJ0aWJsZSBkYXRhVHlwZXMKCQlmb3IgKCB0eXBlIGluIHJlc3BvbnNlcyApIHsKCQkJaWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgIiAiICsgZGF0YVR5cGVzWzBdIF0gKSB7CgkJCQlmaW5hbERhdGFUeXBlID0gdHlwZTsKCQkJCWJyZWFrOwoJCQl9CgkJCWlmICggIWZpcnN0RGF0YVR5cGUgKSB7CgkJCQlmaXJzdERhdGFUeXBlID0gdHlwZTsKCQkJfQoJCX0KCQkvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmUKCQlmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlOwoJfQoKCS8vIElmIHdlIGZvdW5kIGEgZGF0YVR5cGUKCS8vIFdlIGFkZCB0aGUgZGF0YVR5cGUgdG8gdGhlIGxpc3QgaWYgbmVlZGVkCgkvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlCglpZiAoIGZpbmFsRGF0YVR5cGUgKSB7CgkJaWYgKCBmaW5hbERhdGFUeXBlICE9PSBkYXRhVHlwZXNbIDAgXSApIHsKCQkJZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTsKCQl9CgkJcmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdOwoJfQp9CgovLyBDaGFpbiBjb252ZXJzaW9ucyBnaXZlbiB0aGUgcmVxdWVzdCBhbmQgdGhlIG9yaWdpbmFsIHJlc3BvbnNlCmZ1bmN0aW9uIGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSApIHsKCgkvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZAoJaWYgKCBzLmRhdGFGaWx0ZXIgKSB7CgkJcmVzcG9uc2UgPSBzLmRhdGFGaWx0ZXIoIHJlc3BvbnNlLCBzLmRhdGFUeXBlICk7Cgl9CgoJdmFyIGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzLAoJCWNvbnZlcnRlcnMgPSB7fSwKCQlpLAoJCWtleSwKCQlsZW5ndGggPSBkYXRhVHlwZXMubGVuZ3RoLAoJCXRtcCwKCQkvLyBDdXJyZW50IGFuZCBwcmV2aW91cyBkYXRhVHlwZXMKCQljdXJyZW50ID0gZGF0YVR5cGVzWyAwIF0sCgkJcHJldiwKCQkvLyBDb252ZXJzaW9uIGV4cHJlc3Npb24KCQljb252ZXJzaW9uLAoJCS8vIENvbnZlcnNpb24gZnVuY3Rpb24KCQljb252LAoJCS8vIENvbnZlcnNpb24gZnVuY3Rpb25zICh0cmFuc2l0aXZlIGNvbnZlcnNpb24pCgkJY29udjEsCgkJY29udjI7CgoJLy8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGNoYWluCglmb3IgKCBpID0gMTsgaSA8IGxlbmd0aDsgaSsrICkgewoKCQkvLyBDcmVhdGUgY29udmVydGVycyBtYXAKCQkvLyB3aXRoIGxvd2VyY2FzZWQga2V5cwoJCWlmICggaSA9PT0gMSApIHsKCQkJZm9yICgga2V5IGluIHMuY29udmVydGVycyApIHsKCQkJCWlmICggdHlwZW9mIGtleSA9PT0gInN0cmluZyIgKSB7CgkJCQkJY29udmVydGVyc1sga2V5LnRvTG93ZXJDYXNlKCkgXSA9IHMuY29udmVydGVyc1sga2V5IF07CgkJCQl9CgkJCX0KCQl9CgoJCS8vIEdldCB0aGUgZGF0YVR5cGVzCgkJcHJldiA9IGN1cnJlbnQ7CgkJY3VycmVudCA9IGRhdGFUeXBlc1sgaSBdOwoKCQkvLyBJZiBjdXJyZW50IGlzIGF1dG8gZGF0YVR5cGUsIHVwZGF0ZSBpdCB0byBwcmV2CgkJaWYgKCBjdXJyZW50ID09PSAiKiIgKSB7CgkJCWN1cnJlbnQgPSBwcmV2OwoJCS8vIElmIG5vIGF1dG8gYW5kIGRhdGFUeXBlcyBhcmUgYWN0dWFsbHkgZGlmZmVyZW50CgkJfSBlbHNlIGlmICggcHJldiAhPT0gIioiICYmIHByZXYgIT09IGN1cnJlbnQgKSB7CgoJCQkvLyBHZXQgdGhlIGNvbnZlcnRlcgoJCQljb252ZXJzaW9uID0gcHJldiArICIgIiArIGN1cnJlbnQ7CgkJCWNvbnYgPSBjb252ZXJ0ZXJzWyBjb252ZXJzaW9uIF0gfHwgY29udmVydGVyc1sgIiogIiArIGN1cnJlbnQgXTsKCgkJCS8vIElmIHRoZXJlIGlzIG5vIGRpcmVjdCBjb252ZXJ0ZXIsIHNlYXJjaCB0cmFuc2l0aXZlbHkKCQkJaWYgKCAhY29udiApIHsKCQkJCWNvbnYyID0gdW5kZWZpbmVkOwoJCQkJZm9yICggY29udjEgaW4gY29udmVydGVycyApIHsKCQkJCQl0bXAgPSBjb252MS5zcGxpdCggIiAiICk7CgkJCQkJaWYgKCB0bXBbIDAgXSA9PT0gcHJldiB8fCB0bXBbIDAgXSA9PT0gIioiICkgewoJCQkJCQljb252MiA9IGNvbnZlcnRlcnNbIHRtcFsxXSArICIgIiArIGN1cnJlbnQgXTsKCQkJCQkJaWYgKCBjb252MiApIHsKCQkJCQkJCWNvbnYxID0gY29udmVydGVyc1sgY29udjEgXTsKCQkJCQkJCWlmICggY29udjEgPT09IHRydWUgKSB7CgkJCQkJCQkJY29udiA9IGNvbnYyOwoJCQkJCQkJfSBlbHNlIGlmICggY29udjIgPT09IHRydWUgKSB7CgkJCQkJCQkJY29udiA9IGNvbnYxOwoJCQkJCQkJfQoJCQkJCQkJYnJlYWs7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQkJLy8gSWYgd2UgZm91bmQgbm8gY29udmVydGVyLCBkaXNwYXRjaCBhbiBlcnJvcgoJCQlpZiAoICEoIGNvbnYgfHwgY29udjIgKSApIHsKCQkJCWpRdWVyeS5lcnJvciggIk5vIGNvbnZlcnNpb24gZnJvbSAiICsgY29udmVyc2lvbi5yZXBsYWNlKCIgIiwiIHRvICIpICk7CgkJCX0KCQkJLy8gSWYgZm91bmQgY29udmVydGVyIGlzIG5vdCBhbiBlcXVpdmFsZW5jZQoJCQlpZiAoIGNvbnYgIT09IHRydWUgKSB7CgkJCQkvLyBDb252ZXJ0IHdpdGggMSBvciAyIGNvbnZlcnRlcnMgYWNjb3JkaW5nbHkKCQkJCXJlc3BvbnNlID0gY29udiA/IGNvbnYoIHJlc3BvbnNlICkgOiBjb252MiggY29udjEocmVzcG9uc2UpICk7CgkJCX0KCQl9Cgl9CglyZXR1cm4gcmVzcG9uc2U7Cn0KCgoKCnZhciBqc2MgPSBqUXVlcnkubm93KCksCglqc3JlID0gLyhcPSlcPygmfCQpfFw/XD8vaTsKCi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3MKalF1ZXJ5LmFqYXhTZXR1cCh7Cglqc29ucDogImNhbGxiYWNrIiwKCWpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkgewoJCXJldHVybiBqUXVlcnkuZXhwYW5kbyArICJfIiArICgganNjKysgKTsKCX0KfSk7CgovLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHMKalF1ZXJ5LmFqYXhQcmVmaWx0ZXIoICJqc29uIGpzb25wIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkgewoKCXZhciBpbnNwZWN0RGF0YSA9ICggdHlwZW9mIHMuZGF0YSA9PT0gInN0cmluZyIgKSAmJiAvXmFwcGxpY2F0aW9uXC94XC13d3dcLWZvcm1cLXVybGVuY29kZWQvLnRlc3QoIHMuY29udGVudFR5cGUgKTsKCglpZiAoIHMuZGF0YVR5cGVzWyAwIF0gPT09ICJqc29ucCIgfHwKCQlzLmpzb25wICE9PSBmYWxzZSAmJiAoIGpzcmUudGVzdCggcy51cmwgKSB8fAoJCQkJaW5zcGVjdERhdGEgJiYganNyZS50ZXN0KCBzLmRhdGEgKSApICkgewoKCQl2YXIgcmVzcG9uc2VDb250YWluZXIsCgkJCWpzb25wQ2FsbGJhY2sgPSBzLmpzb25wQ2FsbGJhY2sgPQoJCQkJalF1ZXJ5LmlzRnVuY3Rpb24oIHMuanNvbnBDYWxsYmFjayApID8gcy5qc29ucENhbGxiYWNrKCkgOiBzLmpzb25wQ2FsbGJhY2ssCgkJCXByZXZpb3VzID0gd2luZG93WyBqc29ucENhbGxiYWNrIF0sCgkJCXVybCA9IHMudXJsLAoJCQlkYXRhID0gcy5kYXRhLAoJCQlyZXBsYWNlID0gIiQxIiArIGpzb25wQ2FsbGJhY2sgKyAiJDIiOwoKCQlpZiAoIHMuanNvbnAgIT09IGZhbHNlICkgewoJCQl1cmwgPSB1cmwucmVwbGFjZSgganNyZSwgcmVwbGFjZSApOwoJCQlpZiAoIHMudXJsID09PSB1cmwgKSB7CgkJCQlpZiAoIGluc3BlY3REYXRhICkgewoJCQkJCWRhdGEgPSBkYXRhLnJlcGxhY2UoIGpzcmUsIHJlcGxhY2UgKTsKCQkJCX0KCQkJCWlmICggcy5kYXRhID09PSBkYXRhICkgewoJCQkJCS8vIEFkZCBjYWxsYmFjayBtYW51YWxseQoJCQkJCXVybCArPSAoL1w/Ly50ZXN0KCB1cmwgKSA/ICImIiA6ICI/IikgKyBzLmpzb25wICsgIj0iICsganNvbnBDYWxsYmFjazsKCQkJCX0KCQkJfQoJCX0KCgkJcy51cmwgPSB1cmw7CgkJcy5kYXRhID0gZGF0YTsKCgkJLy8gSW5zdGFsbCBjYWxsYmFjawoJCXdpbmRvd1sganNvbnBDYWxsYmFjayBdID0gZnVuY3Rpb24oIHJlc3BvbnNlICkgewoJCQlyZXNwb25zZUNvbnRhaW5lciA9IFsgcmVzcG9uc2UgXTsKCQl9OwoKCQkvLyBDbGVhbi11cCBmdW5jdGlvbgoJCWpxWEhSLmFsd2F5cyhmdW5jdGlvbigpIHsKCQkJLy8gU2V0IGNhbGxiYWNrIGJhY2sgdG8gcHJldmlvdXMgdmFsdWUKCQkJd2luZG93WyBqc29ucENhbGxiYWNrIF0gPSBwcmV2aW91czsKCQkJLy8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlCgkJCWlmICggcmVzcG9uc2VDb250YWluZXIgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHByZXZpb3VzICkgKSB7CgkJCQl3aW5kb3dbIGpzb25wQ2FsbGJhY2sgXSggcmVzcG9uc2VDb250YWluZXJbIDAgXSApOwoJCQl9CgkJfSk7CgoJCS8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb24KCQlzLmNvbnZlcnRlcnNbInNjcmlwdCBqc29uIl0gPSBmdW5jdGlvbigpIHsKCQkJaWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7CgkJCQlqUXVlcnkuZXJyb3IoIGpzb25wQ2FsbGJhY2sgKyAiIHdhcyBub3QgY2FsbGVkIiApOwoJCQl9CgkJCXJldHVybiByZXNwb25zZUNvbnRhaW5lclsgMCBdOwoJCX07CgoJCS8vIGZvcmNlIGpzb24gZGF0YVR5cGUKCQlzLmRhdGFUeXBlc1sgMCBdID0gImpzb24iOwoKCQkvLyBEZWxlZ2F0ZSB0byBzY3JpcHQKCQlyZXR1cm4gInNjcmlwdCI7Cgl9Cn0pOwoKCgoKLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGUKalF1ZXJ5LmFqYXhTZXR1cCh7CglhY2NlcHRzOiB7CgkJc2NyaXB0OiAidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHQiCgl9LAoJY29udGVudHM6IHsKCQlzY3JpcHQ6IC9qYXZhc2NyaXB0fGVjbWFzY3JpcHQvCgl9LAoJY29udmVydGVyczogewoJCSJ0ZXh0IHNjcmlwdCI6IGZ1bmN0aW9uKCB0ZXh0ICkgewoJCQlqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApOwoJCQlyZXR1cm4gdGV4dDsKCQl9Cgl9Cn0pOwoKLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBnbG9iYWwKalF1ZXJ5LmFqYXhQcmVmaWx0ZXIoICJzY3JpcHQiLCBmdW5jdGlvbiggcyApIHsKCWlmICggcy5jYWNoZSA9PT0gdW5kZWZpbmVkICkgewoJCXMuY2FjaGUgPSBmYWxzZTsKCX0KCWlmICggcy5jcm9zc0RvbWFpbiApIHsKCQlzLnR5cGUgPSAiR0VUIjsKCQlzLmdsb2JhbCA9IGZhbHNlOwoJfQp9KTsKCi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydApqUXVlcnkuYWpheFRyYW5zcG9ydCggInNjcmlwdCIsIGZ1bmN0aW9uKHMpIHsKCgkvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJlcXVlc3RzCglpZiAoIHMuY3Jvc3NEb21haW4gKSB7CgoJCXZhciBzY3JpcHQsCgkJCWhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCAiaGVhZCIgKVswXSB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7CgoJCXJldHVybiB7CgoJCQlzZW5kOiBmdW5jdGlvbiggXywgY2FsbGJhY2sgKSB7CgoJCQkJc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggInNjcmlwdCIgKTsKCgkJCQlzY3JpcHQuYXN5bmMgPSAiYXN5bmMiOwoKCQkJCWlmICggcy5zY3JpcHRDaGFyc2V0ICkgewoJCQkJCXNjcmlwdC5jaGFyc2V0ID0gcy5zY3JpcHRDaGFyc2V0OwoJCQkJfQoKCQkJCXNjcmlwdC5zcmMgPSBzLnVybDsKCgkJCQkvLyBBdHRhY2ggaGFuZGxlcnMgZm9yIGFsbCBicm93c2VycwoJCQkJc2NyaXB0Lm9ubG9hZCA9IHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiggXywgaXNBYm9ydCApIHsKCgkJCQkJaWYgKCBpc0Fib3J0IHx8ICFzY3JpcHQucmVhZHlTdGF0ZSB8fCAvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KCBzY3JpcHQucmVhZHlTdGF0ZSApICkgewoKCQkJCQkJLy8gSGFuZGxlIG1lbW9yeSBsZWFrIGluIElFCgkJCQkJCXNjcmlwdC5vbmxvYWQgPSBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDsKCgkJCQkJCS8vIFJlbW92ZSB0aGUgc2NyaXB0CgkJCQkJCWlmICggaGVhZCAmJiBzY3JpcHQucGFyZW50Tm9kZSApIHsKCQkJCQkJCWhlYWQucmVtb3ZlQ2hpbGQoIHNjcmlwdCApOwoJCQkJCQl9CgoJCQkJCQkvLyBEZXJlZmVyZW5jZSB0aGUgc2NyaXB0CgkJCQkJCXNjcmlwdCA9IHVuZGVmaW5lZDsKCgkJCQkJCS8vIENhbGxiYWNrIGlmIG5vdCBhYm9ydAoJCQkJCQlpZiAoICFpc0Fib3J0ICkgewoJCQkJCQkJY2FsbGJhY2soIDIwMCwgInN1Y2Nlc3MiICk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9OwoJCQkJLy8gVXNlIGluc2VydEJlZm9yZSBpbnN0ZWFkIG9mIGFwcGVuZENoaWxkICB0byBjaXJjdW12ZW50IGFuIElFNiBidWcuCgkJCQkvLyBUaGlzIGFyaXNlcyB3aGVuIGEgYmFzZSBub2RlIGlzIHVzZWQgKCMyNzA5IGFuZCAjNDM3OCkuCgkJCQloZWFkLmluc2VydEJlZm9yZSggc2NyaXB0LCBoZWFkLmZpcnN0Q2hpbGQgKTsKCQkJfSwKCgkJCWFib3J0OiBmdW5jdGlvbigpIHsKCQkJCWlmICggc2NyaXB0ICkgewoJCQkJCXNjcmlwdC5vbmxvYWQoIDAsIDEgKTsKCQkJCX0KCQkJfQoJCX07Cgl9Cn0pOwoKCgoKdmFyIC8vICM1MjgwOiBJbnRlcm5ldCBFeHBsb3JlciB3aWxsIGtlZXAgY29ubmVjdGlvbnMgYWxpdmUgaWYgd2UgZG9uJ3QgYWJvcnQgb24gdW5sb2FkCgl4aHJPblVubG9hZEFib3J0ID0gd2luZG93LkFjdGl2ZVhPYmplY3QgPyBmdW5jdGlvbigpIHsKCQkvLyBBYm9ydCBhbGwgcGVuZGluZyByZXF1ZXN0cwoJCWZvciAoIHZhciBrZXkgaW4geGhyQ2FsbGJhY2tzICkgewoJCQl4aHJDYWxsYmFja3NbIGtleSBdKCAwLCAxICk7CgkJfQoJfSA6IGZhbHNlLAoJeGhySWQgPSAwLAoJeGhyQ2FsbGJhY2tzOwoKLy8gRnVuY3Rpb25zIHRvIGNyZWF0ZSB4aHJzCmZ1bmN0aW9uIGNyZWF0ZVN0YW5kYXJkWEhSKCkgewoJdHJ5IHsKCQlyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpOwoJfSBjYXRjaCggZSApIHt9Cn0KCmZ1bmN0aW9uIGNyZWF0ZUFjdGl2ZVhIUigpIHsKCXRyeSB7CgkJcmV0dXJuIG5ldyB3aW5kb3cuQWN0aXZlWE9iamVjdCggIk1pY3Jvc29mdC5YTUxIVFRQIiApOwoJfSBjYXRjaCggZSApIHt9Cn0KCi8vIENyZWF0ZSB0aGUgcmVxdWVzdCBvYmplY3QKLy8gKFRoaXMgaXMgc3RpbGwgYXR0YWNoZWQgdG8gYWpheFNldHRpbmdzIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5KQpqUXVlcnkuYWpheFNldHRpbmdzLnhociA9IHdpbmRvdy5BY3RpdmVYT2JqZWN0ID8KCS8qIE1pY3Jvc29mdCBmYWlsZWQgdG8gcHJvcGVybHkKCSAqIGltcGxlbWVudCB0aGUgWE1MSHR0cFJlcXVlc3QgaW4gSUU3IChjYW4ndCByZXF1ZXN0IGxvY2FsIGZpbGVzKSwKCSAqIHNvIHdlIHVzZSB0aGUgQWN0aXZlWE9iamVjdCB3aGVuIGl0IGlzIGF2YWlsYWJsZQoJICogQWRkaXRpb25hbGx5IFhNTEh0dHBSZXF1ZXN0IGNhbiBiZSBkaXNhYmxlZCBpbiBJRTcvSUU4IHNvCgkgKiB3ZSBuZWVkIGEgZmFsbGJhY2suCgkgKi8KCWZ1bmN0aW9uKCkgewoJCXJldHVybiAhdGhpcy5pc0xvY2FsICYmIGNyZWF0ZVN0YW5kYXJkWEhSKCkgfHwgY3JlYXRlQWN0aXZlWEhSKCk7Cgl9IDoKCS8vIEZvciBhbGwgb3RoZXIgYnJvd3NlcnMsIHVzZSB0aGUgc3RhbmRhcmQgWE1MSHR0cFJlcXVlc3Qgb2JqZWN0CgljcmVhdGVTdGFuZGFyZFhIUjsKCi8vIERldGVybWluZSBzdXBwb3J0IHByb3BlcnRpZXMKKGZ1bmN0aW9uKCB4aHIgKSB7CglqUXVlcnkuZXh0ZW5kKCBqUXVlcnkuc3VwcG9ydCwgewoJCWFqYXg6ICEheGhyLAoJCWNvcnM6ICEheGhyICYmICggIndpdGhDcmVkZW50aWFscyIgaW4geGhyICkKCX0pOwp9KSggalF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKSApOwoKLy8gQ3JlYXRlIHRyYW5zcG9ydCBpZiB0aGUgYnJvd3NlciBjYW4gcHJvdmlkZSBhbiB4aHIKaWYgKCBqUXVlcnkuc3VwcG9ydC5hamF4ICkgewoKCWpRdWVyeS5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKCBzICkgewoJCS8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3QKCQlpZiAoICFzLmNyb3NzRG9tYWluIHx8IGpRdWVyeS5zdXBwb3J0LmNvcnMgKSB7CgoJCQl2YXIgY2FsbGJhY2s7CgoJCQlyZXR1cm4gewoJCQkJc2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRlICkgewoKCQkJCQkvLyBHZXQgYSBuZXcgeGhyCgkJCQkJdmFyIHhociA9IHMueGhyKCksCgkJCQkJCWhhbmRsZSwKCQkJCQkJaTsKCgkJCQkJLy8gT3BlbiB0aGUgc29ja2V0CgkJCQkJLy8gUGFzc2luZyBudWxsIHVzZXJuYW1lLCBnZW5lcmF0ZXMgYSBsb2dpbiBwb3B1cCBvbiBPcGVyYSAoIzI4NjUpCgkJCQkJaWYgKCBzLnVzZXJuYW1lICkgewoJCQkJCQl4aHIub3Blbiggcy50eXBlLCBzLnVybCwgcy5hc3luYywgcy51c2VybmFtZSwgcy5wYXNzd29yZCApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXhoci5vcGVuKCBzLnR5cGUsIHMudXJsLCBzLmFzeW5jICk7CgkJCQkJfQoKCQkJCQkvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkCgkJCQkJaWYgKCBzLnhockZpZWxkcyApIHsKCQkJCQkJZm9yICggaSBpbiBzLnhockZpZWxkcyApIHsKCQkJCQkJCXhoclsgaSBdID0gcy54aHJGaWVsZHNbIGkgXTsKCQkJCQkJfQoJCQkJCX0KCgkJCQkJLy8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZAoJCQkJCWlmICggcy5taW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHsKCQkJCQkJeGhyLm92ZXJyaWRlTWltZVR5cGUoIHMubWltZVR5cGUgKTsKCQkJCQl9CgoJCQkJCS8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyCgkJCQkJLy8gRm9yIGNyb3NzLWRvbWFpbiByZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFyZQoJCQkJCS8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuCgkJCQkJLy8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApCgkJCQkJLy8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFuZ2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuCgkJCQkJaWYgKCAhcy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1siWC1SZXF1ZXN0ZWQtV2l0aCJdICkgewoJCQkJCQloZWFkZXJzWyAiWC1SZXF1ZXN0ZWQtV2l0aCIgXSA9ICJYTUxIdHRwUmVxdWVzdCI7CgkJCQkJfQoKCQkJCQkvLyBOZWVkIGFuIGV4dHJhIHRyeS9jYXRjaCBmb3IgY3Jvc3MgZG9tYWluIHJlcXVlc3RzIGluIEZpcmVmb3ggMwoJCQkJCXRyeSB7CgkJCQkJCWZvciAoIGkgaW4gaGVhZGVycyApIHsKCQkJCQkJCXhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTsKCQkJCQkJfQoJCQkJCX0gY2F0Y2goIF8gKSB7fQoKCQkJCQkvLyBEbyBzZW5kIHRoZSByZXF1ZXN0CgkJCQkJLy8gVGhpcyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uIHdoaWNoIGlzIGFjdHVhbGx5CgkJCQkJLy8gaGFuZGxlZCBpbiBqUXVlcnkuYWpheCAoc28gbm8gdHJ5L2NhdGNoIGhlcmUpCgkJCQkJeGhyLnNlbmQoICggcy5oYXNDb250ZW50ICYmIHMuZGF0YSApIHx8IG51bGwgKTsKCgkJCQkJLy8gTGlzdGVuZXIKCQkJCQljYWxsYmFjayA9IGZ1bmN0aW9uKCBfLCBpc0Fib3J0ICkgewoKCQkJCQkJdmFyIHN0YXR1cywKCQkJCQkJCXN0YXR1c1RleHQsCgkJCQkJCQlyZXNwb25zZUhlYWRlcnMsCgkJCQkJCQlyZXNwb25zZXMsCgkJCQkJCQl4bWw7CgoJCQkJCQkvLyBGaXJlZm94IHRocm93cyBleGNlcHRpb25zIHdoZW4gYWNjZXNzaW5nIHByb3BlcnRpZXMKCQkJCQkJLy8gb2YgYW4geGhyIHdoZW4gYSBuZXR3b3JrIGVycm9yIG9jY3VyZWQKCQkJCQkJLy8gaHR0cDovL2hlbHBmdWwua25vYnMtZGlhbHMuY29tL2luZGV4LnBocC9Db21wb25lbnRfcmV0dXJuZWRfZmFpbHVyZV9jb2RlOl8weDgwMDQwMTExXyhOU19FUlJPUl9OT1RfQVZBSUxBQkxFKQoJCQkJCQl0cnkgewoKCQkJCQkJCS8vIFdhcyBuZXZlciBjYWxsZWQgYW5kIGlzIGFib3J0ZWQgb3IgY29tcGxldGUKCQkJCQkJCWlmICggY2FsbGJhY2sgJiYgKCBpc0Fib3J0IHx8IHhoci5yZWFkeVN0YXRlID09PSA0ICkgKSB7CgoJCQkJCQkJCS8vIE9ubHkgY2FsbGVkIG9uY2UKCQkJCQkJCQljYWxsYmFjayA9IHVuZGVmaW5lZDsKCgkJCQkJCQkJLy8gRG8gbm90IGtlZXAgYXMgYWN0aXZlIGFueW1vcmUKCQkJCQkJCQlpZiAoIGhhbmRsZSApIHsKCQkJCQkJCQkJeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGpRdWVyeS5ub29wOwoJCQkJCQkJCQlpZiAoIHhock9uVW5sb2FkQWJvcnQgKSB7CgkJCQkJCQkJCQlkZWxldGUgeGhyQ2FsbGJhY2tzWyBoYW5kbGUgXTsKCQkJCQkJCQkJfQoJCQkJCQkJCX0KCgkJCQkJCQkJLy8gSWYgaXQncyBhbiBhYm9ydAoJCQkJCQkJCWlmICggaXNBYm9ydCApIHsKCQkJCQkJCQkJLy8gQWJvcnQgaXQgbWFudWFsbHkgaWYgbmVlZGVkCgkJCQkJCQkJCWlmICggeGhyLnJlYWR5U3RhdGUgIT09IDQgKSB7CgkJCQkJCQkJCQl4aHIuYWJvcnQoKTsKCQkJCQkJCQkJfQoJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJCXN0YXR1cyA9IHhoci5zdGF0dXM7CgkJCQkJCQkJCXJlc3BvbnNlSGVhZGVycyA9IHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKTsKCQkJCQkJCQkJcmVzcG9uc2VzID0ge307CgkJCQkJCQkJCXhtbCA9IHhoci5yZXNwb25zZVhNTDsKCgkJCQkJCQkJCS8vIENvbnN0cnVjdCByZXNwb25zZSBsaXN0CgkJCQkJCQkJCWlmICggeG1sICYmIHhtbC5kb2N1bWVudEVsZW1lbnQgLyogIzQ5NTggKi8gKSB7CgkJCQkJCQkJCQlyZXNwb25zZXMueG1sID0geG1sOwoJCQkJCQkJCQl9CgoJCQkJCQkJCQkvLyBXaGVuIHJlcXVlc3RpbmcgYmluYXJ5IGRhdGEsIElFNi05IHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uCgkJCQkJCQkJCS8vIG9uIGFueSBhdHRlbXB0IHRvIGFjY2VzcyByZXNwb25zZVRleHQgKCMxMTQyNikKCQkJCQkJCQkJdHJ5IHsKCQkJCQkJCQkJCXJlc3BvbnNlcy50ZXh0ID0geGhyLnJlc3BvbnNlVGV4dDsKCQkJCQkJCQkJfSBjYXRjaCggXyApIHsKCQkJCQkJCQkJfQoKCQkJCQkJCQkJLy8gRmlyZWZveCB0aHJvd3MgYW4gZXhjZXB0aW9uIHdoZW4gYWNjZXNzaW5nCgkJCQkJCQkJCS8vIHN0YXR1c1RleHQgZm9yIGZhdWx0eSBjcm9zcy1kb21haW4gcmVxdWVzdHMKCQkJCQkJCQkJdHJ5IHsKCQkJCQkJCQkJCXN0YXR1c1RleHQgPSB4aHIuc3RhdHVzVGV4dDsKCQkJCQkJCQkJfSBjYXRjaCggZSApIHsKCQkJCQkJCQkJCS8vIFdlIG5vcm1hbGl6ZSB3aXRoIFdlYmtpdCBnaXZpbmcgYW4gZW1wdHkgc3RhdHVzVGV4dAoJCQkJCQkJCQkJc3RhdHVzVGV4dCA9ICIiOwoJCQkJCQkJCQl9CgoJCQkJCQkJCQkvLyBGaWx0ZXIgc3RhdHVzIGZvciBub24gc3RhbmRhcmQgYmVoYXZpb3JzCgoJCQkJCQkJCQkvLyBJZiB0aGUgcmVxdWVzdCBpcyBsb2NhbCBhbmQgd2UgaGF2ZSBkYXRhOiBhc3N1bWUgYSBzdWNjZXNzCgkJCQkJCQkJCS8vIChzdWNjZXNzIHdpdGggbm8gZGF0YSB3b24ndCBnZXQgbm90aWZpZWQsIHRoYXQncyB0aGUgYmVzdCB3ZQoJCQkJCQkJCQkvLyBjYW4gZG8gZ2l2ZW4gY3VycmVudCBpbXBsZW1lbnRhdGlvbnMpCgkJCQkJCQkJCWlmICggIXN0YXR1cyAmJiBzLmlzTG9jYWwgJiYgIXMuY3Jvc3NEb21haW4gKSB7CgkJCQkJCQkJCQlzdGF0dXMgPSByZXNwb25zZXMudGV4dCA/IDIwMCA6IDQwNDsKCQkJCQkJCQkJLy8gSUUgLSAjMTQ1MDogc29tZXRpbWVzIHJldHVybnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDQKCQkJCQkJCQkJfSBlbHNlIGlmICggc3RhdHVzID09PSAxMjIzICkgewoJCQkJCQkJCQkJc3RhdHVzID0gMjA0OwoJCQkJCQkJCQl9CgkJCQkJCQkJfQoJCQkJCQkJfQoJCQkJCQl9IGNhdGNoKCBmaXJlZm94QWNjZXNzRXhjZXB0aW9uICkgewoJCQkJCQkJaWYgKCAhaXNBYm9ydCApIHsKCQkJCQkJCQljb21wbGV0ZSggLTEsIGZpcmVmb3hBY2Nlc3NFeGNlcHRpb24gKTsKCQkJCQkJCX0KCQkJCQkJfQoKCQkJCQkJLy8gQ2FsbCBjb21wbGV0ZSBpZiBuZWVkZWQKCQkJCQkJaWYgKCByZXNwb25zZXMgKSB7CgkJCQkJCQljb21wbGV0ZSggc3RhdHVzLCBzdGF0dXNUZXh0LCByZXNwb25zZXMsIHJlc3BvbnNlSGVhZGVycyApOwoJCQkJCQl9CgkJCQkJfTsKCgkJCQkJLy8gaWYgd2UncmUgaW4gc3luYyBtb2RlIG9yIGl0J3MgaW4gY2FjaGUKCQkJCQkvLyBhbmQgaGFzIGJlZW4gcmV0cmlldmVkIGRpcmVjdGx5IChJRTYgJiBJRTcpCgkJCQkJLy8gd2UgbmVlZCB0byBtYW51YWxseSBmaXJlIHRoZSBjYWxsYmFjawoJCQkJCWlmICggIXMuYXN5bmMgfHwgeGhyLnJlYWR5U3RhdGUgPT09IDQgKSB7CgkJCQkJCWNhbGxiYWNrKCk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJaGFuZGxlID0gKyt4aHJJZDsKCQkJCQkJaWYgKCB4aHJPblVubG9hZEFib3J0ICkgewoJCQkJCQkJLy8gQ3JlYXRlIHRoZSBhY3RpdmUgeGhycyBjYWxsYmFja3MgbGlzdCBpZiBuZWVkZWQKCQkJCQkJCS8vIGFuZCBhdHRhY2ggdGhlIHVubG9hZCBoYW5kbGVyCgkJCQkJCQlpZiAoICF4aHJDYWxsYmFja3MgKSB7CgkJCQkJCQkJeGhyQ2FsbGJhY2tzID0ge307CgkJCQkJCQkJalF1ZXJ5KCB3aW5kb3cgKS51bmxvYWQoIHhock9uVW5sb2FkQWJvcnQgKTsKCQkJCQkJCX0KCQkJCQkJCS8vIEFkZCB0byBsaXN0IG9mIGFjdGl2ZSB4aHJzIGNhbGxiYWNrcwoJCQkJCQkJeGhyQ2FsbGJhY2tzWyBoYW5kbGUgXSA9IGNhbGxiYWNrOwoJCQkJCQl9CgkJCQkJCXhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBjYWxsYmFjazsKCQkJCQl9CgkJCQl9LAoKCQkJCWFib3J0OiBmdW5jdGlvbigpIHsKCQkJCQlpZiAoIGNhbGxiYWNrICkgewoJCQkJCQljYWxsYmFjaygwLDEpOwoJCQkJCX0KCQkJCX0KCQkJfTsKCQl9Cgl9KTsKfQoKCgoKdmFyIGVsZW1kaXNwbGF5ID0ge30sCglpZnJhbWUsIGlmcmFtZURvYywKCXJmeHR5cGVzID0gL14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLAoJcmZ4bnVtID0gL14oWytcLV09KT8oW1xkKy5cLV0rKShbYS16JV0qKSQvaSwKCXRpbWVySWQsCglmeEF0dHJzID0gWwoJCS8vIGhlaWdodCBhbmltYXRpb25zCgkJWyAiaGVpZ2h0IiwgIm1hcmdpblRvcCIsICJtYXJnaW5Cb3R0b20iLCAicGFkZGluZ1RvcCIsICJwYWRkaW5nQm90dG9tIiBdLAoJCS8vIHdpZHRoIGFuaW1hdGlvbnMKCQlbICJ3aWR0aCIsICJtYXJnaW5MZWZ0IiwgIm1hcmdpblJpZ2h0IiwgInBhZGRpbmdMZWZ0IiwgInBhZGRpbmdSaWdodCIgXSwKCQkvLyBvcGFjaXR5IGFuaW1hdGlvbnMKCQlbICJvcGFjaXR5IiBdCgldLAoJZnhOb3c7CgpqUXVlcnkuZm4uZXh0ZW5kKHsKCXNob3c6IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQl2YXIgZWxlbSwgZGlzcGxheTsKCgkJaWYgKCBzcGVlZCB8fCBzcGVlZCA9PT0gMCApIHsKCQkJcmV0dXJuIHRoaXMuYW5pbWF0ZSggZ2VuRngoInNob3ciLCAzKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTsKCgkJfSBlbHNlIHsKCQkJZm9yICggdmFyIGkgPSAwLCBqID0gdGhpcy5sZW5ndGg7IGkgPCBqOyBpKysgKSB7CgkJCQllbGVtID0gdGhpc1sgaSBdOwoKCQkJCWlmICggZWxlbS5zdHlsZSApIHsKCQkJCQlkaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5OwoKCQkJCQkvLyBSZXNldCB0aGUgaW5saW5lIGRpc3BsYXkgb2YgdGhpcyBlbGVtZW50IHRvIGxlYXJuIGlmIGl0IGlzCgkJCQkJLy8gYmVpbmcgaGlkZGVuIGJ5IGNhc2NhZGVkIHJ1bGVzIG9yIG5vdAoJCQkJCWlmICggIWpRdWVyeS5fZGF0YShlbGVtLCAib2xkZGlzcGxheSIpICYmIGRpc3BsYXkgPT09ICJub25lIiApIHsKCQkJCQkJZGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheSA9ICIiOwoJCQkJCX0KCgkJCQkJLy8gU2V0IGVsZW1lbnRzIHdoaWNoIGhhdmUgYmVlbiBvdmVycmlkZGVuIHdpdGggZGlzcGxheTogbm9uZQoJCQkJCS8vIGluIGEgc3R5bGVzaGVldCB0byB3aGF0ZXZlciB0aGUgZGVmYXVsdCBicm93c2VyIHN0eWxlIGlzCgkJCQkJLy8gZm9yIHN1Y2ggYW4gZWxlbWVudAoJCQkJCWlmICggKGRpc3BsYXkgPT09ICIiICYmIGpRdWVyeS5jc3MoZWxlbSwgImRpc3BsYXkiKSA9PT0gIm5vbmUiKSB8fAoJCQkJCQkhalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCBlbGVtICkgKSB7CgkJCQkJCWpRdWVyeS5fZGF0YSggZWxlbSwgIm9sZGRpc3BsYXkiLCBkZWZhdWx0RGlzcGxheShlbGVtLm5vZGVOYW1lKSApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gU2V0IHRoZSBkaXNwbGF5IG9mIG1vc3Qgb2YgdGhlIGVsZW1lbnRzIGluIGEgc2Vjb25kIGxvb3AKCQkJLy8gdG8gYXZvaWQgdGhlIGNvbnN0YW50IHJlZmxvdwoJCQlmb3IgKCBpID0gMDsgaSA8IGo7IGkrKyApIHsKCQkJCWVsZW0gPSB0aGlzWyBpIF07CgoJCQkJaWYgKCBlbGVtLnN0eWxlICkgewoJCQkJCWRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7CgoJCQkJCWlmICggZGlzcGxheSA9PT0gIiIgfHwgZGlzcGxheSA9PT0gIm5vbmUiICkgewoJCQkJCQllbGVtLnN0eWxlLmRpc3BsYXkgPSBqUXVlcnkuX2RhdGEoIGVsZW0sICJvbGRkaXNwbGF5IiApIHx8ICIiOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJcmV0dXJuIHRoaXM7CgkJfQoJfSwKCgloaWRlOiBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7CgkJaWYgKCBzcGVlZCB8fCBzcGVlZCA9PT0gMCApIHsKCQkJcmV0dXJuIHRoaXMuYW5pbWF0ZSggZ2VuRngoImhpZGUiLCAzKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2spOwoKCQl9IGVsc2UgewoJCQl2YXIgZWxlbSwgZGlzcGxheSwKCQkJCWkgPSAwLAoJCQkJaiA9IHRoaXMubGVuZ3RoOwoKCQkJZm9yICggOyBpIDwgajsgaSsrICkgewoJCQkJZWxlbSA9IHRoaXNbaV07CgkJCQlpZiAoIGVsZW0uc3R5bGUgKSB7CgkJCQkJZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sICJkaXNwbGF5IiApOwoKCQkJCQlpZiAoIGRpc3BsYXkgIT09ICJub25lIiAmJiAhalF1ZXJ5Ll9kYXRhKCBlbGVtLCAib2xkZGlzcGxheSIgKSApIHsKCQkJCQkJalF1ZXJ5Ll9kYXRhKCBlbGVtLCAib2xkZGlzcGxheSIsIGRpc3BsYXkgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCgkJCS8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcAoJCQkvLyB0byBhdm9pZCB0aGUgY29uc3RhbnQgcmVmbG93CgkJCWZvciAoIGkgPSAwOyBpIDwgajsgaSsrICkgewoJCQkJaWYgKCB0aGlzW2ldLnN0eWxlICkgewoJCQkJCXRoaXNbaV0uc3R5bGUuZGlzcGxheSA9ICJub25lIjsKCQkJCX0KCQkJfQoKCQkJcmV0dXJuIHRoaXM7CgkJfQoJfSwKCgkvLyBTYXZlIHRoZSBvbGQgdG9nZ2xlIGZ1bmN0aW9uCglfdG9nZ2xlOiBqUXVlcnkuZm4udG9nZ2xlLAoKCXRvZ2dsZTogZnVuY3Rpb24oIGZuLCBmbjIsIGNhbGxiYWNrICkgewoJCXZhciBib29sID0gdHlwZW9mIGZuID09PSAiYm9vbGVhbiI7CgoJCWlmICggalF1ZXJ5LmlzRnVuY3Rpb24oZm4pICYmIGpRdWVyeS5pc0Z1bmN0aW9uKGZuMikgKSB7CgkJCXRoaXMuX3RvZ2dsZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgoJCX0gZWxzZSBpZiAoIGZuID09IG51bGwgfHwgYm9vbCApIHsKCQkJdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJCQkJdmFyIHN0YXRlID0gYm9vbCA/IGZuIDogalF1ZXJ5KHRoaXMpLmlzKCI6aGlkZGVuIik7CgkJCQlqUXVlcnkodGhpcylbIHN0YXRlID8gInNob3ciIDogImhpZGUiIF0oKTsKCQkJfSk7CgoJCX0gZWxzZSB7CgkJCXRoaXMuYW5pbWF0ZShnZW5GeCgidG9nZ2xlIiwgMyksIGZuLCBmbjIsIGNhbGxiYWNrKTsKCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCglmYWRlVG86IGZ1bmN0aW9uKCBzcGVlZCwgdG8sIGVhc2luZywgY2FsbGJhY2sgKSB7CgkJcmV0dXJuIHRoaXMuZmlsdGVyKCI6aGlkZGVuIikuY3NzKCJvcGFjaXR5IiwgMCkuc2hvdygpLmVuZCgpCgkJCQkJLmFuaW1hdGUoe29wYWNpdHk6IHRvfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2spOwoJfSwKCglhbmltYXRlOiBmdW5jdGlvbiggcHJvcCwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7CgkJdmFyIG9wdGFsbCA9IGpRdWVyeS5zcGVlZCggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTsKCgkJaWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApICkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKCBvcHRhbGwuY29tcGxldGUsIFsgZmFsc2UgXSApOwoJCX0KCgkJLy8gRG8gbm90IGNoYW5nZSByZWZlcmVuY2VkIHByb3BlcnRpZXMgYXMgcGVyLXByb3BlcnR5IGVhc2luZyB3aWxsIGJlIGxvc3QKCQlwcm9wID0galF1ZXJ5LmV4dGVuZCgge30sIHByb3AgKTsKCgkJZnVuY3Rpb24gZG9BbmltYXRpb24oKSB7CgkJCS8vIFhYWCAndGhpcycgZG9lcyBub3QgYWx3YXlzIGhhdmUgYSBub2RlTmFtZSB3aGVuIHJ1bm5pbmcgdGhlCgkJCS8vIHRlc3Qgc3VpdGUKCgkJCWlmICggb3B0YWxsLnF1ZXVlID09PSBmYWxzZSApIHsKCQkJCWpRdWVyeS5fbWFyayggdGhpcyApOwoJCQl9CgoJCQl2YXIgb3B0ID0galF1ZXJ5LmV4dGVuZCgge30sIG9wdGFsbCApLAoJCQkJaXNFbGVtZW50ID0gdGhpcy5ub2RlVHlwZSA9PT0gMSwKCQkJCWhpZGRlbiA9IGlzRWxlbWVudCAmJiBqUXVlcnkodGhpcykuaXMoIjpoaWRkZW4iKSwKCQkJCW5hbWUsIHZhbCwgcCwgZSwgaG9va3MsIHJlcGxhY2UsCgkJCQlwYXJ0cywgc3RhcnQsIGVuZCwgdW5pdCwKCQkJCW1ldGhvZDsKCgkJCS8vIHdpbGwgc3RvcmUgcGVyIHByb3BlcnR5IGVhc2luZyBhbmQgYmUgdXNlZCB0byBkZXRlcm1pbmUgd2hlbiBhbiBhbmltYXRpb24gaXMgY29tcGxldGUKCQkJb3B0LmFuaW1hdGVkUHJvcGVydGllcyA9IHt9OwoKCQkJLy8gZmlyc3QgcGFzcyBvdmVyIHByb3BlcnR5cyB0byBleHBhbmQgLyBub3JtYWxpemUKCQkJZm9yICggcCBpbiBwcm9wICkgewoJCQkJbmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIHAgKTsKCQkJCWlmICggcCAhPT0gbmFtZSApIHsKCQkJCQlwcm9wWyBuYW1lIF0gPSBwcm9wWyBwIF07CgkJCQkJZGVsZXRlIHByb3BbIHAgXTsKCQkJCX0KCgkJCQlpZiAoICggaG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSApICYmICJleHBhbmQiIGluIGhvb2tzICkgewoJCQkJCXJlcGxhY2UgPSBob29rcy5leHBhbmQoIHByb3BbIG5hbWUgXSApOwoJCQkJCWRlbGV0ZSBwcm9wWyBuYW1lIF07CgoJCQkJCS8vIG5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b250IG92ZXJ3cml0ZSBrZXlzIGFscmVhZHkgcHJlc2VudC4KCQkJCQkvLyBhbHNvIC0gcmV1c2luZyAncCcgZnJvbSBhYm92ZSBiZWNhdXNlIHdlIGhhdmUgdGhlIGNvcnJlY3QgIm5hbWUiCgkJCQkJZm9yICggcCBpbiByZXBsYWNlICkgewoJCQkJCQlpZiAoICEgKCBwIGluIHByb3AgKSApIHsKCQkJCQkJCXByb3BbIHAgXSA9IHJlcGxhY2VbIHAgXTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJZm9yICggbmFtZSBpbiBwcm9wICkgewoJCQkJdmFsID0gcHJvcFsgbmFtZSBdOwoJCQkJLy8gZWFzaW5nIHJlc29sdXRpb246IHBlciBwcm9wZXJ0eSA+IG9wdC5zcGVjaWFsRWFzaW5nID4gb3B0LmVhc2luZyA+ICdzd2luZycgKGRlZmF1bHQpCgkJCQlpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWwgKSApIHsKCQkJCQlvcHQuYW5pbWF0ZWRQcm9wZXJ0aWVzWyBuYW1lIF0gPSB2YWxbIDEgXTsKCQkJCQl2YWwgPSBwcm9wWyBuYW1lIF0gPSB2YWxbIDAgXTsKCQkJCX0gZWxzZSB7CgkJCQkJb3B0LmFuaW1hdGVkUHJvcGVydGllc1sgbmFtZSBdID0gb3B0LnNwZWNpYWxFYXNpbmcgJiYgb3B0LnNwZWNpYWxFYXNpbmdbIG5hbWUgXSB8fCBvcHQuZWFzaW5nIHx8ICdzd2luZyc7CgkJCQl9CgoJCQkJaWYgKCB2YWwgPT09ICJoaWRlIiAmJiBoaWRkZW4gfHwgdmFsID09PSAic2hvdyIgJiYgIWhpZGRlbiApIHsKCQkJCQlyZXR1cm4gb3B0LmNvbXBsZXRlLmNhbGwoIHRoaXMgKTsKCQkJCX0KCgkJCQlpZiAoIGlzRWxlbWVudCAmJiAoIG5hbWUgPT09ICJoZWlnaHQiIHx8IG5hbWUgPT09ICJ3aWR0aCIgKSApIHsKCQkJCQkvLyBNYWtlIHN1cmUgdGhhdCBub3RoaW5nIHNuZWFrcyBvdXQKCQkJCQkvLyBSZWNvcmQgYWxsIDMgb3ZlcmZsb3cgYXR0cmlidXRlcyBiZWNhdXNlIElFIGRvZXMgbm90CgkJCQkJLy8gY2hhbmdlIHRoZSBvdmVyZmxvdyBhdHRyaWJ1dGUgd2hlbiBvdmVyZmxvd1ggYW5kCgkJCQkJLy8gb3ZlcmZsb3dZIGFyZSBzZXQgdG8gdGhlIHNhbWUgdmFsdWUKCQkJCQlvcHQub3ZlcmZsb3cgPSBbIHRoaXMuc3R5bGUub3ZlcmZsb3csIHRoaXMuc3R5bGUub3ZlcmZsb3dYLCB0aGlzLnN0eWxlLm92ZXJmbG93WSBdOwoKCQkJCQkvLyBTZXQgZGlzcGxheSBwcm9wZXJ0eSB0byBpbmxpbmUtYmxvY2sgZm9yIGhlaWdodC93aWR0aAoJCQkJCS8vIGFuaW1hdGlvbnMgb24gaW5saW5lIGVsZW1lbnRzIHRoYXQgYXJlIGhhdmluZyB3aWR0aC9oZWlnaHQgYW5pbWF0ZWQKCQkJCQlpZiAoIGpRdWVyeS5jc3MoIHRoaXMsICJkaXNwbGF5IiApID09PSAiaW5saW5lIiAmJgoJCQkJCQkJalF1ZXJ5LmNzcyggdGhpcywgImZsb2F0IiApID09PSAibm9uZSIgKSB7CgoJCQkJCQkvLyBpbmxpbmUtbGV2ZWwgZWxlbWVudHMgYWNjZXB0IGlubGluZS1ibG9jazsKCQkJCQkJLy8gYmxvY2stbGV2ZWwgZWxlbWVudHMgbmVlZCB0byBiZSBpbmxpbmUgd2l0aCBsYXlvdXQKCQkJCQkJaWYgKCAhalF1ZXJ5LnN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dCB8fCBkZWZhdWx0RGlzcGxheSggdGhpcy5ub2RlTmFtZSApID09PSAiaW5saW5lIiApIHsKCQkJCQkJCXRoaXMuc3R5bGUuZGlzcGxheSA9ICJpbmxpbmUtYmxvY2siOwoKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCXRoaXMuc3R5bGUuem9vbSA9IDE7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCWlmICggb3B0Lm92ZXJmbG93ICE9IG51bGwgKSB7CgkJCQl0aGlzLnN0eWxlLm92ZXJmbG93ID0gImhpZGRlbiI7CgkJCX0KCgkJCWZvciAoIHAgaW4gcHJvcCApIHsKCQkJCWUgPSBuZXcgalF1ZXJ5LmZ4KCB0aGlzLCBvcHQsIHAgKTsKCQkJCXZhbCA9IHByb3BbIHAgXTsKCgkJCQlpZiAoIHJmeHR5cGVzLnRlc3QoIHZhbCApICkgewoKCQkJCQkvLyBUcmFja3Mgd2hldGhlciB0byBzaG93IG9yIGhpZGUgYmFzZWQgb24gcHJpdmF0ZQoJCQkJCS8vIGRhdGEgYXR0YWNoZWQgdG8gdGhlIGVsZW1lbnQKCQkJCQltZXRob2QgPSBqUXVlcnkuX2RhdGEoIHRoaXMsICJ0b2dnbGUiICsgcCApIHx8ICggdmFsID09PSAidG9nZ2xlIiA/IGhpZGRlbiA/ICJzaG93IiA6ICJoaWRlIiA6IDAgKTsKCQkJCQlpZiAoIG1ldGhvZCApIHsKCQkJCQkJalF1ZXJ5Ll9kYXRhKCB0aGlzLCAidG9nZ2xlIiArIHAsIG1ldGhvZCA9PT0gInNob3ciID8gImhpZGUiIDogInNob3ciICk7CgkJCQkJCWVbIG1ldGhvZCBdKCk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJZVsgdmFsIF0oKTsKCQkJCQl9CgoJCQkJfSBlbHNlIHsKCQkJCQlwYXJ0cyA9IHJmeG51bS5leGVjKCB2YWwgKTsKCQkJCQlzdGFydCA9IGUuY3VyKCk7CgoJCQkJCWlmICggcGFydHMgKSB7CgkJCQkJCWVuZCA9IHBhcnNlRmxvYXQoIHBhcnRzWzJdICk7CgkJCQkJCXVuaXQgPSBwYXJ0c1szXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHAgXSA/ICIiIDogInB4IiApOwoKCQkJCQkJLy8gV2UgbmVlZCB0byBjb21wdXRlIHN0YXJ0aW5nIHZhbHVlCgkJCQkJCWlmICggdW5pdCAhPT0gInB4IiApIHsKCQkJCQkJCWpRdWVyeS5zdHlsZSggdGhpcywgcCwgKGVuZCB8fCAxKSArIHVuaXQpOwoJCQkJCQkJc3RhcnQgPSAoIChlbmQgfHwgMSkgLyBlLmN1cigpICkgKiBzdGFydDsKCQkJCQkJCWpRdWVyeS5zdHlsZSggdGhpcywgcCwgc3RhcnQgKyB1bml0KTsKCQkJCQkJfQoKCQkJCQkJLy8gSWYgYSArPS8tPSB0b2tlbiB3YXMgcHJvdmlkZWQsIHdlJ3JlIGRvaW5nIGEgcmVsYXRpdmUgYW5pbWF0aW9uCgkJCQkJCWlmICggcGFydHNbMV0gKSB7CgkJCQkJCQllbmQgPSAoIChwYXJ0c1sgMSBdID09PSAiLT0iID8gLTEgOiAxKSAqIGVuZCApICsgc3RhcnQ7CgkJCQkJCX0KCgkJCQkJCWUuY3VzdG9tKCBzdGFydCwgZW5kLCB1bml0ICk7CgoJCQkJCX0gZWxzZSB7CgkJCQkJCWUuY3VzdG9tKCBzdGFydCwgdmFsLCAiIiApOwoJCQkJCX0KCQkJCX0KCQkJfQoKCQkJLy8gRm9yIEpTIHN0cmljdCBjb21wbGlhbmNlCgkJCXJldHVybiB0cnVlOwoJCX0KCgkJcmV0dXJuIG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgPwoJCQl0aGlzLmVhY2goIGRvQW5pbWF0aW9uICkgOgoJCQl0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7Cgl9LAoKCXN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkgewoJCWlmICggdHlwZW9mIHR5cGUgIT09ICJzdHJpbmciICkgewoJCQlnb3RvRW5kID0gY2xlYXJRdWV1ZTsKCQkJY2xlYXJRdWV1ZSA9IHR5cGU7CgkJCXR5cGUgPSB1bmRlZmluZWQ7CgkJfQoJCWlmICggY2xlYXJRdWV1ZSAmJiB0eXBlICE9PSBmYWxzZSApIHsKCQkJdGhpcy5xdWV1ZSggdHlwZSB8fCAiZngiLCBbXSApOwoJCX0KCgkJcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHsKCQkJdmFyIGluZGV4LAoJCQkJaGFkVGltZXJzID0gZmFsc2UsCgkJCQl0aW1lcnMgPSBqUXVlcnkudGltZXJzLAoJCQkJZGF0YSA9IGpRdWVyeS5fZGF0YSggdGhpcyApOwoKCQkJLy8gY2xlYXIgbWFya2VyIGNvdW50ZXJzIGlmIHdlIGtub3cgdGhleSB3b24ndCBiZQoJCQlpZiAoICFnb3RvRW5kICkgewoJCQkJalF1ZXJ5Ll91bm1hcmsoIHRydWUsIHRoaXMgKTsKCQkJfQoKCQkJZnVuY3Rpb24gc3RvcFF1ZXVlKCBlbGVtLCBkYXRhLCBpbmRleCApIHsKCQkJCXZhciBob29rcyA9IGRhdGFbIGluZGV4IF07CgkJCQlqUXVlcnkucmVtb3ZlRGF0YSggZWxlbSwgaW5kZXgsIHRydWUgKTsKCQkJCWhvb2tzLnN0b3AoIGdvdG9FbmQgKTsKCQkJfQoKCQkJaWYgKCB0eXBlID09IG51bGwgKSB7CgkJCQlmb3IgKCBpbmRleCBpbiBkYXRhICkgewoJCQkJCWlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgJiYgaW5kZXguaW5kZXhPZigiLnJ1biIpID09PSBpbmRleC5sZW5ndGggLSA0ICkgewoJCQkJCQlzdG9wUXVldWUoIHRoaXMsIGRhdGEsIGluZGV4ICk7CgkJCQkJfQoJCQkJfQoJCQl9IGVsc2UgaWYgKCBkYXRhWyBpbmRleCA9IHR5cGUgKyAiLnJ1biIgXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKXsKCQkJCXN0b3BRdWV1ZSggdGhpcywgZGF0YSwgaW5kZXggKTsKCQkJfQoKCQkJZm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHsKCQkJCWlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgKHR5cGUgPT0gbnVsbCB8fCB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUpICkgewoJCQkJCWlmICggZ290b0VuZCApIHsKCgkJCQkJCS8vIGZvcmNlIHRoZSBuZXh0IHN0ZXAgdG8gYmUgdGhlIGxhc3QKCQkJCQkJdGltZXJzWyBpbmRleCBdKCB0cnVlICk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJdGltZXJzWyBpbmRleCBdLnNhdmVTdGF0ZSgpOwoJCQkJCX0KCQkJCQloYWRUaW1lcnMgPSB0cnVlOwoJCQkJCXRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7CgkJCQl9CgkJCX0KCgkJCS8vIHN0YXJ0IHRoZSBuZXh0IGluIHRoZSBxdWV1ZSBpZiB0aGUgbGFzdCBzdGVwIHdhc24ndCBmb3JjZWQKCQkJLy8gdGltZXJzIGN1cnJlbnRseSB3aWxsIGNhbGwgdGhlaXIgY29tcGxldGUgY2FsbGJhY2tzLCB3aGljaCB3aWxsIGRlcXVldWUKCQkJLy8gYnV0IG9ubHkgaWYgdGhleSB3ZXJlIGdvdG9FbmQKCQkJaWYgKCAhKCBnb3RvRW5kICYmIGhhZFRpbWVycyApICkgewoJCQkJalF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTsKCQkJfQoJCX0pOwoJfQoKfSk7CgovLyBBbmltYXRpb25zIGNyZWF0ZWQgc3luY2hyb25vdXNseSB3aWxsIHJ1biBzeW5jaHJvbm91c2x5CmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkgewoJc2V0VGltZW91dCggY2xlYXJGeE5vdywgMCApOwoJcmV0dXJuICggZnhOb3cgPSBqUXVlcnkubm93KCkgKTsKfQoKZnVuY3Rpb24gY2xlYXJGeE5vdygpIHsKCWZ4Tm93ID0gdW5kZWZpbmVkOwp9CgovLyBHZW5lcmF0ZSBwYXJhbWV0ZXJzIHRvIGNyZWF0ZSBhIHN0YW5kYXJkIGFuaW1hdGlvbgpmdW5jdGlvbiBnZW5GeCggdHlwZSwgbnVtICkgewoJdmFyIG9iaiA9IHt9OwoKCWpRdWVyeS5lYWNoKCBmeEF0dHJzLmNvbmNhdC5hcHBseShbXSwgZnhBdHRycy5zbGljZSggMCwgbnVtICkpLCBmdW5jdGlvbigpIHsKCQlvYmpbIHRoaXMgXSA9IHR5cGU7Cgl9KTsKCglyZXR1cm4gb2JqOwp9CgovLyBHZW5lcmF0ZSBzaG9ydGN1dHMgZm9yIGN1c3RvbSBhbmltYXRpb25zCmpRdWVyeS5lYWNoKHsKCXNsaWRlRG93bjogZ2VuRngoICJzaG93IiwgMSApLAoJc2xpZGVVcDogZ2VuRngoICJoaWRlIiwgMSApLAoJc2xpZGVUb2dnbGU6IGdlbkZ4KCAidG9nZ2xlIiwgMSApLAoJZmFkZUluOiB7IG9wYWNpdHk6ICJzaG93IiB9LAoJZmFkZU91dDogeyBvcGFjaXR5OiAiaGlkZSIgfSwKCWZhZGVUb2dnbGU6IHsgb3BhY2l0eTogInRvZ2dsZSIgfQp9LCBmdW5jdGlvbiggbmFtZSwgcHJvcHMgKSB7CglqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQlyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTsKCX07Cn0pOwoKalF1ZXJ5LmV4dGVuZCh7CglzcGVlZDogZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkgewoJCXZhciBvcHQgPSBzcGVlZCAmJiB0eXBlb2Ygc3BlZWQgPT09ICJvYmplY3QiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7CgkJCWNvbXBsZXRlOiBmbiB8fCAhZm4gJiYgZWFzaW5nIHx8CgkJCQlqUXVlcnkuaXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCwKCQkJZHVyYXRpb246IHNwZWVkLAoJCQllYXNpbmc6IGZuICYmIGVhc2luZyB8fCBlYXNpbmcgJiYgIWpRdWVyeS5pc0Z1bmN0aW9uKCBlYXNpbmcgKSAmJiBlYXNpbmcKCQl9OwoKCQlvcHQuZHVyYXRpb24gPSBqUXVlcnkuZngub2ZmID8gMCA6IHR5cGVvZiBvcHQuZHVyYXRpb24gPT09ICJudW1iZXIiID8gb3B0LmR1cmF0aW9uIDoKCQkJb3B0LmR1cmF0aW9uIGluIGpRdWVyeS5meC5zcGVlZHMgPyBqUXVlcnkuZnguc3BlZWRzWyBvcHQuZHVyYXRpb24gXSA6IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7CgoJCS8vIG5vcm1hbGl6ZSBvcHQucXVldWUgLSB0cnVlL3VuZGVmaW5lZC9udWxsIC0+ICJmeCIKCQlpZiAoIG9wdC5xdWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHsKCQkJb3B0LnF1ZXVlID0gImZ4IjsKCQl9CgoJCS8vIFF1ZXVlaW5nCgkJb3B0Lm9sZCA9IG9wdC5jb21wbGV0ZTsKCgkJb3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oIG5vVW5tYXJrICkgewoJCQlpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7CgkJCQlvcHQub2xkLmNhbGwoIHRoaXMgKTsKCQkJfQoKCQkJaWYgKCBvcHQucXVldWUgKSB7CgkJCQlqUXVlcnkuZGVxdWV1ZSggdGhpcywgb3B0LnF1ZXVlICk7CgkJCX0gZWxzZSBpZiAoIG5vVW5tYXJrICE9PSBmYWxzZSApIHsKCQkJCWpRdWVyeS5fdW5tYXJrKCB0aGlzICk7CgkJCX0KCQl9OwoKCQlyZXR1cm4gb3B0OwoJfSwKCgllYXNpbmc6IHsKCQlsaW5lYXI6IGZ1bmN0aW9uKCBwICkgewoJCQlyZXR1cm4gcDsKCQl9LAoJCXN3aW5nOiBmdW5jdGlvbiggcCApIHsKCQkJcmV0dXJuICggLU1hdGguY29zKCBwKk1hdGguUEkgKSAvIDIgKSArIDAuNTsKCQl9Cgl9LAoKCXRpbWVyczogW10sCgoJZng6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBwcm9wICkgewoJCXRoaXMub3B0aW9ucyA9IG9wdGlvbnM7CgkJdGhpcy5lbGVtID0gZWxlbTsKCQl0aGlzLnByb3AgPSBwcm9wOwoKCQlvcHRpb25zLm9yaWcgPSBvcHRpb25zLm9yaWcgfHwge307Cgl9Cgp9KTsKCmpRdWVyeS5meC5wcm90b3R5cGUgPSB7CgkvLyBTaW1wbGUgZnVuY3Rpb24gZm9yIHNldHRpbmcgYSBzdHlsZSB2YWx1ZQoJdXBkYXRlOiBmdW5jdGlvbigpIHsKCQlpZiAoIHRoaXMub3B0aW9ucy5zdGVwICkgewoJCQl0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7CgkJfQoKCQkoIGpRdWVyeS5meC5zdGVwWyB0aGlzLnByb3AgXSB8fCBqUXVlcnkuZnguc3RlcC5fZGVmYXVsdCApKCB0aGlzICk7Cgl9LAoKCS8vIEdldCB0aGUgY3VycmVudCBzaXplCgljdXI6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy5lbGVtWyB0aGlzLnByb3AgXSAhPSBudWxsICYmICghdGhpcy5lbGVtLnN0eWxlIHx8IHRoaXMuZWxlbS5zdHlsZVsgdGhpcy5wcm9wIF0gPT0gbnVsbCkgKSB7CgkJCXJldHVybiB0aGlzLmVsZW1bIHRoaXMucHJvcCBdOwoJCX0KCgkJdmFyIHBhcnNlZCwKCQkJciA9IGpRdWVyeS5jc3MoIHRoaXMuZWxlbSwgdGhpcy5wcm9wICk7CgkJLy8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCAiYXV0byIgYXJlIGNvbnZlcnRlZCB0byAwLAoJCS8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgInJvdGF0ZSgxcmFkKSIgYXJlIHJldHVybmVkIGFzIGlzLAoJCS8vIHNpbXBsZSB2YWx1ZXMgc3VjaCBhcyAiMTBweCIgYXJlIHBhcnNlZCB0byBGbG9hdC4KCQlyZXR1cm4gaXNOYU4oIHBhcnNlZCA9IHBhcnNlRmxvYXQoIHIgKSApID8gIXIgfHwgciA9PT0gImF1dG8iID8gMCA6IHIgOiBwYXJzZWQ7Cgl9LAoKCS8vIFN0YXJ0IGFuIGFuaW1hdGlvbiBmcm9tIG9uZSBudW1iZXIgdG8gYW5vdGhlcgoJY3VzdG9tOiBmdW5jdGlvbiggZnJvbSwgdG8sIHVuaXQgKSB7CgkJdmFyIHNlbGYgPSB0aGlzLAoJCQlmeCA9IGpRdWVyeS5meDsKCgkJdGhpcy5zdGFydFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpOwoJCXRoaXMuZW5kID0gdG87CgkJdGhpcy5ub3cgPSB0aGlzLnN0YXJ0ID0gZnJvbTsKCQl0aGlzLnBvcyA9IHRoaXMuc3RhdGUgPSAwOwoJCXRoaXMudW5pdCA9IHVuaXQgfHwgdGhpcy51bml0IHx8ICggalF1ZXJ5LmNzc051bWJlclsgdGhpcy5wcm9wIF0gPyAiIiA6ICJweCIgKTsKCgkJZnVuY3Rpb24gdCggZ290b0VuZCApIHsKCQkJcmV0dXJuIHNlbGYuc3RlcCggZ290b0VuZCApOwoJCX0KCgkJdC5xdWV1ZSA9IHRoaXMub3B0aW9ucy5xdWV1ZTsKCQl0LmVsZW0gPSB0aGlzLmVsZW07CgkJdC5zYXZlU3RhdGUgPSBmdW5jdGlvbigpIHsKCQkJaWYgKCBqUXVlcnkuX2RhdGEoIHNlbGYuZWxlbSwgImZ4c2hvdyIgKyBzZWxmLnByb3AgKSA9PT0gdW5kZWZpbmVkICkgewoJCQkJaWYgKCBzZWxmLm9wdGlvbnMuaGlkZSApIHsKCQkJCQlqUXVlcnkuX2RhdGEoIHNlbGYuZWxlbSwgImZ4c2hvdyIgKyBzZWxmLnByb3AsIHNlbGYuc3RhcnQgKTsKCQkJCX0gZWxzZSBpZiAoIHNlbGYub3B0aW9ucy5zaG93ICkgewoJCQkJCWpRdWVyeS5fZGF0YSggc2VsZi5lbGVtLCAiZnhzaG93IiArIHNlbGYucHJvcCwgc2VsZi5lbmQgKTsKCQkJCX0KCQkJfQoJCX07CgoJCWlmICggdCgpICYmIGpRdWVyeS50aW1lcnMucHVzaCh0KSAmJiAhdGltZXJJZCApIHsKCQkJdGltZXJJZCA9IHNldEludGVydmFsKCBmeC50aWNrLCBmeC5pbnRlcnZhbCApOwoJCX0KCX0sCgoJLy8gU2ltcGxlICdzaG93JyBmdW5jdGlvbgoJc2hvdzogZnVuY3Rpb24oKSB7CgkJdmFyIGRhdGFTaG93ID0galF1ZXJ5Ll9kYXRhKCB0aGlzLmVsZW0sICJmeHNob3ciICsgdGhpcy5wcm9wICk7CgoJCS8vIFJlbWVtYmVyIHdoZXJlIHdlIHN0YXJ0ZWQsIHNvIHRoYXQgd2UgY2FuIGdvIGJhY2sgdG8gaXQgbGF0ZXIKCQl0aGlzLm9wdGlvbnMub3JpZ1sgdGhpcy5wcm9wIF0gPSBkYXRhU2hvdyB8fCBqUXVlcnkuc3R5bGUoIHRoaXMuZWxlbSwgdGhpcy5wcm9wICk7CgkJdGhpcy5vcHRpb25zLnNob3cgPSB0cnVlOwoKCQkvLyBCZWdpbiB0aGUgYW5pbWF0aW9uCgkJLy8gTWFrZSBzdXJlIHRoYXQgd2Ugc3RhcnQgYXQgYSBzbWFsbCB3aWR0aC9oZWlnaHQgdG8gYXZvaWQgYW55IGZsYXNoIG9mIGNvbnRlbnQKCQlpZiAoIGRhdGFTaG93ICE9PSB1bmRlZmluZWQgKSB7CgkJCS8vIFRoaXMgc2hvdyBpcyBwaWNraW5nIHVwIHdoZXJlIGEgcHJldmlvdXMgaGlkZSBvciBzaG93IGxlZnQgb2ZmCgkJCXRoaXMuY3VzdG9tKCB0aGlzLmN1cigpLCBkYXRhU2hvdyApOwoJCX0gZWxzZSB7CgkJCXRoaXMuY3VzdG9tKCB0aGlzLnByb3AgPT09ICJ3aWR0aCIgfHwgdGhpcy5wcm9wID09PSAiaGVpZ2h0IiA/IDEgOiAwLCB0aGlzLmN1cigpICk7CgkJfQoKCQkvLyBTdGFydCBieSBzaG93aW5nIHRoZSBlbGVtZW50CgkJalF1ZXJ5KCB0aGlzLmVsZW0gKS5zaG93KCk7Cgl9LAoKCS8vIFNpbXBsZSAnaGlkZScgZnVuY3Rpb24KCWhpZGU6IGZ1bmN0aW9uKCkgewoJCS8vIFJlbWVtYmVyIHdoZXJlIHdlIHN0YXJ0ZWQsIHNvIHRoYXQgd2UgY2FuIGdvIGJhY2sgdG8gaXQgbGF0ZXIKCQl0aGlzLm9wdGlvbnMub3JpZ1sgdGhpcy5wcm9wIF0gPSBqUXVlcnkuX2RhdGEoIHRoaXMuZWxlbSwgImZ4c2hvdyIgKyB0aGlzLnByb3AgKSB8fCBqUXVlcnkuc3R5bGUoIHRoaXMuZWxlbSwgdGhpcy5wcm9wICk7CgkJdGhpcy5vcHRpb25zLmhpZGUgPSB0cnVlOwoKCQkvLyBCZWdpbiB0aGUgYW5pbWF0aW9uCgkJdGhpcy5jdXN0b20oIHRoaXMuY3VyKCksIDAgKTsKCX0sCgoJLy8gRWFjaCBzdGVwIG9mIGFuIGFuaW1hdGlvbgoJc3RlcDogZnVuY3Rpb24oIGdvdG9FbmQgKSB7CgkJdmFyIHAsIG4sIGNvbXBsZXRlLAoJCQl0ID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSwKCQkJZG9uZSA9IHRydWUsCgkJCWVsZW0gPSB0aGlzLmVsZW0sCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7CgoJCWlmICggZ290b0VuZCB8fCB0ID49IG9wdGlvbnMuZHVyYXRpb24gKyB0aGlzLnN0YXJ0VGltZSApIHsKCQkJdGhpcy5ub3cgPSB0aGlzLmVuZDsKCQkJdGhpcy5wb3MgPSB0aGlzLnN0YXRlID0gMTsKCQkJdGhpcy51cGRhdGUoKTsKCgkJCW9wdGlvbnMuYW5pbWF0ZWRQcm9wZXJ0aWVzWyB0aGlzLnByb3AgXSA9IHRydWU7CgoJCQlmb3IgKCBwIGluIG9wdGlvbnMuYW5pbWF0ZWRQcm9wZXJ0aWVzICkgewoJCQkJaWYgKCBvcHRpb25zLmFuaW1hdGVkUHJvcGVydGllc1sgcCBdICE9PSB0cnVlICkgewoJCQkJCWRvbmUgPSBmYWxzZTsKCQkJCX0KCQkJfQoKCQkJaWYgKCBkb25lICkgewoJCQkJLy8gUmVzZXQgdGhlIG92ZXJmbG93CgkJCQlpZiAoIG9wdGlvbnMub3ZlcmZsb3cgIT0gbnVsbCAmJiAhalF1ZXJ5LnN1cHBvcnQuc2hyaW5rV3JhcEJsb2NrcyApIHsKCgkJCQkJalF1ZXJ5LmVhY2goIFsgIiIsICJYIiwgIlkiIF0sIGZ1bmN0aW9uKCBpbmRleCwgdmFsdWUgKSB7CgkJCQkJCWVsZW0uc3R5bGVbICJvdmVyZmxvdyIgKyB2YWx1ZSBdID0gb3B0aW9ucy5vdmVyZmxvd1sgaW5kZXggXTsKCQkJCQl9KTsKCQkJCX0KCgkJCQkvLyBIaWRlIHRoZSBlbGVtZW50IGlmIHRoZSAiaGlkZSIgb3BlcmF0aW9uIHdhcyBkb25lCgkJCQlpZiAoIG9wdGlvbnMuaGlkZSApIHsKCQkJCQlqUXVlcnkoIGVsZW0gKS5oaWRlKCk7CgkJCQl9CgoJCQkJLy8gUmVzZXQgdGhlIHByb3BlcnRpZXMsIGlmIHRoZSBpdGVtIGhhcyBiZWVuIGhpZGRlbiBvciBzaG93bgoJCQkJaWYgKCBvcHRpb25zLmhpZGUgfHwgb3B0aW9ucy5zaG93ICkgewoJCQkJCWZvciAoIHAgaW4gb3B0aW9ucy5hbmltYXRlZFByb3BlcnRpZXMgKSB7CgkJCQkJCWpRdWVyeS5zdHlsZSggZWxlbSwgcCwgb3B0aW9ucy5vcmlnWyBwIF0gKTsKCQkJCQkJalF1ZXJ5LnJlbW92ZURhdGEoIGVsZW0sICJmeHNob3ciICsgcCwgdHJ1ZSApOwoJCQkJCQkvLyBUb2dnbGUgZGF0YSBpcyBubyBsb25nZXIgbmVlZGVkCgkJCQkJCWpRdWVyeS5yZW1vdmVEYXRhKCBlbGVtLCAidG9nZ2xlIiArIHAsIHRydWUgKTsKCQkJCQl9CgkJCQl9CgoJCQkJLy8gRXhlY3V0ZSB0aGUgY29tcGxldGUgZnVuY3Rpb24KCQkJCS8vIGluIHRoZSBldmVudCB0aGF0IHRoZSBjb21wbGV0ZSBmdW5jdGlvbiB0aHJvd3MgYW4gZXhjZXB0aW9uCgkJCQkvLyB3ZSBtdXN0IGVuc3VyZSBpdCB3b24ndCBiZSBjYWxsZWQgdHdpY2UuICM1Njg0CgoJCQkJY29tcGxldGUgPSBvcHRpb25zLmNvbXBsZXRlOwoJCQkJaWYgKCBjb21wbGV0ZSApIHsKCgkJCQkJb3B0aW9ucy5jb21wbGV0ZSA9IGZhbHNlOwoJCQkJCWNvbXBsZXRlLmNhbGwoIGVsZW0gKTsKCQkJCX0KCQkJfQoKCQkJcmV0dXJuIGZhbHNlOwoKCQl9IGVsc2UgewoJCQkvLyBjbGFzc2ljYWwgZWFzaW5nIGNhbm5vdCBiZSB1c2VkIHdpdGggYW4gSW5maW5pdHkgZHVyYXRpb24KCQkJaWYgKCBvcHRpb25zLmR1cmF0aW9uID09IEluZmluaXR5ICkgewoJCQkJdGhpcy5ub3cgPSB0OwoJCQl9IGVsc2UgewoJCQkJbiA9IHQgLSB0aGlzLnN0YXJ0VGltZTsKCQkJCXRoaXMuc3RhdGUgPSBuIC8gb3B0aW9ucy5kdXJhdGlvbjsKCgkJCQkvLyBQZXJmb3JtIHRoZSBlYXNpbmcgZnVuY3Rpb24sIGRlZmF1bHRzIHRvIHN3aW5nCgkJCQl0aGlzLnBvcyA9IGpRdWVyeS5lYXNpbmdbIG9wdGlvbnMuYW5pbWF0ZWRQcm9wZXJ0aWVzW3RoaXMucHJvcF0gXSggdGhpcy5zdGF0ZSwgbiwgMCwgMSwgb3B0aW9ucy5kdXJhdGlvbiApOwoJCQkJdGhpcy5ub3cgPSB0aGlzLnN0YXJ0ICsgKCAodGhpcy5lbmQgLSB0aGlzLnN0YXJ0KSAqIHRoaXMucG9zICk7CgkJCX0KCQkJLy8gUGVyZm9ybSB0aGUgbmV4dCBzdGVwIG9mIHRoZSBhbmltYXRpb24KCQkJdGhpcy51cGRhdGUoKTsKCQl9CgoJCXJldHVybiB0cnVlOwoJfQp9OwoKalF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmZ4LCB7Cgl0aWNrOiBmdW5jdGlvbigpIHsKCQl2YXIgdGltZXIsCgkJCXRpbWVycyA9IGpRdWVyeS50aW1lcnMsCgkJCWkgPSAwOwoKCQlmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7CgkJCXRpbWVyID0gdGltZXJzWyBpIF07CgkJCS8vIENoZWNrcyB0aGUgdGltZXIgaGFzIG5vdCBhbHJlYWR5IGJlZW4gcmVtb3ZlZAoJCQlpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHsKCQkJCXRpbWVycy5zcGxpY2UoIGktLSwgMSApOwoJCQl9CgkJfQoKCQlpZiAoICF0aW1lcnMubGVuZ3RoICkgewoJCQlqUXVlcnkuZnguc3RvcCgpOwoJCX0KCX0sCgoJaW50ZXJ2YWw6IDEzLAoKCXN0b3A6IGZ1bmN0aW9uKCkgewoJCWNsZWFySW50ZXJ2YWwoIHRpbWVySWQgKTsKCQl0aW1lcklkID0gbnVsbDsKCX0sCgoJc3BlZWRzOiB7CgkJc2xvdzogNjAwLAoJCWZhc3Q6IDIwMCwKCQkvLyBEZWZhdWx0IHNwZWVkCgkJX2RlZmF1bHQ6IDQwMAoJfSwKCglzdGVwOiB7CgkJb3BhY2l0eTogZnVuY3Rpb24oIGZ4ICkgewoJCQlqUXVlcnkuc3R5bGUoIGZ4LmVsZW0sICJvcGFjaXR5IiwgZngubm93ICk7CgkJfSwKCgkJX2RlZmF1bHQ6IGZ1bmN0aW9uKCBmeCApIHsKCQkJaWYgKCBmeC5lbGVtLnN0eWxlICYmIGZ4LmVsZW0uc3R5bGVbIGZ4LnByb3AgXSAhPSBudWxsICkgewoJCQkJZnguZWxlbS5zdHlsZVsgZngucHJvcCBdID0gZngubm93ICsgZngudW5pdDsKCQkJfSBlbHNlIHsKCQkJCWZ4LmVsZW1bIGZ4LnByb3AgXSA9IGZ4Lm5vdzsKCQkJfQoJCX0KCX0KfSk7CgovLyBFbnN1cmUgcHJvcHMgdGhhdCBjYW4ndCBiZSBuZWdhdGl2ZSBkb24ndCBnbyB0aGVyZSBvbiB1bmRlcnNob290IGVhc2luZwpqUXVlcnkuZWFjaCggZnhBdHRycy5jb25jYXQuYXBwbHkoIFtdLCBmeEF0dHJzICksIGZ1bmN0aW9uKCBpLCBwcm9wICkgewoJLy8gZXhjbHVkZSBtYXJnaW5Ub3AsIG1hcmdpbkxlZnQsIG1hcmdpbkJvdHRvbSBhbmQgbWFyZ2luUmlnaHQgZnJvbSB0aGlzIGxpc3QKCWlmICggcHJvcC5pbmRleE9mKCAibWFyZ2luIiApICkgewoJCWpRdWVyeS5meC5zdGVwWyBwcm9wIF0gPSBmdW5jdGlvbiggZnggKSB7CgkJCWpRdWVyeS5zdHlsZSggZnguZWxlbSwgcHJvcCwgTWF0aC5tYXgoMCwgZngubm93KSArIGZ4LnVuaXQgKTsKCQl9OwoJfQp9KTsKCmlmICggalF1ZXJ5LmV4cHIgJiYgalF1ZXJ5LmV4cHIuZmlsdGVycyApIHsKCWpRdWVyeS5leHByLmZpbHRlcnMuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4galF1ZXJ5LmdyZXAoalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkgewoJCQlyZXR1cm4gZWxlbSA9PT0gZm4uZWxlbTsKCQl9KS5sZW5ndGg7Cgl9Owp9CgovLyBUcnkgdG8gcmVzdG9yZSB0aGUgZGVmYXVsdCBkaXNwbGF5IHZhbHVlIG9mIGFuIGVsZW1lbnQKZnVuY3Rpb24gZGVmYXVsdERpc3BsYXkoIG5vZGVOYW1lICkgewoKCWlmICggIWVsZW1kaXNwbGF5WyBub2RlTmFtZSBdICkgewoKCQl2YXIgYm9keSA9IGRvY3VtZW50LmJvZHksCgkJCWVsZW0gPSBqUXVlcnkoICI8IiArIG5vZGVOYW1lICsgIj4iICkuYXBwZW5kVG8oIGJvZHkgKSwKCQkJZGlzcGxheSA9IGVsZW0uY3NzKCAiZGlzcGxheSIgKTsKCQllbGVtLnJlbW92ZSgpOwoKCQkvLyBJZiB0aGUgc2ltcGxlIHdheSBmYWlscywKCQkvLyBnZXQgZWxlbWVudCdzIHJlYWwgZGVmYXVsdCBkaXNwbGF5IGJ5IGF0dGFjaGluZyBpdCB0byBhIHRlbXAgaWZyYW1lCgkJaWYgKCBkaXNwbGF5ID09PSAibm9uZSIgfHwgZGlzcGxheSA9PT0gIiIgKSB7CgkJCS8vIE5vIGlmcmFtZSB0byB1c2UgeWV0LCBzbyBjcmVhdGUgaXQKCQkJaWYgKCAhaWZyYW1lICkgewoJCQkJaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggImlmcmFtZSIgKTsKCQkJCWlmcmFtZS5mcmFtZUJvcmRlciA9IGlmcmFtZS53aWR0aCA9IGlmcmFtZS5oZWlnaHQgPSAwOwoJCQl9CgoJCQlib2R5LmFwcGVuZENoaWxkKCBpZnJhbWUgKTsKCgkJCS8vIENyZWF0ZSBhIGNhY2hlYWJsZSBjb3B5IG9mIHRoZSBpZnJhbWUgZG9jdW1lbnQgb24gZmlyc3QgY2FsbC4KCQkJLy8gSUUgYW5kIE9wZXJhIHdpbGwgYWxsb3cgdXMgdG8gcmV1c2UgdGhlIGlmcmFtZURvYyB3aXRob3V0IHJlLXdyaXRpbmcgdGhlIGZha2UgSFRNTAoJCQkvLyBkb2N1bWVudCB0byBpdDsgV2ViS2l0ICYgRmlyZWZveCB3b24ndCBhbGxvdyByZXVzaW5nIHRoZSBpZnJhbWUgZG9jdW1lbnQuCgkJCWlmICggIWlmcmFtZURvYyB8fCAhaWZyYW1lLmNyZWF0ZUVsZW1lbnQgKSB7CgkJCQlpZnJhbWVEb2MgPSAoIGlmcmFtZS5jb250ZW50V2luZG93IHx8IGlmcmFtZS5jb250ZW50RG9jdW1lbnQgKS5kb2N1bWVudDsKCQkJCWlmcmFtZURvYy53cml0ZSggKCBqUXVlcnkuc3VwcG9ydC5ib3hNb2RlbCA/ICI8IWRvY3R5cGUgaHRtbD4iIDogIiIgKSArICI8aHRtbD48Ym9keT4iICk7CgkJCQlpZnJhbWVEb2MuY2xvc2UoKTsKCQkJfQoKCQkJZWxlbSA9IGlmcmFtZURvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSApOwoKCQkJaWZyYW1lRG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGVsZW0gKTsKCgkJCWRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCAiZGlzcGxheSIgKTsKCQkJYm9keS5yZW1vdmVDaGlsZCggaWZyYW1lICk7CgkJfQoKCQkvLyBTdG9yZSB0aGUgY29ycmVjdCBkZWZhdWx0IGRpc3BsYXkKCQllbGVtZGlzcGxheVsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7Cgl9CgoJcmV0dXJuIGVsZW1kaXNwbGF5WyBub2RlTmFtZSBdOwp9CgoKCgp2YXIgZ2V0T2Zmc2V0LAoJcnRhYmxlID0gL150KD86YWJsZXxkfGgpJC9pLAoJcnJvb3QgPSAvXig/OmJvZHl8aHRtbCkkL2k7CgppZiAoICJnZXRCb3VuZGluZ0NsaWVudFJlY3QiIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCApIHsKCWdldE9mZnNldCA9IGZ1bmN0aW9uKCBlbGVtLCBkb2MsIGRvY0VsZW0sIGJveCApIHsKCQl0cnkgewoJCQlib3ggPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwoJCX0gY2F0Y2goZSkge30KCgkJLy8gTWFrZSBzdXJlIHdlJ3JlIG5vdCBkZWFsaW5nIHdpdGggYSBkaXNjb25uZWN0ZWQgRE9NIG5vZGUKCQlpZiAoICFib3ggfHwgIWpRdWVyeS5jb250YWlucyggZG9jRWxlbSwgZWxlbSApICkgewoJCQlyZXR1cm4gYm94ID8geyB0b3A6IGJveC50b3AsIGxlZnQ6IGJveC5sZWZ0IH0gOiB7IHRvcDogMCwgbGVmdDogMCB9OwoJCX0KCgkJdmFyIGJvZHkgPSBkb2MuYm9keSwKCQkJd2luID0gZ2V0V2luZG93KCBkb2MgKSwKCQkJY2xpZW50VG9wICA9IGRvY0VsZW0uY2xpZW50VG9wICB8fCBib2R5LmNsaWVudFRvcCAgfHwgMCwKCQkJY2xpZW50TGVmdCA9IGRvY0VsZW0uY2xpZW50TGVmdCB8fCBib2R5LmNsaWVudExlZnQgfHwgMCwKCQkJc2Nyb2xsVG9wICA9IHdpbi5wYWdlWU9mZnNldCB8fCBqUXVlcnkuc3VwcG9ydC5ib3hNb2RlbCAmJiBkb2NFbGVtLnNjcm9sbFRvcCAgfHwgYm9keS5zY3JvbGxUb3AsCgkJCXNjcm9sbExlZnQgPSB3aW4ucGFnZVhPZmZzZXQgfHwgalF1ZXJ5LnN1cHBvcnQuYm94TW9kZWwgJiYgZG9jRWxlbS5zY3JvbGxMZWZ0IHx8IGJvZHkuc2Nyb2xsTGVmdCwKCQkJdG9wICA9IGJveC50b3AgICsgc2Nyb2xsVG9wICAtIGNsaWVudFRvcCwKCQkJbGVmdCA9IGJveC5sZWZ0ICsgc2Nyb2xsTGVmdCAtIGNsaWVudExlZnQ7CgoJCXJldHVybiB7IHRvcDogdG9wLCBsZWZ0OiBsZWZ0IH07Cgl9OwoKfSBlbHNlIHsKCWdldE9mZnNldCA9IGZ1bmN0aW9uKCBlbGVtLCBkb2MsIGRvY0VsZW0gKSB7CgkJdmFyIGNvbXB1dGVkU3R5bGUsCgkJCW9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFyZW50LAoJCQlwcmV2T2Zmc2V0UGFyZW50ID0gZWxlbSwKCQkJYm9keSA9IGRvYy5ib2R5LAoJCQlkZWZhdWx0VmlldyA9IGRvYy5kZWZhdWx0VmlldywKCQkJcHJldkNvbXB1dGVkU3R5bGUgPSBkZWZhdWx0VmlldyA/IGRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0sIG51bGwgKSA6IGVsZW0uY3VycmVudFN0eWxlLAoJCQl0b3AgPSBlbGVtLm9mZnNldFRvcCwKCQkJbGVmdCA9IGVsZW0ub2Zmc2V0TGVmdDsKCgkJd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbSAhPT0gYm9keSAmJiBlbGVtICE9PSBkb2NFbGVtICkgewoJCQlpZiAoIGpRdWVyeS5zdXBwb3J0LmZpeGVkUG9zaXRpb24gJiYgcHJldkNvbXB1dGVkU3R5bGUucG9zaXRpb24gPT09ICJmaXhlZCIgKSB7CgkJCQlicmVhazsKCQkJfQoKCQkJY29tcHV0ZWRTdHlsZSA9IGRlZmF1bHRWaWV3ID8gZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtLCBudWxsKSA6IGVsZW0uY3VycmVudFN0eWxlOwoJCQl0b3AgIC09IGVsZW0uc2Nyb2xsVG9wOwoJCQlsZWZ0IC09IGVsZW0uc2Nyb2xsTGVmdDsKCgkJCWlmICggZWxlbSA9PT0gb2Zmc2V0UGFyZW50ICkgewoJCQkJdG9wICArPSBlbGVtLm9mZnNldFRvcDsKCQkJCWxlZnQgKz0gZWxlbS5vZmZzZXRMZWZ0OwoKCQkJCWlmICggalF1ZXJ5LnN1cHBvcnQuZG9lc05vdEFkZEJvcmRlciAmJiAhKGpRdWVyeS5zdXBwb3J0LmRvZXNBZGRCb3JkZXJGb3JUYWJsZUFuZENlbGxzICYmIHJ0YWJsZS50ZXN0KGVsZW0ubm9kZU5hbWUpKSApIHsKCQkJCQl0b3AgICs9IHBhcnNlRmxvYXQoIGNvbXB1dGVkU3R5bGUuYm9yZGVyVG9wV2lkdGggICkgfHwgMDsKCQkJCQlsZWZ0ICs9IHBhcnNlRmxvYXQoIGNvbXB1dGVkU3R5bGUuYm9yZGVyTGVmdFdpZHRoICkgfHwgMDsKCQkJCX0KCgkJCQlwcmV2T2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50OwoJCQkJb2Zmc2V0UGFyZW50ID0gZWxlbS5vZmZzZXRQYXJlbnQ7CgkJCX0KCgkJCWlmICggalF1ZXJ5LnN1cHBvcnQuc3VidHJhY3RzQm9yZGVyRm9yT3ZlcmZsb3dOb3RWaXNpYmxlICYmIGNvbXB1dGVkU3R5bGUub3ZlcmZsb3cgIT09ICJ2aXNpYmxlIiApIHsKCQkJCXRvcCAgKz0gcGFyc2VGbG9hdCggY29tcHV0ZWRTdHlsZS5ib3JkZXJUb3BXaWR0aCAgKSB8fCAwOwoJCQkJbGVmdCArPSBwYXJzZUZsb2F0KCBjb21wdXRlZFN0eWxlLmJvcmRlckxlZnRXaWR0aCApIHx8IDA7CgkJCX0KCgkJCXByZXZDb21wdXRlZFN0eWxlID0gY29tcHV0ZWRTdHlsZTsKCQl9CgoJCWlmICggcHJldkNvbXB1dGVkU3R5bGUucG9zaXRpb24gPT09ICJyZWxhdGl2ZSIgfHwgcHJldkNvbXB1dGVkU3R5bGUucG9zaXRpb24gPT09ICJzdGF0aWMiICkgewoJCQl0b3AgICs9IGJvZHkub2Zmc2V0VG9wOwoJCQlsZWZ0ICs9IGJvZHkub2Zmc2V0TGVmdDsKCQl9CgoJCWlmICggalF1ZXJ5LnN1cHBvcnQuZml4ZWRQb3NpdGlvbiAmJiBwcmV2Q29tcHV0ZWRTdHlsZS5wb3NpdGlvbiA9PT0gImZpeGVkIiApIHsKCQkJdG9wICArPSBNYXRoLm1heCggZG9jRWxlbS5zY3JvbGxUb3AsIGJvZHkuc2Nyb2xsVG9wICk7CgkJCWxlZnQgKz0gTWF0aC5tYXgoIGRvY0VsZW0uc2Nyb2xsTGVmdCwgYm9keS5zY3JvbGxMZWZ0ICk7CgkJfQoKCQlyZXR1cm4geyB0b3A6IHRvcCwgbGVmdDogbGVmdCB9OwoJfTsKfQoKalF1ZXJ5LmZuLm9mZnNldCA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJaWYgKCBhcmd1bWVudHMubGVuZ3RoICkgewoJCXJldHVybiBvcHRpb25zID09PSB1bmRlZmluZWQgPwoJCQl0aGlzIDoKCQkJdGhpcy5lYWNoKGZ1bmN0aW9uKCBpICkgewoJCQkJalF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTsKCQkJfSk7Cgl9CgoJdmFyIGVsZW0gPSB0aGlzWzBdLAoJCWRvYyA9IGVsZW0gJiYgZWxlbS5vd25lckRvY3VtZW50OwoKCWlmICggIWRvYyApIHsKCQlyZXR1cm4gbnVsbDsKCX0KCglpZiAoIGVsZW0gPT09IGRvYy5ib2R5ICkgewoJCXJldHVybiBqUXVlcnkub2Zmc2V0LmJvZHlPZmZzZXQoIGVsZW0gKTsKCX0KCglyZXR1cm4gZ2V0T2Zmc2V0KCBlbGVtLCBkb2MsIGRvYy5kb2N1bWVudEVsZW1lbnQgKTsKfTsKCmpRdWVyeS5vZmZzZXQgPSB7CgoJYm9keU9mZnNldDogZnVuY3Rpb24oIGJvZHkgKSB7CgkJdmFyIHRvcCA9IGJvZHkub2Zmc2V0VG9wLAoJCQlsZWZ0ID0gYm9keS5vZmZzZXRMZWZ0OwoKCQlpZiAoIGpRdWVyeS5zdXBwb3J0LmRvZXNOb3RJbmNsdWRlTWFyZ2luSW5Cb2R5T2Zmc2V0ICkgewoJCQl0b3AgICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoYm9keSwgIm1hcmdpblRvcCIpICkgfHwgMDsKCQkJbGVmdCArPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKGJvZHksICJtYXJnaW5MZWZ0IikgKSB8fCAwOwoJCX0KCgkJcmV0dXJuIHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfTsKCX0sCgoJc2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHsKCQl2YXIgcG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCAicG9zaXRpb24iICk7CgoJCS8vIHNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW0KCQlpZiAoIHBvc2l0aW9uID09PSAic3RhdGljIiApIHsKCQkJZWxlbS5zdHlsZS5wb3NpdGlvbiA9ICJyZWxhdGl2ZSI7CgkJfQoKCQl2YXIgY3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLAoJCQljdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpLAoJCQljdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCAidG9wIiApLAoJCQljdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgImxlZnQiICksCgkJCWNhbGN1bGF0ZVBvc2l0aW9uID0gKCBwb3NpdGlvbiA9PT0gImFic29sdXRlIiB8fCBwb3NpdGlvbiA9PT0gImZpeGVkIiApICYmIGpRdWVyeS5pbkFycmF5KCJhdXRvIiwgW2N1ckNTU1RvcCwgY3VyQ1NTTGVmdF0pID4gLTEsCgkJCXByb3BzID0ge30sIGN1clBvc2l0aW9uID0ge30sIGN1clRvcCwgY3VyTGVmdDsKCgkJLy8gbmVlZCB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXIgdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkCgkJaWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHsKCQkJY3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7CgkJCWN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDsKCQkJY3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7CgkJfSBlbHNlIHsKCQkJY3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDsKCQkJY3VyTGVmdCA9IHBhcnNlRmxvYXQoIGN1ckNTU0xlZnQgKSB8fCAwOwoJCX0KCgkJaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggb3B0aW9ucyApICkgewoJCQlvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBjdXJPZmZzZXQgKTsKCQl9CgoJCWlmICggb3B0aW9ucy50b3AgIT0gbnVsbCApIHsKCQkJcHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDsKCQl9CgkJaWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHsKCQkJcHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7CgkJfQoKCQlpZiAoICJ1c2luZyIgaW4gb3B0aW9ucyApIHsKCQkJb3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBwcm9wcyApOwoJCX0gZWxzZSB7CgkJCWN1ckVsZW0uY3NzKCBwcm9wcyApOwoJCX0KCX0KfTsKCgpqUXVlcnkuZm4uZXh0ZW5kKHsKCglwb3NpdGlvbjogZnVuY3Rpb24oKSB7CgkJaWYgKCAhdGhpc1swXSApIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoKCQl2YXIgZWxlbSA9IHRoaXNbMF0sCgoJCS8vIEdldCAqcmVhbCogb2Zmc2V0UGFyZW50CgkJb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQoKSwKCgkJLy8gR2V0IGNvcnJlY3Qgb2Zmc2V0cwoJCW9mZnNldCAgICAgICA9IHRoaXMub2Zmc2V0KCksCgkJcGFyZW50T2Zmc2V0ID0gcnJvb3QudGVzdChvZmZzZXRQYXJlbnRbMF0ubm9kZU5hbWUpID8geyB0b3A6IDAsIGxlZnQ6IDAgfSA6IG9mZnNldFBhcmVudC5vZmZzZXQoKTsKCgkJLy8gU3VidHJhY3QgZWxlbWVudCBtYXJnaW5zCgkJLy8gbm90ZTogd2hlbiBhbiBlbGVtZW50IGhhcyBtYXJnaW46IGF1dG8gdGhlIG9mZnNldExlZnQgYW5kIG1hcmdpbkxlZnQKCQkvLyBhcmUgdGhlIHNhbWUgaW4gU2FmYXJpIGNhdXNpbmcgb2Zmc2V0LmxlZnQgdG8gaW5jb3JyZWN0bHkgYmUgMAoJCW9mZnNldC50b3AgIC09IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoZWxlbSwgIm1hcmdpblRvcCIpICkgfHwgMDsKCQlvZmZzZXQubGVmdCAtPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKGVsZW0sICJtYXJnaW5MZWZ0IikgKSB8fCAwOwoKCQkvLyBBZGQgb2Zmc2V0UGFyZW50IGJvcmRlcnMKCQlwYXJlbnRPZmZzZXQudG9wICArPSBwYXJzZUZsb2F0KCBqUXVlcnkuY3NzKG9mZnNldFBhcmVudFswXSwgImJvcmRlclRvcFdpZHRoIikgKSB8fCAwOwoJCXBhcmVudE9mZnNldC5sZWZ0ICs9IHBhcnNlRmxvYXQoIGpRdWVyeS5jc3Mob2Zmc2V0UGFyZW50WzBdLCAiYm9yZGVyTGVmdFdpZHRoIikgKSB8fCAwOwoKCQkvLyBTdWJ0cmFjdCB0aGUgdHdvIG9mZnNldHMKCQlyZXR1cm4gewoJCQl0b3A6ICBvZmZzZXQudG9wICAtIHBhcmVudE9mZnNldC50b3AsCgkJCWxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQKCQl9OwoJfSwKCglvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm1hcChmdW5jdGlvbigpIHsKCQkJdmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50LmJvZHk7CgkJCXdoaWxlICggb2Zmc2V0UGFyZW50ICYmICghcnJvb3QudGVzdChvZmZzZXRQYXJlbnQubm9kZU5hbWUpICYmIGpRdWVyeS5jc3Mob2Zmc2V0UGFyZW50LCAicG9zaXRpb24iKSA9PT0gInN0YXRpYyIpICkgewoJCQkJb2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50Lm9mZnNldFBhcmVudDsKCQkJfQoJCQlyZXR1cm4gb2Zmc2V0UGFyZW50OwoJCX0pOwoJfQp9KTsKCgovLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHMKalF1ZXJ5LmVhY2goIHtzY3JvbGxMZWZ0OiAicGFnZVhPZmZzZXQiLCBzY3JvbGxUb3A6ICJwYWdlWU9mZnNldCJ9LCBmdW5jdGlvbiggbWV0aG9kLCBwcm9wICkgewoJdmFyIHRvcCA9IC9ZLy50ZXN0KCBwcm9wICk7CgoJalF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7CgkJcmV0dXJuIGpRdWVyeS5hY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHsKCQkJdmFyIHdpbiA9IGdldFdpbmRvdyggZWxlbSApOwoKCQkJaWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiB3aW4gPyAocHJvcCBpbiB3aW4pID8gd2luWyBwcm9wIF0gOgoJCQkJCWpRdWVyeS5zdXBwb3J0LmJveE1vZGVsICYmIHdpbi5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbIG1ldGhvZCBdIHx8CgkJCQkJCXdpbi5kb2N1bWVudC5ib2R5WyBtZXRob2QgXSA6CgkJCQkJZWxlbVsgbWV0aG9kIF07CgkJCX0KCgkJCWlmICggd2luICkgewoJCQkJd2luLnNjcm9sbFRvKAoJCQkJCSF0b3AgPyB2YWwgOiBqUXVlcnkoIHdpbiApLnNjcm9sbExlZnQoKSwKCQkJCQkgdG9wID8gdmFsIDogalF1ZXJ5KCB3aW4gKS5zY3JvbGxUb3AoKQoJCQkJKTsKCgkJCX0gZWxzZSB7CgkJCQllbGVtWyBtZXRob2QgXSA9IHZhbDsKCQkJfQoJCX0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoLCBudWxsICk7Cgl9Owp9KTsKCmZ1bmN0aW9uIGdldFdpbmRvdyggZWxlbSApIHsKCXJldHVybiBqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSA/CgkJZWxlbSA6CgkJZWxlbS5ub2RlVHlwZSA9PT0gOSA/CgkJCWVsZW0uZGVmYXVsdFZpZXcgfHwgZWxlbS5wYXJlbnRXaW5kb3cgOgoJCQlmYWxzZTsKfQoKCgoKLy8gQ3JlYXRlIHdpZHRoLCBoZWlnaHQsIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzCmpRdWVyeS5lYWNoKCB7IEhlaWdodDogImhlaWdodCIsIFdpZHRoOiAid2lkdGgiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkgewoJdmFyIGNsaWVudFByb3AgPSAiY2xpZW50IiArIG5hbWUsCgkJc2Nyb2xsUHJvcCA9ICJzY3JvbGwiICsgbmFtZSwKCQlvZmZzZXRQcm9wID0gIm9mZnNldCIgKyBuYW1lOwoKCS8vIGlubmVySGVpZ2h0IGFuZCBpbm5lcldpZHRoCglqUXVlcnkuZm5bICJpbm5lciIgKyBuYW1lIF0gPSBmdW5jdGlvbigpIHsKCQl2YXIgZWxlbSA9IHRoaXNbMF07CgkJcmV0dXJuIGVsZW0gPwoJCQllbGVtLnN0eWxlID8KCQkJcGFyc2VGbG9hdCggalF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgInBhZGRpbmciICkgKSA6CgkJCXRoaXNbIHR5cGUgXSgpIDoKCQkJbnVsbDsKCX07CgoJLy8gb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGgKCWpRdWVyeS5mblsgIm91dGVyIiArIG5hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4gKSB7CgkJdmFyIGVsZW0gPSB0aGlzWzBdOwoJCXJldHVybiBlbGVtID8KCQkJZWxlbS5zdHlsZSA/CgkJCXBhcnNlRmxvYXQoIGpRdWVyeS5jc3MoIGVsZW0sIHR5cGUsIG1hcmdpbiA/ICJtYXJnaW4iIDogImJvcmRlciIgKSApIDoKCQkJdGhpc1sgdHlwZSBdKCkgOgoJCQludWxsOwoJfTsKCglqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQlyZXR1cm4galF1ZXJ5LmFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIHR5cGUsIHZhbHVlICkgewoJCQl2YXIgZG9jLCBkb2NFbGVtUHJvcCwgb3JpZywgcmV0OwoKCQkJaWYgKCBqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHsKCQkJCS8vIDNyZCBjb25kaXRpb24gYWxsb3dzIE5va2lhIHN1cHBvcnQsIGFzIGl0IHN1cHBvcnRzIHRoZSBkb2NFbGVtIHByb3AgYnV0IG5vdCBDU1MxQ29tcGF0CgkJCQlkb2MgPSBlbGVtLmRvY3VtZW50OwoJCQkJZG9jRWxlbVByb3AgPSBkb2MuZG9jdW1lbnRFbGVtZW50WyBjbGllbnRQcm9wIF07CgkJCQlyZXR1cm4galF1ZXJ5LnN1cHBvcnQuYm94TW9kZWwgJiYgZG9jRWxlbVByb3AgfHwKCQkJCQlkb2MuYm9keSAmJiBkb2MuYm9keVsgY2xpZW50UHJvcCBdIHx8IGRvY0VsZW1Qcm9wOwoJCQl9CgoJCQkvLyBHZXQgZG9jdW1lbnQgd2lkdGggb3IgaGVpZ2h0CgkJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gOSApIHsKCQkJCS8vIEVpdGhlciBzY3JvbGxbV2lkdGgvSGVpZ2h0XSBvciBvZmZzZXRbV2lkdGgvSGVpZ2h0XSwgd2hpY2hldmVyIGlzIGdyZWF0ZXIKCQkJCWRvYyA9IGVsZW0uZG9jdW1lbnRFbGVtZW50OwoKCQkJCS8vIHdoZW4gYSB3aW5kb3cgPiBkb2N1bWVudCwgSUU2IHJlcG9ydHMgYSBvZmZzZXRbV2lkdGgvSGVpZ2h0XSA+IGNsaWVudFtXaWR0aC9IZWlnaHRdCgkJCQkvLyBzbyB3ZSBjYW4ndCB1c2UgbWF4LCBhcyBpdCdsbCBjaG9vc2UgdGhlIGluY29ycmVjdCBvZmZzZXRbV2lkdGgvSGVpZ2h0XQoJCQkJLy8gaW5zdGVhZCB3ZSB1c2UgdGhlIGNvcnJlY3QgY2xpZW50W1dpZHRoL0hlaWdodF0KCQkJCS8vIHN1cHBvcnQ6SUU2CgkJCQlpZiAoIGRvY1sgY2xpZW50UHJvcCBdID49IGRvY1sgc2Nyb2xsUHJvcCBdICkgewoJCQkJCXJldHVybiBkb2NbIGNsaWVudFByb3AgXTsKCQkJCX0KCgkJCQlyZXR1cm4gTWF0aC5tYXgoCgkJCQkJZWxlbS5ib2R5WyBzY3JvbGxQcm9wIF0sIGRvY1sgc2Nyb2xsUHJvcCBdLAoJCQkJCWVsZW0uYm9keVsgb2Zmc2V0UHJvcCBdLCBkb2NbIG9mZnNldFByb3AgXQoJCQkJKTsKCQkJfQoKCQkJLy8gR2V0IHdpZHRoIG9yIGhlaWdodCBvbiB0aGUgZWxlbWVudAoJCQlpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgKSB7CgkJCQlvcmlnID0galF1ZXJ5LmNzcyggZWxlbSwgdHlwZSApOwoJCQkJcmV0ID0gcGFyc2VGbG9hdCggb3JpZyApOwoJCQkJcmV0dXJuIGpRdWVyeS5pc051bWVyaWMoIHJldCApID8gcmV0IDogb3JpZzsKCQkJfQoKCQkJLy8gU2V0IHRoZSB3aWR0aCBvciBoZWlnaHQgb24gdGhlIGVsZW1lbnQKCQkJalF1ZXJ5KCBlbGVtICkuY3NzKCB0eXBlLCB2YWx1ZSApOwoJCX0sIHR5cGUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoLCBudWxsICk7Cgl9Owp9KTsKCgoKCi8vIEV4cG9zZSBqUXVlcnkgdG8gdGhlIGdsb2JhbCBvYmplY3QKd2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5OwoKLy8gRXhwb3NlIGpRdWVyeSBhcyBhbiBBTUQgbW9kdWxlLCBidXQgb25seSBmb3IgQU1EIGxvYWRlcnMgdGhhdAovLyB1bmRlcnN0YW5kIHRoZSBpc3N1ZXMgd2l0aCBsb2FkaW5nIG11bHRpcGxlIHZlcnNpb25zIG9mIGpRdWVyeQovLyBpbiBhIHBhZ2UgdGhhdCBhbGwgbWlnaHQgY2FsbCBkZWZpbmUoKS4gVGhlIGxvYWRlciB3aWxsIGluZGljYXRlCi8vIHRoZXkgaGF2ZSBzcGVjaWFsIGFsbG93YW5jZXMgZm9yIG11bHRpcGxlIGpRdWVyeSB2ZXJzaW9ucyBieQovLyBzcGVjaWZ5aW5nIGRlZmluZS5hbWQualF1ZXJ5ID0gdHJ1ZS4gUmVnaXN0ZXIgYXMgYSBuYW1lZCBtb2R1bGUsCi8vIHNpbmNlIGpRdWVyeSBjYW4gYmUgY29uY2F0ZW5hdGVkIHdpdGggb3RoZXIgZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwKLy8gYnV0IG5vdCB1c2UgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdCB1bmRlcnN0YW5kcyBhbm9ueW1vdXMKLy8gQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Qgd2F5IHRvIHJlZ2lzdGVyLgovLyBMb3dlcmNhc2UganF1ZXJ5IGlzIHVzZWQgYmVjYXVzZSBBTUQgbW9kdWxlIG5hbWVzIGFyZSBkZXJpdmVkIGZyb20KLy8gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2UgZmlsZSBuYW1lLgovLyBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzIHRvIGNhbGwKLy8gbm9Db25mbGljdCB0byBoaWRlIHRoaXMgdmVyc2lvbiBvZiBqUXVlcnksIGl0IHdpbGwgd29yay4KaWYgKCB0eXBlb2YgZGVmaW5lID09PSAiZnVuY3Rpb24iICYmIGRlZmluZS5hbWQgJiYgZGVmaW5lLmFtZC5qUXVlcnkgKSB7CglkZWZpbmUoICJqcXVlcnkiLCBbXSwgZnVuY3Rpb24gKCkgeyByZXR1cm4galF1ZXJ5OyB9ICk7Cn0KCgoKfSkoIHdpbmRvdyApOwo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
      </HTTPTask>
      <HTTPTask id="28" hostname="mps-test.haomaiche.com" path="/resources/js/common.js" url="http://mps-test.haomaiche.com/resources/js/common.js" ip="10.0.3.32" port="80" connectionId="1556" origin="HTML" ordinal="3" startTime="1337" endTime="2395">
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9yZXNvdXJjZXMvanMvY29tbW9uLmpzIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbXBzLXRlc3QuaGFvbWFpY2hlLmNvbS9mcy9pbmRleC5odG1sDQpVc2VyLUFnZW50OiBNb3ppbGxhLzQuMCAoY29tcGF0aWJsZTsgTVNJRSA4LjA7IFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgVHJpZGVudC80LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEUpDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogemgtY24NCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBtcHMtdGVzdC5oYW9tYWljaGUuY29tDQpDb29raWU6IFNIQVJFSlNFU1NJT05JRD00NWY3YzBhZS0yZWFiLTQ4NGEtYTUzZi1kYjcxMjBkMWU1NWYNCg0K</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjExMTg=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAwNyBNYXkgMjAxOSAwMDo0OToxMCBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDIxMTE4DQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpMYXN0LU1vZGlmaWVkOiBUdWUsIDA3IE1heSAyMDE5IDAwOjQ5OjEwIEdNVA0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData></ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
      </HTTPTask>
      <HTTPTask id="29" hostname="mps-test.haomaiche.com" path="/fs/fs/js/index.js?v=1.7" url="http://mps-test.haomaiche.com/fs/fs/js/index.js?v=1.7" ip="10.0.3.32" port="80" connectionId="1584" origin="HTML" ordinal="4" startTime="1337" endTime="2435">
        <QueryString>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dj0xLjc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </QueryString>
        <HTTPSplittedQueryStrings>
          <HTTPHeaderEntity name="v" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MS43</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPSplittedQueryStrings>
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9mcy9mcy9qcy9pbmRleC5qcz92PTEuNyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA0KVXNlci1BZ2VudDogTW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHpoLWNuDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ0KQ29va2llOiBTSEFSRUpTRVNTSU9OSUQ9NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVmDQoNCg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>ODY0NA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAyNyBBdWcgMjAxOSAyMzo0NzoxMCBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDg2NDQNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMjcgQXVnIDIwMTkgMjM6NDc6MTAgR01UDQoNCg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData></ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
      </HTTPTask>
      <HTTPTask id="30" hostname="mps-test.haomaiche.com" path="/resources/js/jQuery-jcMarquee.js" url="http://mps-test.haomaiche.com/resources/js/jQuery-jcMarquee.js" ip="10.0.3.32" port="80" connectionId="880" origin="HTML" ordinal="5" startTime="1337" endTime="2436">
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9yZXNvdXJjZXMvanMvalF1ZXJ5LWpjTWFycXVlZS5qcyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA0KVXNlci1BZ2VudDogTW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IHpoLWNuDQpBY2NlcHQ6ICovKg0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KSG9zdDogbXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ0KQ29va2llOiBTSEFSRUpTRVNTSU9OSUQ9NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVmDQoNCg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MjYwMw==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDI2MDMNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMTIgSnVuIDIwMTggMjM6NTM6NDYgR01UDQoNCg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>LyoKICogalF1ZXJ5IC0gamNNYXJxdWVlIHYwLjEwCiAqIENvcHlyaWdodChjKSAyMDEyIGJ5IFJpZGRpY2stZGVzaWduIAogKiBEYXRlOiAyMDEyLTAxLTA3CiAqIOebuOWFs+WPguaVsCAKICAgJ21hcnF1ZWUnOid4JywgICAgICAgIFxcIOiuvue9rua7muWKqOaWueWQke+8jOaPkOS+myBtYXJxdWVlOngg5oiWIG1hcnF1ZWU6eQogICAnbWFyZ2luX2JvdHRvbSc6JzAnLCAgXFwg6K6+572ubWFyZ2luX2JvdHRvbeWAvAogICAnbWFyZ2luX3JpZ2h0JzonMCcsICAgXFwg6K6+572ubWFyZ2luX3JpZ2h05YC8CiAgICdzcGVlZCc6JzEwJyAgICAgICAgICBcXCDorr7nva7mu5rliqjpgJ/luqYs5Y2V5L2NbW0KICog6YeN6KaB5o+Q6YaSCiAgICNNYXJxdWVlX3ggdWwgbGkgeyBmbG9hdDpsZWZ0O30gLy8g5qiq5ZCR5rua5Yqo5pe25b+F6aG76K6p5omA5pyJbGnlt6bmta7liqggCiAqIEhUTUznu5PmnoQKICAgPGRpdiBpZD0iTWFycXVlZSI+IAogICAgICAgICA8dWw+IAogICAgICAgICAgICAgIDxsaT4gCiAgICAgICAgICAgICAgICAgIDxkaXY+PGltZyBoZWlnaHQ9IjUwIiB3aWR0aD0iMTAwIiBhbHQ9IuWbvueJhzEiIC8+PC9kaXY+CiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgPC91bD4gCiAgIDwvZGl2PiAgCiAqLwo7KGZ1bmN0aW9uKCQpewoJJC5mbi5qY01hcnF1ZWUgPSBmdW5jdGlvbihvcHRpb25zKSB7CgkJdmFyIGRlZmF1bHRzID0gewoJCQknbWFycXVlZSc6J3gnLAoJCQknbWFyZ2luX2JvdHRvbSc6JzAnLAoJCQknbWFyZ2luX3JpZ2h0JzonMCcsCiAgICAgICAgICAgICdzcGVlZCc6JzEwJwoJCX07CgkJdmFyIG9wdGlvbnMgPSAkLmV4dGVuZChkZWZhdWx0cyxvcHRpb25zKTsKCQlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewoJICAgICAgICB2YXIgJG1hcnF1ZWUgPSAkKHRoaXMpLAoJCQkgICAgJG1hcnF1ZWVfc2Nyb2xsID0gJG1hcnF1ZWUuY2hpbGRyZW4oJ3VsJyk7CgkJCSRtYXJxdWVlX3Njcm9sbC5hcHBlbmQoIjxsaSBjbGFzcz0nY2xvbmUnPiIrIjwvbGk+Iik7CgkJCSRtYXJxdWVlX3Njcm9sbC5maW5kKCdsaScpLmVxKDApLmNoaWxkcmVuKCkuY2xvbmUoKS5hcHBlbmRUbygnLmNsb25lJyk7CgkJCXZhciAkbWFycXVlZV9sZWZ0ID0gJG1hcnF1ZWVfc2Nyb2xsLmZpbmQoJ2xpJyk7CgkJCWlmIChvcHRpb25zLm1hcnF1ZWUgPT0gJ3gnKSB7CgkJCQl2YXIgeCA9IDA7CgkJICAgICAgICAkbWFycXVlZV9zY3JvbGwuY3NzKCd3aWR0aCcsJzEwMDAlJyk7CgkJCQkkbWFycXVlZV9sZWZ0LmZpbmQoJ2RpdicpLmNzcyh7J21hcmdpbi1yaWdodCc6b3B0aW9ucy5tYXJnaW5fcmlnaHR9KTsKCQkJCSRtYXJxdWVlX2xlZnQuY3NzKHsnbWFyZ2luLXJpZ2h0JzpvcHRpb25zLm1hcmdpbl9yaWdodH0pOwogICAgICAgICAgICAgICAgZnVuY3Rpb24gTWFycXVlZV94KCl7IAoJICAgICAgICAgICAgICAgICRtYXJxdWVlLnNjcm9sbExlZnQoKyt4KTsKCQkJCQlfbWFyZ2luID0gcGFyc2VJbnQoJG1hcnF1ZWVfbGVmdC5maW5kKCdkaXYnKS5jc3MoJ21hcmdpbi1yaWdodCcpKTsKCQkgICAgICAgICAgICBpZih4PT0kbWFycXVlZV9sZWZ0LndpZHRoKCkrX21hcmdpbikgeyB4ID0gMCB9OwoJCQkJfTsKCQkgICAgCXZhciBNeU1hcj1zZXRJbnRlcnZhbChNYXJxdWVlX3gsb3B0aW9ucy5zcGVlZCk7IAogICAgICAgICAgICAgICAgJG1hcnF1ZWUuaG92ZXIoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKE15TWFyKTsKICAgICAgICAgICAgICAgIH0sZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICBNeU1hcj1zZXRJbnRlcnZhbChNYXJxdWVlX3gsb3B0aW9ucy5zcGVlZCk7CiAgICAgICAgICAgICAgICB9KTsKCQkJfQoJCQlpZiAob3B0aW9ucy5tYXJxdWVlID09ICd5JykgewoJCQkJdmFyIHkgPSAwOwoJCSAgICAgICAgJG1hcnF1ZWVfc2Nyb2xsLmNzcygnaGVpZ2h0JywnMTAwMCUnKTsKCQkJCSRtYXJxdWVlX2xlZnQuZmluZCgnZGl2JykuY3NzKCdtYXJnaW4tYm90dG9tJyxvcHRpb25zLm1hcmdpbl9ib3R0b20pOwoJCQkJJG1hcnF1ZWVfbGVmdC5jc3MoJ21hcmdpbi1ib3R0b20nLG9wdGlvbnMubWFyZ2luX2JvdHRvbSk7CiAgICAgICAgICAgICAgICBmdW5jdGlvbiBNYXJxdWVlX3koKXsgCgkgICAgICAgICAgICAgICAgJG1hcnF1ZWUuc2Nyb2xsVG9wKCsreSk7CgkJCQkJX21hcmdpbiA9IHBhcnNlSW50KCRtYXJxdWVlX2xlZnQuZmluZCgnZGl2JykuY3NzKCdtYXJnaW4tYm90dG9tJykpOwoJCSAgICAgICAgICAgIGlmKHk9PSRtYXJxdWVlX2xlZnQuaGVpZ2h0KCkrX21hcmdpbikgeyB5ID0gMCB9OwoJCQkJfTsKCQkgICAgCXZhciBNeU1hcj1zZXRJbnRlcnZhbChNYXJxdWVlX3ksb3B0aW9ucy5zcGVlZCk7IAogICAgICAgICAgICAgICAgJG1hcnF1ZWUuaG92ZXIoZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKE15TWFyKTsKICAgICAgICAgICAgICAgIH0sZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgICAgICBNeU1hcj1zZXRJbnRlcnZhbChNYXJxdWVlX3ksb3B0aW9ucy5zcGVlZCk7CiAgICAgICAgICAgICAgICB9KTsKCQkJfTsKCQl9KTsKCX07Cn0pKGpRdWVyeSk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
      </HTTPTask>
      <HTTPTask id="31" url="https://s13.cnzz.com/z_stat.php?id=1262932335&amp;web_id=1262932335" origin="HTML" ordinal="6" startTime="1337">
        <HTTPRequest method="GET" />
      </HTTPTask>
      <HTTPTask id="32" hostname="mps-test.haomaiche.com" path="/resources/images/logo_1.png" url="http://mps-test.haomaiche.com/resources/images/logo_1.png" ip="10.0.3.32" port="80" connectionId="1532" origin="HTML" ordinal="7" startTime="1337" endTime="2392">
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9yZXNvdXJjZXMvaW1hZ2VzL2xvZ29fMS5wbmcgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9tcHMtdGVzdC5oYW9tYWljaGUuY29tL2ZzL2luZGV4Lmh0bWwNClVzZXItQWdlbnQ6IE1vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDguMDsgV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzQuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3Mjk7IE1lZGlhIENlbnRlciBQQyA2LjA7IC5ORVQ0LjBDOyAuTkVUNC4wRSkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1jbg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG1wcy10ZXN0Lmhhb21haWNoZS5jb20NCkNvb2tpZTogU0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aW1hZ2UvcG5n</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NTkyNA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNSBHTVQNCkNvbnRlbnQtVHlwZTogaW1hZ2UvcG5nDQpDb250ZW50LUxlbmd0aDogNTkyNA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KTGFzdC1Nb2RpZmllZDogVHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQNCg0K</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>iVBORw0KGgoAAAANSUhEUgAAAJ4AAAAwCAYAAADgk8PlAAAACXBIWXMAAAsTAAALEwEAmpwYAAAKTWlDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVN3WJP3Fj7f92UPVkLY8LGXbIEAIiOsCMgQWaIQkgBhhBASQMWFiApWFBURnEhVxILVCkidiOKgKLhnQYqIWotVXDjuH9yntX167+3t+9f7vOec5/zOec8PgBESJpHmomoAOVKFPDrYH49PSMTJvYACFUjgBCAQ5svCZwXFAADwA3l4fnSwP/wBr28AAgBw1S4kEsfh/4O6UCZXACCRAOAiEucLAZBSAMguVMgUAMgYALBTs2QKAJQAAGx5fEIiAKoNAOz0ST4FANipk9wXANiiHKkIAI0BAJkoRyQCQLsAYFWBUiwCwMIAoKxAIi4EwK4BgFm2MkcCgL0FAHaOWJAPQGAAgJlCLMwAIDgCAEMeE80DIEwDoDDSv+CpX3CFuEgBAMDLlc2XS9IzFLiV0Bp38vDg4iHiwmyxQmEXKRBmCeQinJebIxNI5wNMzgwAABr50cH+OD+Q5+bk4eZm52zv9MWi/mvwbyI+IfHf/ryMAgQAEE7P79pf5eXWA3DHAbB1v2upWwDaVgBo3/ldM9sJoFoK0Hr5i3k4/EAenqFQyDwdHAoLC+0lYqG9MOOLPv8z4W/gi372/EAe/tt68ABxmkCZrcCjg/1xYW52rlKO58sEQjFu9+cj/seFf/2OKdHiNLFcLBWK8ViJuFAiTcd5uVKRRCHJleIS6X8y8R+W/QmTdw0ArIZPwE62B7XLbMB+7gECiw5Y0nYAQH7zLYwaC5EAEGc0Mnn3AACTv/mPQCsBAM2XpOMAALzoGFyolBdMxggAAESggSqwQQcMwRSswA6cwR28wBcCYQZEQAwkwDwQQgbkgBwKoRiWQRlUwDrYBLWwAxqgEZrhELTBMTgN5+ASXIHrcBcGYBiewhi8hgkEQcgIE2EhOogRYo7YIs4IF5mOBCJhSDSSgKQg6YgUUSLFyHKkAqlCapFdSCPyLXIUOY1cQPqQ28ggMor8irxHMZSBslED1AJ1QLmoHxqKxqBz0XQ0D12AlqJr0Rq0Hj2AtqKn0UvodXQAfYqOY4DRMQ5mjNlhXIyHRWCJWBomxxZj5Vg1Vo81Yx1YN3YVG8CeYe8IJAKLgBPsCF6EEMJsgpCQR1hMWEOoJewjtBK6CFcJg4Qxwicik6hPtCV6EvnEeGI6sZBYRqwm7iEeIZ4lXicOE1+TSCQOyZLkTgohJZAySQtJa0jbSC2kU6Q+0hBpnEwm65Btyd7kCLKArCCXkbeQD5BPkvvJw+S3FDrFiOJMCaIkUqSUEko1ZT/lBKWfMkKZoKpRzame1AiqiDqfWkltoHZQL1OHqRM0dZolzZsWQ8ukLaPV0JppZ2n3aC/pdLoJ3YMeRZfQl9Jr6Afp5+mD9HcMDYYNg8dIYigZaxl7GacYtxkvmUymBdOXmchUMNcyG5lnmA+Yb1VYKvYqfBWRyhKVOpVWlX6V56pUVXNVP9V5qgtUq1UPq15WfaZGVbNQ46kJ1Bar1akdVbupNq7OUndSj1DPUV+jvl/9gvpjDbKGhUaghkijVGO3xhmNIRbGMmXxWELWclYD6yxrmE1iW7L57Ex2Bfsbdi97TFNDc6pmrGaRZp3mcc0BDsax4PA52ZxKziHODc57LQMtPy2x1mqtZq1+rTfaetq+2mLtcu0W7eva73VwnUCdLJ31Om0693UJuja6UbqFutt1z+o+02PreekJ9cr1Dund0Uf1bfSj9Rfq79bv0R83MDQINpAZbDE4Y/DMkGPoa5hpuNHwhOGoEctoupHEaKPRSaMnuCbuh2fjNXgXPmasbxxirDTeZdxrPGFiaTLbpMSkxeS+Kc2Ua5pmutG003TMzMgs3KzYrMnsjjnVnGueYb7ZvNv8jYWlRZzFSos2i8eW2pZ8ywWWTZb3rJhWPlZ5VvVW16xJ1lzrLOtt1ldsUBtXmwybOpvLtqitm63Edptt3xTiFI8p0in1U27aMez87ArsmuwG7Tn2YfYl9m32zx3MHBId1jt0O3xydHXMdmxwvOuk4TTDqcSpw+lXZxtnoXOd8zUXpkuQyxKXdpcXU22niqdun3rLleUa7rrStdP1o5u7m9yt2W3U3cw9xX2r+00umxvJXcM970H08PdY4nHM452nm6fC85DnL152Xlle+70eT7OcJp7WMG3I28Rb4L3Le2A6Pj1l+s7pAz7GPgKfep+Hvqa+It89viN+1n6Zfgf8nvs7+sv9j/i/4XnyFvFOBWABwQHlAb2BGoGzA2sDHwSZBKUHNQWNBbsGLww+FUIMCQ1ZH3KTb8AX8hv5YzPcZyya0RXKCJ0VWhv6MMwmTB7WEY6GzwjfEH5vpvlM6cy2CIjgR2yIuB9pGZkX+X0UKSoyqi7qUbRTdHF09yzWrORZ+2e9jvGPqYy5O9tqtnJ2Z6xqbFJsY+ybuIC4qriBeIf4RfGXEnQTJAntieTE2MQ9ieNzAudsmjOc5JpUlnRjruXcorkX5unOy553PFk1WZB8OIWYEpeyP+WDIEJQLxhP5aduTR0T8oSbhU9FvqKNolGxt7hKPJLmnVaV9jjdO31D+miGT0Z1xjMJT1IreZEZkrkj801WRNberM/ZcdktOZSclJyjUg1plrQr1zC3KLdPZisrkw3keeZtyhuTh8r35CP5c/PbFWyFTNGjtFKuUA4WTC+oK3hbGFt4uEi9SFrUM99m/ur5IwuCFny9kLBQuLCz2Lh4WfHgIr9FuxYji1MXdy4xXVK6ZHhp8NJ9y2jLspb9UOJYUlXyannc8o5Sg9KlpUMrglc0lamUycturvRauWMVYZVkVe9ql9VbVn8qF5VfrHCsqK74sEa45uJXTl/VfPV5bdra3kq3yu3rSOuk626s91m/r0q9akHV0IbwDa0b8Y3lG19tSt50oXpq9Y7NtM3KzQM1YTXtW8y2rNvyoTaj9nqdf13LVv2tq7e+2Sba1r/dd3vzDoMdFTve75TsvLUreFdrvUV99W7S7oLdjxpiG7q/5n7duEd3T8Wej3ulewf2Re/ranRvbNyvv7+yCW1SNo0eSDpw5ZuAb9qb7Zp3tXBaKg7CQeXBJ9+mfHvjUOihzsPcw83fmX+39QjrSHkr0jq/dawto22gPaG97+iMo50dXh1Hvrf/fu8x42N1xzWPV56gnSg98fnkgpPjp2Snnp1OPz3Umdx590z8mWtdUV29Z0PPnj8XdO5Mt1/3yfPe549d8Lxw9CL3Ytslt0utPa49R35w/eFIr1tv62X3y+1XPK509E3rO9Hv03/6asDVc9f41y5dn3m978bsG7duJt0cuCW69fh29u0XdwruTNxdeo94r/y+2v3qB/oP6n+0/rFlwG3g+GDAYM/DWQ/vDgmHnv6U/9OH4dJHzEfVI0YjjY+dHx8bDRq98mTOk+GnsqcTz8p+Vv9563Or59/94vtLz1j82PAL+YvPv655qfNy76uprzrHI8cfvM55PfGm/K3O233vuO+638e9H5ko/ED+UPPR+mPHp9BP9z7nfP78L/eE8/sl0p8zAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAAxRSURBVHja7J17sJRlHcc/e87ZAyKEYgiSQYZ4QQEhIK8g5KhZqDNN3vKKWTnOZKUlWiSmmE5JOhhdFM20xKwk0nR0QhQjFUVBBbkrN427xvVcdvvj+b7D6/q+z+Xd3UNnZr8zOyy7z/vuc/k+v/vznlyxWKSGGtoadbUpqKFGvBpqxKuhhmoi9/iA40Panw48IMIWSr5rAG4F7gBywC+ArwPbS38T2AGcCSwAvgXclHLPSqEBeEK/NUH/7myH61UAzgFmW9qcAdwFdANaEr5vBO7UnO81NISQFDgBONDS5nX92xM4DthXr1KsAJaKbCMc96wU3tB4vwR00au94W7g35rTASUbtQB0AMYDh1rusRFYCQzTmra5sAN2hBCvK2ATj+9qcQH6AUdZ2s6UxOkLfK6NJMVMoA/Qv51qpwXATyTFzgbuB1pj37cC++hlwyeAn0ny7Q3i1QHPhBDvIO2SNLwAbNX7Y1IkXZx4AAdr8KtLJtGF3UA98BlPqb0YWAWcBryn68tBMeNOt22MTtIUSfgQ+DGwQeM+Beicse+NbaRhbHglhHiDHOppDtAEdASGW9ptA17W+7nA6ICFLGrH7wfcKInpwgrgamAT8HdgVkbixEmSA/Ke94ls11YHiafKhk7CH9R3tAantHPfYmYI8UY4yBQZvJ2BYy1t/yW1jJyMHYGd7ifH5VQPVfEk8B1gif7/gV7l4loZ8c0O8uVEvKuBhZZ2FwInpXy3EJgYs+d6SGIv1m83yabr5Ojzaq1TLqWfLYGaoE5CJgQd1O9lPsTrLMky2tJmpbyoIyQZ+zra9gTWZFBV5wK3yVazYTswGbgl5lV3A3pnUKkN2hyL9Nk5Unu+zskjwDLL973laSeZJq1yFtaWzN/x6luz5nuGg3gvAReLfHnLWDtpnosea1HMEBnIidy7fIh3IXCd7Kk0HBIzdrs57vdVSbzbAu2Sa7VAeUfb94EfAA+WfP5thVFCbLSinKrxIt7hMsx9SbcUuEZSKQkdFdZI26j3AX8t+awpdr9GjbW7pQ8fyCyJpH4aWc6UZPYl3gLge1lDYD7EO91Bukgq+hq7B8Skhy/6a5B5j7YzEkhXp3H0yDBHc4Dfa5FvCZCazcD1JdIqabHPt6jYCY7fuBw4y9HmAeAZR5t63Wd0wLy8Wa5ra8PB2uWVxAaJ/hAc5SFJI7yY8NmRksqh2AqMU+zrQuArAdf+DnjMMbcTZPckSdrxwDrHZrzGsYYLMUF9l1TqjokLhuAJygj4uyReP0mZgmWAu0SmnFRQV8dCzoiFXXztgqGeMaeNKdJ0iMawMdB7vVtO0yEy8HMB0uB2x8L8UBsiCfcAf3PMybUOW7pZxP6PR397BxJvDfB2OdKnwUN63AL80mK8TpNKyQE/BS5JabdDO/SPIqsvPini+WBRzJb5iPuOCboWPe27nBYuutcES4wtySGYCCy3tBkDXJHy3RLg59jjmmdZ5jnCw8Cjnn0eEuihvixhUzXi7ZRKSOvUbuCfMuhzlh2MPLunAkkXhQ8Ge7adC2xO+Hytw9ay4Rx50754UJsxDQdJGtYnfNckZ2OpYz5ud6jYxTIRfM2tEYFz8myGMFgQ8eqBkZZBbojZVIMc9uBCTNYgcjBc9mVRqmoU9ixIXLUsU9tOun6rxtgjQE3m5XU3aTw3p9hhaV6sa8HHWzboNAdpUSjnMEebOzHZju4e0rkHcGIAZ3YpLNMZd3ourkGa4iaWi3iHOozy5TGVcpLDs50nMgwBHvIkUxHY33Nw9QobfF/vN2CKGs6W6vK9xxx5mp0wudHDAhZlnMOmGgNcmvLdKtl9Nrvwi5br47bpOIXAfDZ3HugVMMY8MEVECimr+40cHS/iHSNVaws1RDbTsSnqA6m/yJMd5VDJ5Xjo8XDJO5qcUcCnPO/RgikpagLGSs364lfsSWsloaeItU8KWa7HHlTvIjXcyWMe+lA91AcSNZKsK0PCKUMsaqYFk/dEoY6jLfdZB7wWk4xtgX9I1QwLuOYm4HlJufEB170tu6vZQobvAp9P+X4S8CcHma4LHMv/EzZoXr1svK4iXhrWy5iPCPppS9vXgP9Keg4O6HCR7KU7Tykc5Pt7s+S912Fywb67eodU/LuWNmdgMgxJ6vV+kbbFcv0ohU/aK94sde4aHPbdQEeoZYveD7XYYnHJuBP4ptSNqwyqoPDM0R4DW48pBtgm4jRrsD0wKTpbMj8n9fGaxnO5iOKLaXw8rVV6/zXAeexJV0U5y9XAWx6/8R5wmUheqWOBTbIZr7KYSEmhnusD7bu6JC/dRrwjsddtPRu7x2CHRIgqVzZJEvmgIyaA64NXFLdKUvF/DliMwwNV7CLgBoe0KmIqs18vgyQLsVe3ZMXoQAdhtmOTlR1OqcdeU1fAlGAjQ3aAI6a0PEPfTsU/aDsrRdLs53l9AZOLvTnAMG/GFDrs9PC8i7E++YYfWhUSqdbB5zxwckCfmklOR1aUePthL3N/C1NgiewoW+rmObLl9EZ6xs8KpYarMAxTSVLwWLyoqmZgQP8KmOzBpVUgRYMk5DjKDNRaMNBhl5fiQ0wtZVWJ19thW82WswDmzESjpe3MjLtxuGfb5STnDccQHpEPQQfCqjlC8YbFS64EjsWkIwmY5yWVjH2ldcombebIrumMOU1mM/rnZ+hXSDXJc3IqSlXVKNo3nqoy8YYRdspwFmHnYoIlXp1j0TbFPLEDHbGlF0nOnfpMim/t3AsJE/JZTNlQi4e6zAeGbApU7/xv3AterPcNFb5/UbbzUYHXzMavHrL0uhZf4nXBfmZivuJPSB0f6FDJuzJMzlDPCd+e4i1uxtTO2Wy7XTE70DcXu1jhhPWxRSgqNFJwELioTd3B0a5eYZ2lmIrpKyopadTPLtjP3iZhIiZP7LtJuwC/xmSCij7EG4w9TfZ6TIrZshAtmPxsKLoF7MZ5JFedbImFe9LQKBL5kq5FoZPHEuawl4jY6jBrtuNXHxfhXMIC7tWUwgMzXLclbfMnEe8LFlbvZs/RRJcdtQT7IZc0HIb/oeuXMqpyMOcLvhzQfkpKDKsDppjgBNLPVkSSbCsmgO5j9/am/R4+BxP0nhdi49kGu4E9UejTHLvgGeyl22kYhCmb8sHcjPbWcPyqN+K/c6NF3b+KuzAzwsX6bZf9OQJ7NXc5qjZH9Z8i8ColhQEu4tkKJntIDW7DZBXyFjtwssfkJoVRfKuNVxF+aAiR+uYAcm/DJPi3Wtrci0mJ+TwB6RJMTniFo93zVQjX7JZ5NCngmuik3PvYw2alvFqdEG2wEu8h4MqU7/KYaH29xetcgsl3ZslWdMc/frco429chcmKhBjVrsDpTsxJtOM8JMkBmLzreI+NtaoKkujEwPbPAY9T4QxKXYpamWq5ppeFdHMwp7FezdifPvjX6s0nPKo/guQqkTQ8CfzWs+3D+B/5G0u2o5blomPgpov4UPG0XV2K2z+O5DSUzW6YjKn2nVtGf4Z7xop2xJycEGk6Gb/KZ+R9jgtwXj7ElJz7oBd7Dpe3JbpjD/iX4gPKPD8bQjxkz3zDMxyyUjv4aso7edSIf7ZhbQaCTwwICTTLU10Q+BuPBCzU1zAHf9oSQ/EvnACTtlvalsRD9pNrEguYM6APVEAcdyG9QjfJjgyxfy4gLJk/PUDFlnq4d3m27SfytSVODmy/oExhEky8AZiT4hd4XH9ZoPhOw0j8y6DS1GwHvRr1ymssP8I/3fMOptq3JeM4puNfe3ceYYn6clBP2LGDAtkSAN5ub+nCXYpJjfQK2Ln3Yk6+Fwh/oHcUhzvfs/0u4OmEzwdhHsxTjL2aZTf6OizNIl053uRGScspHm0HYw5nT20D4h2O3/MEI2zGFNhWnXh9MUHSizLcpz9tF2V/OkHi5TAPwBlb5r0nYX/eSYjUuxL3YyHqMAHlR+WcVBMjAhwrMCX9b1arM5F0ughzKusiixd5TzVFryfmyYkpzVbsS3lPydyMycPeRGUqT97DPLTHlxBj2mDuTsPvbMUWzcMNVLY44WMSbywmMt8RU9cfdxLy8mruwARR+2EO4PQnW9VJKKJg7CbMozLuw0TESSBeA6YgtFUbav8EtV+Qxx6VNq1S2OiJKuzuaZjMwxGOudoHk/H4SxXntLPmZxkff+pn9KjcdZiau+lU53zHRxe29rfMatgbqP1lnxpqxKuhRrwaaqgq/jcAYvvG7JSp8FUAAAAASUVORK5CYII=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
      </HTTPTask>
      <HTTPTask id="33" hostname="mps-test.haomaiche.com" path="/fs/fs/fsAskPrice.html" url="http://mps-test.haomaiche.com/fs/fs/fsAskPrice.html" ip="10.0.3.32" port="80" connectionId="1532" origin="HTML" ordinal="8" startTime="1338" endTime="2448">
        <HTTPRequest method="GET">
          <HTTPHeaders>
            <HTTPHeaderEntity name="Referer" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvaW5kZXguaHRtbA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="User-Agent" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Encoding" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept-Language" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>emgtY24=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Accept" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Ki8q</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Host" index="6">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Cookie" index="7">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>R0VUIC9mcy9mcy9mc0Fza1ByaWNlLmh0bWwgSFRUUC8xLjENClJlZmVyZXI6IGh0dHA6Ly9tcHMtdGVzdC5oYW9tYWljaGUuY29tL2ZzL2luZGV4Lmh0bWwNClVzZXItQWdlbnQ6IE1vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDguMDsgV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzQuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3Mjk7IE1lZGlhIENlbnRlciBQQyA2LjA7IC5ORVQ0LjBDOyAuTkVUNC4wRSkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1jbg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG1wcy10ZXN0Lmhhb21haWNoZS5jb20NCkNvb2tpZTogU0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg0KDQo=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
            <HTTPCookies>
              <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
            </HTTPCookies>
          </HTTPHeaders>
        </HTTPRequest>
        <HTTPResponse>
          <HTTPHeaders>
            <HTTPHeaderEntity name="Server" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>bmdpbngvMS4xMC4y</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Date" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Type" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>dGV4dC9odG1s</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Content-Length" index="3">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NDA2NA==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Connection" index="4">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="Last-Modified" index="5">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPAllHeaders>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sDQpDb250ZW50LUxlbmd0aDogNDA2NA0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KTGFzdC1Nb2RpZmllZDogVHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQNCg0K</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPAllHeaders>
          </HTTPHeaders>
          <HTTPBody>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPgo8aHRtbCB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CiAgPGhlYWQ+CiAgICA8dGl0bGU+YXNrUHJpY2UuaHRtbDwvdGl0bGU+CiAgICA8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCIvPgoJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLi4vLi4vcmVzb3VyY2VzL2pzL2Vhc3l1aS0xLjMuMi90aGVtZXMvZ3JheS9lYXN5dWkuY3NzIiAvPgogICAJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLi4vLi4vcmVzb3VyY2VzL2pzL2Vhc3l1aS0xLjMuMi90aGVtZXMvaWNvbi5jc3MiIC8+Cgk8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSIuLi8uLi9yZXNvdXJjZXMvY3NzL2Jhc2UuY3NzIiAvPgogICAgCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9yZXNvdXJjZXMvanMvanF1ZXJ5LTEuNy4yLmpzIj48L3NjcmlwdD4KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uLy4uL3Jlc291cmNlcy9qcy9qcXVlcnkuZWFzeXVpLm1pbi5qcyI+PC9zY3JpcHQ+CiAgIAk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9yZXNvdXJjZXMvanMvZWFzeXVpLTEuMy4yL2xvY2FsZS9lYXN5dWktbGFuZy16aF9DTi5qcyI+PC9zY3JpcHQ+Cgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9yZXNvdXJjZXMvanMvanF1ZXJ5LmNvdW50ZG93bi5qcyI+PC9zY3JpcHQ+CiAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uLy4uL3Jlc291cmNlcy9qcy9jb21tb24uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iLi4vLi4vcmVzb3VyY2VzL2pzL3NlbGVjdFRvb2wuanM/dj0yLjciPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ianMvZnNBc2tQcmljZS5qcz92PTEuMCI+PC9zY3JpcHQ+CiAgPC9oZWFkPgogIAogIDxib2R5PgogICAgPHRhYmxlIGlkPSJmc0Fza1ByaWNlIj48L3RhYmxlPgogICAgPGRpdiBpZD0idGIiPgogICAgCTx0YWJsZT4KICAgIAkJPHRyPgogICAgCQkJPHRkPuivouS7t+WNleWPt++8mjxpbnB1dCBpZD0iYXNrcENvZGUiIHR5cGU9InRleHQiICAgLz4gPC90ZD4KICAgIAkJCTx0ZD7or6Lku7fkurrvvJo8aW5wdXQgaWQ9ImFza3BVc2VyTmFtZSIgdHlwZT0idGV4dCIgICAvPiA8L3RkPgogICAgCQkJPHRkPuaJgOWxnui9puWei++8mjxpbnB1dCBpZD0ic21vZGVsVHlwZSIgbmFtZT0ic21vZGVsVHlwZSIgICBjbGFzcz0iZWFzeXVpLWNvbWJvYm94IiAvPiAgPC90ZD4KICAgIAkJCTx0ZCBzdHlsZT0icGFkZGluZy1sZWZ0OiA1cHg7IiBjb2xzcGFuPSIyIj4gCiAgICAJCQkJPGEgaHJlZj0iIyIgY2xhc3M9ImVhc3l1aS1saW5rYnV0dG9uIiBpZD0ic2VhcmNoQnV0dG9uIiBpY29uQ2xzPSJpY29uLXNlYXJjaCI+5p+l6K+iPC9hPgogICAgCQkJPC90ZD4KICAgIAkJPC90cj4KICAgIAk8L3RhYmxlPgoJPC9kaXY+CgkKCTxkaXYgaWQ9ImRldGFpbERsZyIgY2xhc3M9ImVhc3l1aS1kaWFsb2ciIHN0eWxlPSJwYWRkaW5nOiAxMHB4OyI+CgkJCTxmb3JtIGlkPSJ3ZWJBcnRpY2xldHlwZUZvcm0iIG1ldGhvZD0icG9zdCI+CgkJCQk8dGFibGUgY2xhc3M9ImZyb21UYWJsZSI+CgkJCQkJPHRyPgoJCQkJCQk8dGQgY2xhc3M9ImxlZnRUZCI+CgkJCQkJCQnor6Lku7fljZXnvJblj7fvvJoKCQkJCQkJPC90ZD4KCQkJCQkJPHRkIGNsYXNzPSJyaWdodFRkIj4KCQkJCQkJCTxzcGFuIGlkPSJsb29rX2Fza3BDb2RlIj48L3NwYW4+CgkJCQkJCTwvdGQ+CgkJCQkJPC90cj4KCQkJCQk8dHI+CgkJCQkJCTx0ZCBjbGFzcz0ibGVmdFRkIj4KCQkJCQkJCei9puWei++8mgoJCQkJCQk8L3RkPgoJCQkJCQk8dGQgY2xhc3M9InJpZ2h0VGQiPgoJCQkJCQk8c3BhbiBpZD0ibG9va19hc2twVHlwZU5hbWUiPjwvc3Bhbj4mbmJzcDsJPHNwYW4gaWQ9Imxvb2tfYXNrcE1vZGVsTmFtZSI+PC9zcGFuPgoJCQkJCQk8L3RkPgoJCQkJCTwvdHI+CgkJCQkJPHRyPgoJCQkJCQk8dGQgY2xhc3M9ImxlZnRUZCI+CgkJCQkJCQnnlKjmiLflp5PlkI3vvJoKCQkJCQkJPC90ZD4KCQkJCQkJPHRkIGNsYXNzPSJyaWdodFRkIj4KCQkJCQkJCTxzcGFuIGlkPSJsb29rX3VzZXJOYW1lIj48L3NwYW4+CgkJCQkJCTwvdGQ+CgkJCQkJPC90cj4KCQkJCQk8dHI+CgkJCQkJCTx0ZCBjbGFzcz0ibGVmdFRkIj4KCQkJCQkJCeaJi+acuuWPt+egge+8mgoJCQkJCQk8L3RkPgoJCQkJCQk8dGQgY2xhc3M9InJpZ2h0VGQiPgoJCQkJCQkJPHNwYW4gaWQ9Imxvb2tfdXNlclBob25lIj48L3NwYW4+CgkJCQkJCTwvdGQ+CgkJCQkJPC90cj4KCQkJCQk8dHI+CgkJCQkJCTx0ZCBjbGFzcz0ibGVmdFRkIj4KCQkJCQkJCei9pui6q+minOiJsu+8mgoJCQkJCQk8L3RkPgoJCQkJCQk8dGQgY2xhc3M9InJpZ2h0VGQiPgoJCQkJCQkJPHNwYW4gaWQ9Imxvb2tfYXNrcE91dENvbG9yIj48L3NwYW4+CgkJCQkJCTwvdGQ+CgkJCQkJPC90cj4KCQkJCQk8dHI+CgkJCQkJCTx0ZCBjbGFzcz0ibGVmdFRkIj4KCQkJCQkJCeeJjOeFp++8mgoJCQkJCQk8L3RkPgoJCQkJCQk8dGQgY2xhc3M9InJpZ2h0VGQiPgoJCQkJCQkJPHNwYW4gaWQ9Imxvb2tfYXNrcExpY2Vuc2UiPjwvc3Bhbj4KCQkJCQkJPC90ZD4KCQkJCQk8L3RyPgoJCQkJCTx0cj4KCQkJCQk8dGQgY2xhc3M9ImxlZnRUZCBhc2twQnV5YXJlYV90aXRsZSIgPgoJCQkJCQnmhI/lkJHotK3kubDml7bpl7TvvJoKCQkJCQk8L3RkPgoJCQkJCTx0ZCBjbGFzcz0icmlnaHRUZCI+CgkJCQkJCTxzcGFuIGlkPSJsb29rX2Fza3BCdXlUaW1lIj48L3NwYW4+CgkJCQkJPC90ZD4KCQkJCQk8L3RyPgoJCQkJPHRyPgkKCQkJCQk8dGQgY2xhc3M9ImxlZnRUZCI+CgkJCQkJCeeUqOaIt+aJgOWcqOS9jee9ru+8mgoJCQkJCTwvdGQ+CgkJCQkJPHRkIGNsYXNzPSJyaWdodFRkIj4KCQkJCQkJPHNwYW4gaWQ9Imxvb2tfYXNrcFVzZXJBcmVhIj48L3NwYW4+CgkJCQkJPC90ZD4KCQkJCTwvdHI+CgkJCQkJPHRyPgoJCQkJCQk8dGQgY2xhc3M9ImxlZnRUZCI+CgkJCQkJCQnotLfmrL7otK3ovabvvJoKCQkJCQkJPC90ZD4KCQkJCQkJPHRkIGNsYXNzPSJyaWdodFRkIj4KCQkJCQkJCTxzcGFuIGlkPSJsb29rX2Fza3BMb2FuIj48L3NwYW4+CgkJCQkJCTwvdGQ+CgkJCQkJPC90cj4KCQkJCQk8dHI+CgkJCQkJCTx0ZCBjbGFzcz0ibGVmdFRkIj4KCQkJCQkJCee9ruaNoui0rei9pu+8mgoJCQkJCQk8L3RkPgoJCQkJCQk8dGQgY2xhc3M9InJpZ2h0VGQiPgoJCQkJCQkJPHNwYW4gaWQ9Imxvb2tfYXNrcFJlcGxhY2UiPjwvc3Bhbj4KCQkJCQkJPC90ZD4KCQkJCQk8L3RyPgoJCQkJCTx0cj4KCQkJCQkJPHRkIGNsYXNzPSJsZWZ0VGQiPuaMh+WumuaKpeS7t+aXtumXtO+8mjwvdGQ+CgkJCQkJCTx0ZCBjbGFzcz0icmlnaHRUZCI+CgkJCQkJCQk8c3BhbiBpZD0ibG9va19hc2twUmVzcFRpbWUiPjwvc3Bhbj4KCQkJCQkJPC90ZD4KCQkJCQk8L3RyPgoJCQkJCTx0cj4KCQkJCQkJPHRkIGNsYXNzPSJsZWZ0VGQiPgoJCQkJCQkJ5oi357GN5omA5Zyo5Zyw77yaCgkJCQkJCTwvdGQ+CgkJCQkJCTx0ZCBjbGFzcz0icmlnaHRUZCI+CgkJCQkJCQk8c3BhbiBpZD0ibG9va19hc2twTG9jYXRpb24iPjwvc3Bhbj4KCQkJCQkJPC90ZD4KCQkJCQk8L3RyPgoJCQkJPC90YWJsZT4KCQkJPC9mb3JtPgoJCTwvZGl2PgoJCQoJCTxkaXYgaWQ9ImFza1JlY29yZERsZyIgY2xhc3M9ImVhc3l1aS1kaWFsb2ciIHN0eWxlPSJwYWRkaW5nOiAxMHB4OyI+CgkgICAgICAgPHRhYmxlIGlkPSJhc2tSZWNvcmRUYWJsZSI+PC90YWJsZT4JCQoJICAgIDwvZGl2PgogIDwvYm9keT4KPC9odG1sPgo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPBody>
        </HTTPResponse>
        <HTTPTask id="34" hostname="mps-test.haomaiche.com" path="/resources/js/jquery.countdown.js" url="http://mps-test.haomaiche.com/resources/js/jquery.countdown.js" ip="10.0.3.32" port="80" connectionId="1472" origin="HTML" ordinal="1" startTime="2448" endTime="2510">
          <HTTPRequest method="GET">
            <HTTPHeaders>
              <HTTPHeaderEntity name="Referer" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvZnMvZnNBc2tQcmljZS5odG1s</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="User-Agent" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Encoding" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Language" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>emgtY24=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Ki8q</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Host" index="6">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Cookie" index="7">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>R0VUIC9yZXNvdXJjZXMvanMvanF1ZXJ5LmNvdW50ZG93bi5qcyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvZnMvZnNBc2tQcmljZS5odG1sDQpVc2VyLUFnZW50OiBNb3ppbGxhLzQuMCAoY29tcGF0aWJsZTsgTVNJRSA4LjA7IFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgVHJpZGVudC80LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEUpDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogemgtY24NCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBtcHMtdGVzdC5oYW9tYWljaGUuY29tDQpDb29raWU6IFNIQVJFSlNFU1NJT05JRD00NWY3YzBhZS0yZWFiLTQ4NGEtYTUzZi1kYjcxMjBkMWU1NWYNCg0K</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
              <HTTPCookies>
                <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                  <HTTPDataSet>
                    <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                      <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                    </HTTPData>
                  </HTTPDataSet>
                  <IsExternalData>false</IsExternalData>
                </HTTPHeaderEntity>
              </HTTPCookies>
            </HTTPHeaders>
          </HTTPRequest>
          <HTTPResponse>
            <HTTPHeaders>
              <HTTPHeaderEntity name="Server" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bmdpbngvMS4xMC4y</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Date" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Type" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Length" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>NDY0MA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Last-Modified" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDQ2NDANCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMTIgSnVuIDIwMTggMjM6NTM6NDYgR01UDQoNCg==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
            </HTTPHeaders>
            <HTTPBody>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>LyoKICogalF1ZXJ5IFRoZSBGaW5hbCBDb3VudGRvd24gcGx1Z2luIHYxLjAuMAogKiBodHRwOi8vZ2l0aHViLmNvbS9oaWxpb3MvanF1ZXJ5LmNvdW50ZG93bgogKgogKiBDb3B5cmlnaHQgKGMpIDIwMTEgRWRzb24gSGlsaW9zCiAqCiAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZwogKiBhIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUKICogIlNvZnR3YXJlIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZwogKiB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsCiAqIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0bwogKiBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8KICogdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgogKgogKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZQogKiBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KICoKICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsCiAqIEVYUFJFU1MgT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRgogKiBNRVJDSEFOVEFCSUxJVFksIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORAogKiBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFCiAqIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04KICogT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OCiAqIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLgogKi8KKGZ1bmN0aW9uKCQpIHsKICAKICAkLmZuLmNvdW50ZG93biA9IGZ1bmN0aW9uKHRvRGF0ZSwgY2FsbGJhY2spIHsKICAgIHZhciBoYW5kbGVycyA9IFsnc2Vjb25kcycsICdtaW51dGVzJywgJ2hvdXJzJywgJ2RheXMnLCAnd2Vla3MnLCAnZGF5c0xlZnQnXTsKICAgIAogICAgZnVuY3Rpb24gZGVsZWdhdGUoc2NvcGUsIG1ldGhvZCkgewogICAgICByZXR1cm4gZnVuY3Rpb24oKSB7IHJldHVybiBtZXRob2QuY2FsbChzY29wZSkgfQogICAgfQogICAgCiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkgewogICAgICAvLyBDb252ZXJ0CiAgICAgIGlmKCEodG9EYXRlIGluc3RhbmNlb2YgRGF0ZSkpIHsKICAgICAgICBpZihTdHJpbmcodG9EYXRlKS5tYXRjaCgvXlswLTldKiQvKSkgewogICAgICAgICAgdG9EYXRlID0gbmV3IERhdGUodG9EYXRlKTsKICAgICAgICB9IGVsc2UgaWYoIHRvRGF0ZS5tYXRjaCgvKFswLTldezEsMn0pXC8oWzAtOV17MSwyfSlcLyhbMC05XXsyLDR9KVxzKFswLTldezEsMn0pXDooWzAtOV17Mn0pXDooWzAtOV17Mn0pLykgfHwKICAgICAgICAgICAgdG9EYXRlLm1hdGNoKC8oWzAtOV17Miw0fSlcLyhbMC05XXsxLDJ9KVwvKFswLTldezEsMn0pXHMoWzAtOV17MSwyfSlcOihbMC05XXsyfSlcOihbMC05XXsyfSkvKQogICAgICAgICAgICApIHsKICAgICAgICAgIHRvRGF0ZSA9IG5ldyBEYXRlKHRvRGF0ZSk7CiAgICAgICAgfSBlbHNlIGlmKHRvRGF0ZS5tYXRjaCgvKFswLTldezEsMn0pXC8oWzAtOV17MSwyfSlcLyhbMC05XXsyLDR9KS8pIHx8IAogICAgICAgICAgICAgICAgICB0b0RhdGUubWF0Y2goLyhbMC05XXsyLDR9KVwvKFswLTldezEsMn0pXC8oWzAtOV17MSwyfSkvKQogICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgIHRvRGF0ZSA9IG5ldyBEYXRlKHRvRGF0ZSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJEb2Vzbid0IHNlZW4gdG8gYmUgYSB2YWxpZCBkYXRlIG9iamVjdCBvciBzdHJpbmciKQogICAgICAgIH0KICAgICAgfQogICAgICAKICAgICAgdmFyICR0aGlzID0gJCh0aGlzKSwKICAgICAgICAgIHZhbHVlcyA9IHt9LAogICAgICAgICAgbGFzdGluZyA9IHt9LAogICAgICAgICAgaW50ZXJ2YWwgPSAkdGhpcy5kYXRhKCdjb3VudGRvd25JbnRlcnZhbCcpLAogICAgICAgICAgY3VycmVudERhdGUgPSBuZXcgRGF0ZSgpLAogICAgICAgICAgc2Vjb25kc0xlZnQgPSBNYXRoLmZsb29yKCh0b0RhdGUudmFsdWVPZigpIC0gY3VycmVudERhdGUudmFsdWVPZigpKSAvIDEwMDApOwogICAgICAKICAgICAgZnVuY3Rpb24gdHJpZ2dlckV2ZW50cygpIHsKICAgICAgICAvLyBFdmFsdWF0ZSBpZiB0aGlzIG5vZGUgaXMgaW5jbHVkZWQgaW4gdGhlIGh0bWwKICAgICAgICBpZigkdGhpcy5jbG9zZXN0KCdodG1sJykubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICBzdG9wKCk7IC8vIFJlbGVhc2UgdGhlIG1lbW9yeQogICAgICAgICAgZGlzcGF0Y2hFdmVudCgncmVtb3ZlZCcpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICAvLyBDYWxjdWxhdGUgdGhlIHRpbWUgb2Zmc2V0CiAgICAgICAgc2Vjb25kc0xlZnQtLTsKICAgICAgICBpZihzZWNvbmRzTGVmdCA8IDApIHsKICAgICAgICAgIHNlY29uZHNMZWZ0ID0gMDsKICAgICAgICB9CiAgICAgICAgbGFzdGluZyA9IHsKICAgICAgICAgIHNlY29uZHMgOiBzZWNvbmRzTGVmdCAlIDYwLAogICAgICAgICAgbWludXRlcyA6IE1hdGguZmxvb3Ioc2Vjb25kc0xlZnQgLyA2MCkgJSA2MCwKICAgICAgICAgIGhvdXJzICAgOiBNYXRoLmZsb29yKHNlY29uZHNMZWZ0IC8gNjAgLyA2MCkgJSAyNCwKICAgICAgICAgIGRheXMgICAgOiBNYXRoLmZsb29yKHNlY29uZHNMZWZ0IC8gNjAgLyA2MCAvIDI0KSwKICAgICAgICAgIHdlZWtzICAgOiBNYXRoLmZsb29yKHNlY29uZHNMZWZ0IC8gNjAgLyA2MCAvIDI0IC8gNyksCiAgICAgICAgICBkYXlzTGVmdDogTWF0aC5mbG9vcihzZWNvbmRzTGVmdCAvIDYwIC8gNjAgLyAyNCkgJSA3CiAgICAgICAgfQogICAgICAgIGZvcih2YXIgaT0wOyBpPGhhbmRsZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgZXZlbnROYW1lID0gaGFuZGxlcnNbaV07CiAgICAgICAgICBpZih2YWx1ZXNbZXZlbnROYW1lXSAhPSBsYXN0aW5nW2V2ZW50TmFtZV0pIHsKICAgICAgICAgICAgdmFsdWVzW2V2ZW50TmFtZV0gPSBsYXN0aW5nW2V2ZW50TmFtZV07CiAgICAgICAgICAgIGRpc3BhdGNoRXZlbnQoZXZlbnROYW1lKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYoc2Vjb25kc0xlZnQgPT0gMCkgeyAKICAgICAgICAgIHN0b3AoKTsKICAgICAgICAgIGRpc3BhdGNoRXZlbnQoJ2ZpbmlzaGVkJyk7CiAgICAgICAgfQogICAgICB9CiAgICAgIHRyaWdnZXJFdmVudHMoKTsKICAgICAgCiAgICAgIGZ1bmN0aW9uIGRpc3BhdGNoRXZlbnQoZXZlbnROYW1lKSB7CiAgICAgICAgdmFyIGV2ZW50ICAgICA9ICQuRXZlbnQoZXZlbnROYW1lKTsKICAgICAgICBldmVudC5kYXRlICAgID0gbmV3IERhdGUobmV3IERhdGUoKS52YWx1ZU9mKCkgKyBzZWNvbmRzTGVmdCk7CiAgICAgICAgZXZlbnQudmFsdWUgICA9IHZhbHVlc1tldmVudE5hbWVdIHx8ICIwIjsKICAgICAgICBldmVudC50b0RhdGUgID0gdG9EYXRlOwogICAgICAgIGV2ZW50Lmxhc3RpbmcgPSBsYXN0aW5nOwogICAgICAgIHN3aXRjaChldmVudE5hbWUpIHsKICAgICAgICAgIGNhc2UgInNlY29uZHMiOgogICAgICAgICAgY2FzZSAibWludXRlcyI6CiAgICAgICAgICBjYXNlICJob3VycyI6CiAgICAgICAgICAgIGV2ZW50LnZhbHVlID0gZXZlbnQudmFsdWUgPCAxMCA/ICcwJytldmVudC52YWx1ZS50b1N0cmluZygpIDogZXZlbnQudmFsdWUudG9TdHJpbmcoKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICBpZihldmVudC52YWx1ZSkgewogICAgICAgICAgICAgIGV2ZW50LnZhbHVlID0gZXZlbnQudmFsdWUudG9TdHJpbmcoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgY2FsbGJhY2suY2FsbCgkdGhpcywgZXZlbnQpOwogICAgICB9CiAgICAgIAogICAgICBmdW5jdGlvbiBzdG9wKCkgewogICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBzdGFydCgpIHsKICAgICAgICAkdGhpcy5kYXRhKCdjb3VudGRvd25JbnRlcnZhbCcsIHNldEludGVydmFsKGRlbGVnYXRlKCR0aGlzLCB0cmlnZ2VyRXZlbnRzKSwgMTAwMCkpOwogICAgICAgIGludGVydmFsID0gJHRoaXMuZGF0YSgnY291bnRkb3duSW50ZXJ2YWwnKTsKICAgICAgfQogICAgICAKICAgICAgaWYoaW50ZXJ2YWwpIHN0b3AoKTsKICAgICAgc3RhcnQoKTsKICAgIH0pOwogIH0KfSkoalF1ZXJ5KTs=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPBody>
          </HTTPResponse>
        </HTTPTask>
        <HTTPTask id="35" hostname="mps-test.haomaiche.com" path="/resources/js/selectTool.js?v=2.7" url="http://mps-test.haomaiche.com/resources/js/selectTool.js?v=2.7" ip="10.0.3.32" port="80" connectionId="1556" origin="HTML" ordinal="2" startTime="2448" endTime="2496">
          <QueryString>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dj0yLjc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </QueryString>
          <HTTPSplittedQueryStrings>
            <HTTPHeaderEntity name="v" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Mi43</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPSplittedQueryStrings>
          <HTTPRequest method="GET">
            <HTTPHeaders>
              <HTTPHeaderEntity name="Referer" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvZnMvZnNBc2tQcmljZS5odG1s</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="User-Agent" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Encoding" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Language" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>emgtY24=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Ki8q</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Host" index="6">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Cookie" index="7">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>R0VUIC9yZXNvdXJjZXMvanMvc2VsZWN0VG9vbC5qcz92PTIuNyBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvZnMvZnNBc2tQcmljZS5odG1sDQpVc2VyLUFnZW50OiBNb3ppbGxhLzQuMCAoY29tcGF0aWJsZTsgTVNJRSA4LjA7IFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgVHJpZGVudC80LjA7IFNMQ0MyOyAuTkVUIENMUiAyLjAuNTA3Mjc7IC5ORVQgQ0xSIDMuNS4zMDcyOTsgLk5FVCBDTFIgMy4wLjMwNzI5OyBNZWRpYSBDZW50ZXIgUEMgNi4wOyAuTkVUNC4wQzsgLk5FVDQuMEUpDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogemgtY24NCkFjY2VwdDogKi8qDQpDb25uZWN0aW9uOiBLZWVwLUFsaXZlDQpIb3N0OiBtcHMtdGVzdC5oYW9tYWljaGUuY29tDQpDb29raWU6IFNIQVJFSlNFU1NJT05JRD00NWY3YzBhZS0yZWFiLTQ4NGEtYTUzZi1kYjcxMjBkMWU1NWYNCg0K</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
              <HTTPCookies>
                <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                  <HTTPDataSet>
                    <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                      <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                    </HTTPData>
                  </HTTPDataSet>
                  <IsExternalData>false</IsExternalData>
                </HTTPHeaderEntity>
              </HTTPCookies>
            </HTTPHeaders>
          </HTTPRequest>
          <HTTPResponse>
            <HTTPHeaders>
              <HTTPHeaderEntity name="Server" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bmdpbngvMS4xMC4y</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Date" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Type" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Length" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>MjU0NTI=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Last-Modified" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>V2VkLCAwOCBBdWcgMjAxOCAyMTo0NzoxMiBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDI1NDUyDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA4IEF1ZyAyMDE4IDIxOjQ3OjEyIEdNVA0KDQo=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
            </HTTPHeaders>
            <HTTPBody>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData></ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPBody>
          </HTTPResponse>
        </HTTPTask>
        <HTTPTask id="36" hostname="mps-test.haomaiche.com" path="/fs/fs/js/fsAskPrice.js?v=1.0" url="http://mps-test.haomaiche.com/fs/fs/js/fsAskPrice.js?v=1.0" ip="10.0.3.32" port="80" connectionId="1584" origin="HTML" ordinal="3" startTime="2448" endTime="2503">
          <QueryString>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dj0xLjA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </QueryString>
          <HTTPSplittedQueryStrings>
            <HTTPHeaderEntity name="v" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MS4w</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPSplittedQueryStrings>
          <HTTPRequest method="GET">
            <HTTPHeaders>
              <HTTPHeaderEntity name="Referer" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>aHR0cDovL21wcy10ZXN0Lmhhb21haWNoZS5jb20vZnMvZnMvZnNBc2tQcmljZS5odG1s</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="User-Agent" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>TW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNC4wOyBTTENDMjsgLk5FVCBDTFIgMi4wLjUwNzI3OyAuTkVUIENMUiAzLjUuMzA3Mjk7IC5ORVQgQ0xSIDMuMC4zMDcyOTsgTWVkaWEgQ2VudGVyIFBDIDYuMDsgLk5FVDQuMEM7IC5ORVQ0LjBFKQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Encoding" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept-Language" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>emgtY24=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Accept" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>Ki8q</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Host" index="6">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bXBzLXRlc3QuaGFvbWFpY2hlLmNvbQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Cookie" index="7">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>U0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>R0VUIC9mcy9mcy9qcy9mc0Fza1ByaWNlLmpzP3Y9MS4wIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwOi8vbXBzLXRlc3QuaGFvbWFpY2hlLmNvbS9mcy9mcy9mc0Fza1ByaWNlLmh0bWwNClVzZXItQWdlbnQ6IE1vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDguMDsgV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzQuMDsgU0xDQzI7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy41LjMwNzI5OyAuTkVUIENMUiAzLjAuMzA3Mjk7IE1lZGlhIENlbnRlciBQQyA2LjA7IC5ORVQ0LjBDOyAuTkVUNC4wRSkNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiB6aC1jbg0KQWNjZXB0OiAqLyoNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IG1wcy10ZXN0Lmhhb21haWNoZS5jb20NCkNvb2tpZTogU0hBUkVKU0VTU0lPTklEPTQ1ZjdjMGFlLTJlYWItNDg0YS1hNTNmLWRiNzEyMGQxZTU1Zg0KDQo=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
              <HTTPCookies>
                <HTTPHeaderEntity name="SHAREJSESSIONID" index="0">
                  <HTTPDataSet>
                    <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                      <ActualData>NDVmN2MwYWUtMmVhYi00ODRhLWE1M2YtZGI3MTIwZDFlNTVm</ActualData>
                    </HTTPData>
                  </HTTPDataSet>
                  <IsExternalData>false</IsExternalData>
                </HTTPHeaderEntity>
              </HTTPCookies>
            </HTTPHeaders>
          </HTTPRequest>
          <HTTPResponse>
            <HTTPHeaders>
              <HTTPHeaderEntity name="Server" index="0">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>bmdpbngvMS4xMC4y</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Date" index="1">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Type" index="2">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Content-Length" index="3">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>ODY4OA==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Connection" index="4">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPHeaderEntity name="Last-Modified" index="5">
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>VHVlLCAxMiBKdW4gMjAxOCAyMzo1Mzo0NiBHTVQ=</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPHeaderEntity>
              <HTTPAllHeaders>
                <HTTPDataSet>
                  <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                    <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54LzEuMTAuMg0KRGF0ZTogVGh1LCAxOSBTZXAgMjAxOSAxMTowMDowNiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vamF2YXNjcmlwdA0KQ29udGVudC1MZW5ndGg6IDg2ODgNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkxhc3QtTW9kaWZpZWQ6IFR1ZSwgMTIgSnVuIDIwMTggMjM6NTM6NDYgR01UDQoNCg==</ActualData>
                  </HTTPData>
                </HTTPDataSet>
                <IsExternalData>false</IsExternalData>
              </HTTPAllHeaders>
            </HTTPHeaders>
            <HTTPBody>
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData></ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPBody>
          </HTTPResponse>
        </HTTPTask>
      </HTTPTask>
    </HTTPTask>
  </HTTPTask>
  <HTTPTask id="26" url="https://c.cnzz.com/core.php?web_id=1262932335&amp;t=z" origin="ExtraRes" ordinal="1" startTime="1306">
    <HTTPRequest method="GET" />
  </HTTPTask>
  <HTTPTask id="27" url="https://cnzz.mmstat.com/9.gif?abc=1&amp;rnd=1903752157" origin="ExtraRes" ordinal="2" startTime="1306" endTime="2408">
    <HTTPRequest method="GET" />
  </HTTPTask>
</HTTPSnapshot>